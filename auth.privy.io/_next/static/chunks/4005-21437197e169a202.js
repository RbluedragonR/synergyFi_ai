(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
  [4005],
  {
    1811: (e, t, r) => {
      "use strict";
      r.d(t, { _: () => n });
      let n = (0, r(12644).x)({
        id: 0xa0c71fd,
        name: "Blast Sepolia",
        nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://sepolia.blast.io"] } },
        blockExplorers: {
          default: {
            name: "Blastscan",
            url: "https://sepolia.blastscan.io",
            apiUrl: "https://api-sepolia.blastscan.io/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 756690,
          },
        },
        testnet: !0,
        sourceId: 0xaa36a7,
      });
    },
    3010: (e, t, r) => {
      "use strict";
      r.d(t, { h: () => n });
      let n = (0, r(12644).x)({
        id: 5,
        name: "Goerli",
        nativeCurrency: { name: "Goerli Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://5.rpc.thirdweb.com"] } },
        blockExplorers: {
          default: {
            name: "Etherscan",
            url: "https://goerli.etherscan.io",
            apiUrl: "https://api-goerli.etherscan.io/api",
          },
        },
        contracts: {
          ensRegistry: {
            address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
          },
          ensUniversalResolver: {
            address: "0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1",
            blockCreated: 0x9dc386,
          },
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 6507670,
          },
        },
        testnet: !0,
      });
    },
    3098: (e, t, r) => {
      "use strict";
      function n(e) {
        return (
          e instanceof Uint8Array ||
          (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
        );
      }
      function i(e, t) {
        return (
          !!Array.isArray(t) &&
          (0 === t.length ||
            (e
              ? t.every((e) => "string" == typeof e)
              : t.every((e) => Number.isSafeInteger(e))))
        );
      }
      function o(e) {
        if ("function" != typeof e) throw Error("function expected");
        return !0;
      }
      function a(e, t) {
        if ("string" != typeof t) throw Error(`${e}: string expected`);
        return !0;
      }
      function s(e) {
        if (!Number.isSafeInteger(e)) throw Error(`invalid integer: ${e}`);
      }
      function l(e) {
        if (!Array.isArray(e)) throw Error("array expected");
      }
      function f(e, t) {
        if (!i(!0, t)) throw Error(`${e}: array of strings expected`);
      }
      function u(...e) {
        let t = (e) => e,
          r = (e, t) => (r) => e(t(r));
        return {
          encode: e.map((e) => e.encode).reduceRight(r, t),
          decode: e.map((e) => e.decode).reduce(r, t),
        };
      }
      function c(e) {
        let t = "string" == typeof e ? e.split("") : e,
          r = t.length;
        f("alphabet", t);
        let n = new Map(t.map((e, t) => [e, t]));
        return {
          encode: (n) => (
            l(n),
            n.map((n) => {
              if (!Number.isSafeInteger(n) || n < 0 || n >= r)
                throw Error(
                  `alphabet.encode: digit index outside alphabet "${n}". Allowed: ${e}`
                );
              return t[n];
            })
          ),
          decode: (t) => (
            l(t),
            t.map((t) => {
              a("alphabet.decode", t);
              let r = n.get(t);
              if (void 0 === r)
                throw Error(`Unknown letter: "${t}". Allowed: ${e}`);
              return r;
            })
          ),
        };
      }
      function h(e = "") {
        return (
          a("join", e),
          {
            encode: (t) => (f("join.decode", t), t.join(e)),
            decode: (t) => (a("join.decode", t), t.split(e)),
          }
        );
      }
      r.d(t, {
        wg: () => _,
        eV: () => J,
        d: () => G,
        Cq: () => S,
        MX: () => ee,
        Iz: () => Z,
        C: () => Q,
        QK: () => X,
        dg: () => V,
        U8: () => et,
        Bb: () => ea,
        YO: () => ed,
        ee: () => er,
        Lo: () => z,
        Jt: () => es,
        fv: () => el,
        uh: () => eo,
        GE: () => ef,
        Pl: () => en,
        Yj: () => ei,
        w3: () => ec,
        PV: () => eh,
        Wp: () => I,
        tf: () => H,
        LV: () => D,
      });
      let d = (e, t) => (0 === t ? e : d(t, e % t)),
        p = (e, t) => e + (t - d(e, t)),
        y = (() => {
          let e = [];
          for (let t = 0; t < 40; t++) e.push(2 ** t);
          return e;
        })();
      function g(e, t, r, n) {
        if ((l(e), t <= 0 || t > 32))
          throw Error(`convertRadix2: wrong from=${t}`);
        if (r <= 0 || r > 32) throw Error(`convertRadix2: wrong to=${r}`);
        if (p(t, r) > 32)
          throw Error(
            `convertRadix2: carry overflow from=${t} to=${r} carryBits=${p(
              t,
              r
            )}`
          );
        let i = 0,
          o = 0,
          a = y[t],
          f = y[r] - 1,
          u = [];
        for (let n of e) {
          if ((s(n), n >= a))
            throw Error(`convertRadix2: invalid data word=${n} from=${t}`);
          if (((i = (i << t) | n), o + t > 32))
            throw Error(`convertRadix2: carry overflow pos=${o} from=${t}`);
          for (o += t; o >= r; o -= r) u.push(((i >> (o - r)) & f) >>> 0);
          let e = y[o];
          if (void 0 === e) throw Error("invalid carry");
          i &= e - 1;
        }
        if (((i = (i << (r - o)) & f), !n && o >= t))
          throw Error("Excess padding");
        if (!n && i > 0) throw Error(`Non-zero padding: ${i}`);
        return n && o > 0 && u.push(i >>> 0), u;
      }
      let b =
          "function" == typeof Uint8Array.from([]).toBase64 &&
          "function" == typeof Uint8Array.fromBase64,
        m = u(c("qpzry9x8gf2tvdw0s3jn54khce6mua7l"), h("")),
        w = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];
      function v(e) {
        let t = e >> 25,
          r = (0x1ffffff & e) << 5;
        for (let e = 0; e < w.length; e++) ((t >> e) & 1) == 1 && (r ^= w[e]);
        return r;
      }
      let x = {
          encode: (e) => new TextDecoder().decode(e),
          decode: (e) => new TextEncoder().encode(e),
        },
        E =
          "function" == typeof Uint8Array.from([]).toHex &&
          "function" == typeof Uint8Array.fromHex
            ? {
                encode: (e) => (
                  (function (e, ...t) {
                    if (!n(e)) throw Error("Uint8Array expected");
                    if (t.length > 0 && !t.includes(e.length))
                      throw Error(
                        "Uint8Array expected of length " +
                          t +
                          ", got length=" +
                          e.length
                      );
                  })(e),
                  e.toHex()
                ),
                decode: (e) => (a("hex", e), Uint8Array.fromHex(e)),
              }
            : u(
                (function (e, t = !1) {
                  if ((s(4), e <= 0 || e > 32))
                    throw Error("radix2: bits should be in (0..32]");
                  if (p(8, e) > 32 || p(e, 8) > 32)
                    throw Error("radix2: carry overflow");
                  return {
                    encode: (r) => {
                      if (!n(r))
                        throw Error("radix2.encode input should be Uint8Array");
                      return g(Array.from(r), 8, e, !t);
                    },
                    decode: (r) => (
                      (function (e, t) {
                        if (!i(!1, t))
                          throw Error(`${e}: array of numbers expected`);
                      })("radix2.decode", r),
                      Uint8Array.from(g(r, e, 8, t))
                    ),
                  };
                })(4),
                c("0123456789abcdef"),
                h(""),
                (function (e) {
                  return o(e), { encode: (e) => e, decode: (t) => e(t) };
                })((e) => {
                  if ("string" != typeof e || e.length % 2 != 0)
                    throw TypeError(
                      `hex.decode: expected string, got ${typeof e} with length ${
                        e.length
                      }`
                    );
                  return e.toLowerCase();
                })
              ),
        _ = new Uint8Array(),
        S = new Uint8Array([0]);
      function A(e, t) {
        if (e.length !== t.length) return !1;
        for (let r = 0; r < e.length; r++) if (e[r] !== t[r]) return !1;
        return !0;
      }
      function B(e) {
        return (
          e instanceof Uint8Array ||
          (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
        );
      }
      let k = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength);
      function O(e) {
        return "[object Object]" === Object.prototype.toString.call(e);
      }
      function T(e) {
        return Number.isSafeInteger(e);
      }
      let I = {
          equalBytes: A,
          isBytes: B,
          isCoder: $,
          checkBounds: N,
          concatBytes: function (...e) {
            let t = 0;
            for (let r = 0; r < e.length; r++) {
              let n = e[r];
              if (!B(n)) throw Error("Uint8Array expected");
              t += n.length;
            }
            let r = new Uint8Array(t);
            for (let t = 0, n = 0; t < e.length; t++) {
              let i = e[t];
              r.set(i, n), (n += i.length);
            }
            return r;
          },
          createView: k,
          isPlainObject: O,
        },
        R = (e) => {
          if (null !== e && "string" != typeof e && !$(e) && !B(e) && !T(e))
            throw Error(
              `lengthCoder: expected null | number | Uint8Array | CoderType, got ${e} (${typeof e})`
            );
          return {
            encodeStream(t, r) {
              let n;
              if (null !== e) {
                if ($(e)) return e.encodeStream(t, r);
                if (
                  ("number" == typeof e
                    ? (n = e)
                    : "string" == typeof e && (n = P.resolve(t.stack, e)),
                  "bigint" == typeof n && (n = Number(n)),
                  void 0 === n || n !== r)
                )
                  throw t.err(
                    `Wrong length: ${n} len=${e} exp=${r} (${typeof r})`
                  );
              }
            },
            decodeStream(t) {
              let r;
              if (
                ($(e)
                  ? (r = Number(e.decodeStream(t)))
                  : "number" == typeof e
                  ? (r = e)
                  : "string" == typeof e && (r = P.resolve(t.stack, e)),
                "bigint" == typeof r && (r = Number(r)),
                "number" != typeof r)
              )
                throw t.err(`Wrong length: ${r}`);
              return r;
            },
          };
        },
        M = {
          BITS: 32,
          FULL_MASK: 0xffffffff,
          len: (e) => Math.ceil(e / 32),
          create: (e) => new Uint32Array(M.len(e)),
          clean: (e) => e.fill(0),
          debug: (e) =>
            Array.from(e).map((e) => (e >>> 0).toString(2).padStart(32, "0")),
          checkLen: (e, t) => {
            if (M.len(t) !== e.length)
              throw Error(`wrong length=${e.length}. Expected: ${M.len(t)}`);
          },
          chunkLen: (e, t, r) => {
            if (t < 0) throw Error(`wrong pos=${t}`);
            if (t + r > e) throw Error(`wrong range=${t}/${r} of ${e}`);
          },
          set: (e, t, r, n = !0) =>
            (!!n || (e[t] & r) == 0) && ((e[t] |= r), !0),
          pos: (e, t) => ({
            chunk: Math.floor((e + t) / 32),
            mask: 1 << (32 - ((e + t) % 32) - 1),
          }),
          indices: (e, t, r = !1) => {
            M.checkLen(e, t);
            let { FULL_MASK: n, BITS: i } = M,
              o = i - (t % i),
              a = o ? (n >>> o) << o : n,
              s = [];
            for (let t = 0; t < e.length; t++) {
              let n = e[t];
              if ((r && (n = ~n), t === e.length - 1 && (n &= a), 0 !== n))
                for (let e = 0; e < i; e++)
                  n & (1 << (i - e - 1)) && s.push(t * i + e);
            }
            return s;
          },
          range: (e) => {
            let t;
            let r = [];
            for (let n of e)
              void 0 === t || n !== t.pos + t.length
                ? r.push((t = { pos: n, length: 1 }))
                : (t.length += 1);
            return r;
          },
          rangeDebug: (e, t, r = !1) =>
            `[${M.range(M.indices(e, t, r))
              .map((e) => `(${e.pos}/${e.length})`)
              .join(", ")}]`,
          setRange: (e, t, r, n, i = !0) => {
            M.chunkLen(t, r, n);
            let { FULL_MASK: o, BITS: a } = M,
              s = r % a ? Math.floor(r / a) : void 0,
              l = r + n,
              f = l % a ? Math.floor(l / a) : void 0;
            if (void 0 !== s && s === f)
              return M.set(e, s, (o >>> (a - n)) << (a - n - r), i);
            if (void 0 !== s && !M.set(e, s, o >>> r % a, i)) return !1;
            let u = void 0 !== s ? s + 1 : r / a,
              c = void 0 !== f ? f : l / a;
            for (let t = u; t < c; t++) if (!M.set(e, t, o, i)) return !1;
            return !!(
              void 0 === f ||
              s === f ||
              M.set(e, f, o << (a - (l % a)), i)
            );
          },
        },
        P = {
          pushObj: (e, t, r) => {
            let n = { obj: t };
            e.push(n),
              r((e, t) => {
                (n.field = e), t(), (n.field = void 0);
              }),
              e.pop();
          },
          path: (e) => {
            let t = [];
            for (let r of e) void 0 !== r.field && t.push(r.field);
            return t.join("/");
          },
          err: (e, t, r) => {
            let n = Error(
              `${e}(${P.path(t)}): ${"string" == typeof r ? r : r.message}`
            );
            return r instanceof Error && r.stack && (n.stack = r.stack), n;
          },
          resolve: (e, t) => {
            let r = t.split("/"),
              n = e.map((e) => e.obj),
              i = 0;
            for (; i < r.length && ".." === r[i]; i++) n.pop();
            let o = n.pop();
            for (; i < r.length; i++) {
              if (!o || void 0 === o[r[i]]) return;
              o = o[r[i]];
            }
            return o;
          },
        };
      class C {
        constructor(e, t = {}, r = [], n, i = 0) {
          (this.pos = 0),
            (this.bitBuf = 0),
            (this.bitPos = 0),
            (this.data = e),
            (this.opts = t),
            (this.stack = r),
            (this.parent = n),
            (this.parentOffset = i),
            (this.view = k(e));
        }
        _enablePointers() {
          if (this.parent) return this.parent._enablePointers();
          this.bs ||
            ((this.bs = M.create(this.data.length)),
            M.setRange(
              this.bs,
              this.data.length,
              0,
              this.pos,
              this.opts.allowMultipleReads
            ));
        }
        markBytesBS(e, t) {
          return this.parent
            ? this.parent.markBytesBS(this.parentOffset + e, t)
            : !t || !this.bs || M.setRange(this.bs, this.data.length, e, t, !1);
        }
        markBytes(e) {
          let t = this.pos;
          this.pos += e;
          let r = this.markBytesBS(t, e);
          if (!this.opts.allowMultipleReads && !r)
            throw this.err(`multiple read pos=${this.pos} len=${e}`);
          return r;
        }
        pushObj(e, t) {
          return P.pushObj(this.stack, e, t);
        }
        readView(e, t) {
          if (!Number.isFinite(e))
            throw this.err(`readView: wrong length=${e}`);
          if (this.pos + e > this.data.length)
            throw this.err("readView: Unexpected end of buffer");
          let r = t(this.view, this.pos);
          return this.markBytes(e), r;
        }
        absBytes(e) {
          if (e > this.data.length) throw Error("Unexpected end of buffer");
          return this.data.subarray(e);
        }
        finish() {
          if (!this.opts.allowUnreadBytes) {
            if (this.bitPos)
              throw this.err(
                `${this.bitPos} bits left after unpack: ${E.encode(
                  this.data.slice(this.pos)
                )}`
              );
            if (this.bs && !this.parent) {
              let e = M.indices(this.bs, this.data.length, !0);
              if (!e.length) return;
              {
                let t = M.range(e)
                  .map(
                    ({ pos: e, length: t }) =>
                      `(${e}/${t})[${E.encode(this.data.subarray(e, e + t))}]`
                  )
                  .join(", ");
                throw this.err(
                  `unread byte ranges: ${t} (total=${this.data.length})`
                );
              }
            }
            if (!this.isEnd())
              throw this.err(
                `${this.leftBytes} bytes ${
                  this.bitPos
                } bits left after unpack: ${E.encode(
                  this.data.slice(this.pos)
                )}`
              );
          }
        }
        err(e) {
          return P.err("Reader", this.stack, e);
        }
        offsetReader(e) {
          if (e > this.data.length)
            throw this.err("offsetReader: Unexpected end of buffer");
          return new C(this.absBytes(e), this.opts, this.stack, this, e);
        }
        bytes(e, t = !1) {
          if (this.bitPos) throw this.err("readBytes: bitPos not empty");
          if (!Number.isFinite(e))
            throw this.err(`readBytes: wrong length=${e}`);
          if (this.pos + e > this.data.length)
            throw this.err("readBytes: Unexpected end of buffer");
          let r = this.data.subarray(this.pos, this.pos + e);
          return t || this.markBytes(e), r;
        }
        byte(e = !1) {
          if (this.bitPos) throw this.err("readByte: bitPos not empty");
          if (this.pos + 1 > this.data.length)
            throw this.err("readBytes: Unexpected end of buffer");
          let t = this.data[this.pos];
          return e || this.markBytes(1), t;
        }
        get leftBytes() {
          return this.data.length - this.pos;
        }
        get totalBytes() {
          return this.data.length;
        }
        isEnd() {
          return this.pos >= this.data.length && !this.bitPos;
        }
        bits(e) {
          if (e > 32)
            throw this.err(
              "BitReader: cannot read more than 32 bits in single call"
            );
          let t = 0;
          for (; e; ) {
            this.bitPos || ((this.bitBuf = this.byte()), (this.bitPos = 8));
            let r = Math.min(e, this.bitPos);
            (this.bitPos -= r),
              (t = (t << r) | ((this.bitBuf >> this.bitPos) & (2 ** r - 1))),
              (this.bitBuf &= 2 ** this.bitPos - 1),
              (e -= r);
          }
          return t >>> 0;
        }
        find(e, t = this.pos) {
          if (!B(e)) throw this.err(`find: needle is not bytes! ${e}`);
          if (this.bitPos) throw this.err("findByte: bitPos not empty");
          if (!e.length) throw this.err("find: needle is empty");
          for (
            let r = t;
            -1 !== (r = this.data.indexOf(e[0], r)) &&
            -1 !== r &&
            !(this.data.length - r < e.length);
            r++
          )
            if (A(e, this.data.subarray(r, r + e.length))) return r;
        }
      }
      class U {
        constructor(e = []) {
          (this.pos = 0),
            (this.buffers = []),
            (this.ptrs = []),
            (this.bitBuf = 0),
            (this.bitPos = 0),
            (this.viewBuf = new Uint8Array(8)),
            (this.finished = !1),
            (this.stack = e),
            (this.view = k(this.viewBuf));
        }
        pushObj(e, t) {
          return P.pushObj(this.stack, e, t);
        }
        writeView(e, t) {
          if (this.finished) throw this.err("buffer: finished");
          if (!T(e) || e > 8) throw Error(`wrong writeView length=${e}`);
          t(this.view),
            this.bytes(this.viewBuf.slice(0, e)),
            this.viewBuf.fill(0);
        }
        err(e) {
          if (this.finished) throw this.err("buffer: finished");
          return P.err("Reader", this.stack, e);
        }
        bytes(e) {
          if (this.finished) throw this.err("buffer: finished");
          if (this.bitPos)
            throw this.err("writeBytes: ends with non-empty bit buffer");
          this.buffers.push(e), (this.pos += e.length);
        }
        byte(e) {
          if (this.finished) throw this.err("buffer: finished");
          if (this.bitPos)
            throw this.err("writeByte: ends with non-empty bit buffer");
          this.buffers.push(new Uint8Array([e])), this.pos++;
        }
        finish(e = !0) {
          if (this.finished) throw this.err("buffer: finished");
          if (this.bitPos)
            throw this.err("buffer: ends with non-empty bit buffer");
          let t = this.buffers.concat(this.ptrs.map((e) => e.buffer)),
            r = new Uint8Array(
              t.map((e) => e.length).reduce((e, t) => e + t, 0)
            );
          for (let e = 0, n = 0; e < t.length; e++) {
            let i = t[e];
            r.set(i, n), (n += i.length);
          }
          for (let e = this.pos, t = 0; t < this.ptrs.length; t++) {
            let n = this.ptrs[t];
            r.set(n.ptr.encode(e), n.pos), (e += n.buffer.length);
          }
          if (e) {
            for (let e of ((this.buffers = []), this.ptrs)) e.buffer.fill(0);
            (this.ptrs = []), (this.finished = !0), (this.bitBuf = 0);
          }
          return r;
        }
        bits(e, t) {
          if (t > 32)
            throw this.err(
              "writeBits: cannot write more than 32 bits in single call"
            );
          if (e >= 2 ** t)
            throw this.err(`writeBits: value (${e}) >= 2**bits (${t})`);
          for (; t; ) {
            let r = Math.min(t, 8 - this.bitPos);
            (this.bitBuf = (this.bitBuf << r) | (e >> (t - r))),
              (this.bitPos += r),
              (t -= r),
              (e &= 2 ** t - 1),
              8 === this.bitPos &&
                ((this.bitPos = 0),
                this.buffers.push(new Uint8Array([this.bitBuf])),
                this.pos++);
          }
        }
      }
      let L = (e) => Uint8Array.from(e).reverse();
      function N(e, t, r) {
        if (r) {
          let r = 2n ** (t - 1n);
          if (e < -r || e >= r)
            throw Error(
              `value out of signed bounds. Expected ${-r} <= ${e} < ${r}`
            );
        } else if (0n > e || e >= 2n ** t)
          throw Error(
            `value out of unsigned bounds. Expected 0 <= ${e} < ${2n ** t}`
          );
      }
      function j(e) {
        return {
          encodeStream: e.encodeStream,
          decodeStream: e.decodeStream,
          size: e.size,
          encode: (t) => {
            let r = new U();
            return e.encodeStream(r, t), r.finish();
          },
          decode: (t, r = {}) => {
            let n = new C(t, r),
              i = e.decodeStream(n);
            return n.finish(), i;
          },
        };
      }
      function H(e, t) {
        if (!$(e)) throw Error(`validate: invalid inner value ${e}`);
        if ("function" != typeof t)
          throw Error("validate: fn should be function");
        return j({
          size: e.size,
          encodeStream: (r, n) => {
            let i;
            try {
              i = t(n);
            } catch (e) {
              throw r.err(e);
            }
            e.encodeStream(r, i);
          },
          decodeStream: (r) => {
            let n = e.decodeStream(r);
            try {
              return t(n);
            } catch (e) {
              throw r.err(e);
            }
          },
        });
      }
      let D = (e) => {
          let t = j(e);
          return e.validate ? H(t, e.validate) : t;
        },
        F = (e) =>
          O(e) &&
          "function" == typeof e.decode &&
          "function" == typeof e.encode;
      function $(e) {
        return (
          O(e) &&
          F(e) &&
          "function" == typeof e.encodeStream &&
          "function" == typeof e.decodeStream &&
          (void 0 === e.size || T(e.size))
        );
      }
      let q = (e) => {
          if (!F(e)) throw Error("BaseCoder expected");
          return { encode: e.decode, decode: e.encode };
        },
        z = {
          dict: function () {
            return {
              encode: (e) => {
                if (!Array.isArray(e)) throw Error("array expected");
                let t = {};
                for (let r of e) {
                  if (!Array.isArray(r) || 2 !== r.length)
                    throw Error("array of two elements expected");
                  let e = r[0],
                    n = r[1];
                  if (void 0 !== t[e])
                    throw Error(`key(${e}) appears twice in struct`);
                  t[e] = n;
                }
                return t;
              },
              decode: (e) => {
                if (!O(e)) throw Error(`expected plain object, got ${e}`);
                return Object.entries(e);
              },
            };
          },
          numberBigint: {
            encode: (e) => {
              if ("bigint" != typeof e)
                throw Error(`expected bigint, got ${typeof e}`);
              if (e > BigInt(Number.MAX_SAFE_INTEGER))
                throw Error(`element bigger than MAX_SAFE_INTEGER=${e}`);
              return Number(e);
            },
            decode: (e) => {
              if (!T(e)) throw Error("element is not a safe integer");
              return BigInt(e);
            },
          },
          tsEnum: function (e) {
            if (!O(e)) throw Error("plain object expected");
            return {
              encode: (t) => {
                if (!T(t) || !(t in e)) throw Error(`wrong value ${t}`);
                return e[t];
              },
              decode: (t) => {
                if ("string" != typeof t)
                  throw Error(`wrong value ${typeof t}`);
                return e[t];
              },
            };
          },
          decimal: function (e, t = !1) {
            if (!T(e)) throw Error(`decimal/precision: wrong value ${e}`);
            if ("boolean" != typeof t)
              throw Error(`decimal/round: expected boolean, got ${typeof t}`);
            let r = 10n ** BigInt(e);
            return {
              encode: (t) => {
                if ("bigint" != typeof t)
                  throw Error(`expected bigint, got ${typeof t}`);
                let r = (t < 0n ? -t : t).toString(10),
                  n = r.length - e;
                n < 0 && ((r = r.padStart(r.length - n, "0")), (n = 0));
                let i = r.length - 1;
                for (; i >= n && "0" === r[i]; i--);
                let o = r.slice(0, n),
                  a = r.slice(n, i + 1);
                return (o || (o = "0"), t < 0n && (o = "-" + o), a)
                  ? `${o}.${a}`
                  : o;
              },
              decode: (n) => {
                if ("string" != typeof n)
                  throw Error(`expected string, got ${typeof n}`);
                if ("-0" === n) throw Error("negative zero is not allowed");
                let i = !1;
                if (
                  (n.startsWith("-") && ((i = !0), (n = n.slice(1))),
                  !/^(0|[1-9]\d*)(\.\d+)?$/.test(n))
                )
                  throw Error(`wrong string value=${n}`);
                let o = n.indexOf(".");
                o = -1 === o ? n.length : o;
                let a = n.slice(0, o),
                  s = n.slice(o + 1).replace(/0+$/, ""),
                  l = BigInt(a) * r;
                if (!t && s.length > e)
                  throw Error(
                    `fractional part cannot be represented with this precision (num=${n}, prec=${e})`
                  );
                let f = Math.min(s.length, e),
                  u = l + BigInt(s.slice(0, f)) * 10n ** BigInt(e - f);
                return i ? -u : u;
              },
            };
          },
          match: function (e) {
            if (!Array.isArray(e))
              throw Error(`expected array, got ${typeof e}`);
            for (let t of e) if (!F(t)) throw Error(`wrong base coder ${t}`);
            return {
              encode: (t) => {
                for (let r of e) {
                  let e = r.encode(t);
                  if (void 0 !== e) return e;
                }
                throw Error(`match/encode: cannot find match in ${t}`);
              },
              decode: (t) => {
                for (let r of e) {
                  let e = r.decode(t);
                  if (void 0 !== e) return e;
                }
                throw Error(`match/decode: cannot find match in ${t}`);
              },
            };
          },
          reverse: q,
        },
        K = (e, t = !1, r = !1, n = !0) => {
          if (!T(e)) throw Error(`bigint/size: wrong value ${e}`);
          if ("boolean" != typeof t)
            throw Error(`bigint/le: expected boolean, got ${typeof t}`);
          if ("boolean" != typeof r)
            throw Error(`bigint/signed: expected boolean, got ${typeof r}`);
          if ("boolean" != typeof n)
            throw Error(`bigint/sized: expected boolean, got ${typeof n}`);
          let i = BigInt(e),
            o = 2n ** (8n * i - 1n);
          return D({
            size: n ? e : void 0,
            encodeStream: (i, a) => {
              r && a < 0 && (a |= o);
              let s = [];
              for (let t = 0; t < e; t++) s.push(Number(255n & a)), (a >>= 8n);
              let l = new Uint8Array(s).reverse();
              if (!n) {
                let e = 0;
                for (e = 0; e < l.length && 0 === l[e]; e++);
                l = l.subarray(e);
              }
              i.bytes(t ? l.reverse() : l);
            },
            decodeStream: (i) => {
              let a = i.bytes(n ? e : Math.min(e, i.leftBytes)),
                s = t ? a : L(a),
                l = 0n;
              for (let e = 0; e < s.length; e++)
                l |= BigInt(s[e]) << (8n * BigInt(e));
              return r && l & o && (l = (l ^ o) - o), l;
            },
            validate: (e) => {
              if ("bigint" != typeof e)
                throw Error(`bigint: invalid value: ${e}`);
              return N(e, 8n * i, !!r), e;
            },
          });
        },
        Z = K(32, !1),
        V = K(8, !0),
        G = K(8, !0, !0),
        W = (e, t) =>
          D({
            size: e,
            encodeStream: (r, n) => r.writeView(e, (e) => t.write(e, n)),
            decodeStream: (r) => r.readView(e, t.read),
            validate: (e) => {
              if ("number" != typeof e)
                throw Error(`viewCoder: expected number, got ${typeof e}`);
              return t.validate && t.validate(e), e;
            },
          }),
        Y = (e, t, r) => {
          let n = 8 * e,
            i = 2 ** (n - 1),
            o = 2 ** n;
          return W(e, {
            write: r.write,
            read: r.read,
            validate: t
              ? (e) => {
                  if (!T(e))
                    throw Error(`sintView: value is not safe integer: ${e}`);
                  if (e < -i || e >= i)
                    throw Error(
                      `sintView: value out of bounds. Expected ${-i} <= ${e} < ${i}`
                    );
                }
              : (e) => {
                  if (!T(e))
                    throw Error(`uintView: value is not safe integer: ${e}`);
                  if (0 > e || e >= o)
                    throw Error(
                      `uintView: value out of bounds. Expected 0 <= ${e} < ${o}`
                    );
                },
          });
        },
        X = Y(4, !1, {
          read: (e, t) => e.getUint32(t, !0),
          write: (e, t) => e.setUint32(0, t, !0),
        }),
        Q = Y(4, !1, {
          read: (e, t) => e.getUint32(t, !1),
          write: (e, t) => e.setUint32(0, t, !1),
        }),
        J = Y(4, !0, {
          read: (e, t) => e.getInt32(t, !0),
          write: (e, t) => e.setInt32(0, t, !0),
        }),
        ee = Y(2, !1, {
          read: (e, t) => e.getUint16(t, !0),
          write: (e, t) => e.setUint16(0, t, !0),
        }),
        et = Y(1, !1, {
          read: (e, t) => e.getUint8(t),
          write: (e, t) => e.setUint8(0, t),
        }),
        er = (e, t = !1) => {
          if ("boolean" != typeof t)
            throw Error(`bytes/le: expected boolean, got ${typeof t}`);
          let r = R(e),
            n = B(e);
          return D({
            size: "number" == typeof e ? e : void 0,
            encodeStream: (i, o) => {
              n || r.encodeStream(i, o.length),
                i.bytes(t ? L(o) : o),
                n && i.bytes(e);
            },
            decodeStream: (i) => {
              let o;
              if (n) {
                let t = i.find(e);
                if (!t) throw i.err("bytes: cannot find terminator");
                (o = i.bytes(t - i.pos)), i.bytes(e.length);
              } else o = i.bytes(null === e ? i.leftBytes : r.decodeStream(i));
              return t ? L(o) : o;
            },
            validate: (e) => {
              if (!B(e)) throw Error(`bytes: invalid value ${e}`);
              return e;
            },
          });
        };
      function en(e, t) {
        if (!$(t)) throw Error(`prefix: invalid inner value ${t}`);
        return ea(er(e), q(t));
      }
      let ei = (e, t = !1) =>
          H(ea(er(e, t), x), (e) => {
            if ("string" != typeof e)
              throw Error(`expected string, got ${typeof e}`);
            return e;
          }),
        eo = (e, t = { isLE: !1, with0x: !1 }) => {
          let r = ea(er(e, t.isLE), E),
            n = t.with0x;
          if ("boolean" != typeof n)
            throw Error(`hex/with0x: expected boolean, got ${typeof n}`);
          return (
            n &&
              (r = ea(r, {
                encode: (e) => `0x${e}`,
                decode: (e) => {
                  if (!e.startsWith("0x"))
                    throw Error(
                      "hex(with0x=true).encode input should start with 0x"
                    );
                  return e.slice(2);
                },
              })),
            r
          );
        };
      function ea(e, t) {
        if (!$(e)) throw Error(`apply: invalid inner value ${e}`);
        if (!F(t)) throw Error(`apply: invalid base value ${e}`);
        return D({
          size: e.size,
          encodeStream: (r, n) => {
            let i;
            try {
              i = t.decode(n);
            } catch (e) {
              throw r.err("" + e);
            }
            return e.encodeStream(r, i);
          },
          decodeStream: (r) => {
            let n = e.decodeStream(r);
            try {
              return t.encode(n);
            } catch (e) {
              throw r.err("" + e);
            }
          },
        });
      }
      let es = (e, t = !1) => {
        if (!B(e))
          throw Error(`flag/flagValue: expected Uint8Array, got ${typeof e}`);
        if ("boolean" != typeof t)
          throw Error(`flag/xor: expected boolean, got ${typeof t}`);
        return D({
          size: e.length,
          encodeStream: (r, n) => {
            !!n !== t && r.bytes(e);
          },
          decodeStream: (r) => {
            let n = r.leftBytes >= e.length;
            return (
              n && (n = A(r.bytes(e.length, !0), e)) && r.bytes(e.length),
              n !== t
            );
          },
          validate: (e) => {
            if (void 0 !== e && "boolean" != typeof e)
              throw Error(
                `flag: expected boolean value or undefined, got ${typeof e}`
              );
            return e;
          },
        });
      };
      function el(e, t, r) {
        if (!$(t)) throw Error(`flagged: invalid inner value ${t}`);
        if ("string" != typeof e && !$(t))
          throw Error(`flagged: wrong path=${e}`);
        return D({
          encodeStream: (n, i) => {
            "string" == typeof e
              ? P.resolve(n.stack, e)
                ? t.encodeStream(n, i)
                : r && t.encodeStream(n, r)
              : (e.encodeStream(n, !!i),
                i ? t.encodeStream(n, i) : r && t.encodeStream(n, r));
          },
          decodeStream: (n) => {
            let i = !1;
            if (
              "string" == typeof e ? !!P.resolve(n.stack, e) : e.decodeStream(n)
            )
              return t.decodeStream(n);
            r && t.decodeStream(n);
          },
        });
      }
      function ef(e, t, r = !0) {
        if (!$(e)) throw Error(`magic: invalid inner value ${e}`);
        if ("boolean" != typeof r)
          throw Error(`magic: expected boolean, got ${typeof r}`);
        return D({
          size: e.size,
          encodeStream: (r, n) => e.encodeStream(r, t),
          decodeStream: (n) => {
            let i = e.decodeStream(n);
            if ((r && "object" != typeof i && i !== t) || (B(t) && !A(t, i)))
              throw n.err(`magic: invalid value: ${i} !== ${t}`);
          },
          validate: (e) => {
            if (void 0 !== e) throw Error(`magic: wrong value=${typeof e}`);
            return e;
          },
        });
      }
      function eu(e) {
        let t = 0;
        for (let r of e) {
          if (void 0 === r.size) return;
          if (!T(r.size)) throw Error(`sizeof: wrong element size=${t}`);
          t += r.size;
        }
        return t;
      }
      function ec(e) {
        if (!O(e)) throw Error(`struct: expected plain object, got ${e}`);
        for (let t in e)
          if (!$(e[t])) throw Error(`struct: field ${t} is not CoderType`);
        return D({
          size: eu(Object.values(e)),
          encodeStream: (t, r) => {
            t.pushObj(r, (n) => {
              for (let i in e) n(i, () => e[i].encodeStream(t, r[i]));
            });
          },
          decodeStream: (t) => {
            let r = {};
            return (
              t.pushObj(r, (n) => {
                for (let i in e) n(i, () => (r[i] = e[i].decodeStream(t)));
              }),
              r
            );
          },
          validate: (e) => {
            if ("object" != typeof e || null === e)
              throw Error(`struct: invalid value ${e}`);
            return e;
          },
        });
      }
      function eh(e) {
        if (!Array.isArray(e))
          throw Error(`Packed.Tuple: got ${typeof e} instead of array`);
        for (let t = 0; t < e.length; t++)
          if (!$(e[t])) throw Error(`tuple: field ${t} is not CoderType`);
        return D({
          size: eu(e),
          encodeStream: (t, r) => {
            if (!Array.isArray(r)) throw t.err(`tuple: invalid value ${r}`);
            t.pushObj(r, (n) => {
              for (let i = 0; i < e.length; i++)
                n(`${i}`, () => e[i].encodeStream(t, r[i]));
            });
          },
          decodeStream: (t) => {
            let r = [];
            return (
              t.pushObj(r, (n) => {
                for (let i = 0; i < e.length; i++)
                  n(`${i}`, () => r.push(e[i].decodeStream(t)));
              }),
              r
            );
          },
          validate: (t) => {
            if (!Array.isArray(t)) throw Error(`tuple: invalid value ${t}`);
            if (t.length !== e.length)
              throw Error(
                `tuple: wrong length=${t.length}, expected ${e.length}`
              );
            return t;
          },
        });
      }
      function ed(e, t) {
        if (!$(t)) throw Error(`array: invalid inner value ${t}`);
        let r = R("string" == typeof e ? `../${e}` : e);
        return D({
          size: "number" == typeof e && t.size ? e * t.size : void 0,
          encodeStream: (n, i) => {
            n.pushObj(i, (o) => {
              B(e) || r.encodeStream(n, i.length);
              for (let r = 0; r < i.length; r++)
                o(`${r}`, () => {
                  let o = i[r],
                    a = n.pos;
                  if ((t.encodeStream(n, o), B(e))) {
                    if (e.length > n.pos - a) return;
                    let t = n.finish(!1).subarray(a, n.pos);
                    if (A(t.subarray(0, e.length), e))
                      throw n.err(
                        `array: inner element encoding same as separator. elm=${o} data=${t}`
                      );
                  }
                });
            }),
              B(e) && n.bytes(e);
          },
          decodeStream: (n) => {
            let i = [];
            return (
              n.pushObj(i, (o) => {
                if (null === e)
                  for (
                    let e = 0;
                    !n.isEnd() &&
                    (o(`${e}`, () => i.push(t.decodeStream(n))),
                    !t.size || !(n.leftBytes < t.size));
                    e++
                  );
                else if (B(e))
                  for (let r = 0; ; r++) {
                    if (A(n.bytes(e.length, !0), e)) {
                      n.bytes(e.length);
                      break;
                    }
                    o(`${r}`, () => i.push(t.decodeStream(n)));
                  }
                else {
                  let e;
                  o("arrayLen", () => (e = r.decodeStream(n)));
                  for (let r = 0; r < e; r++)
                    o(`${r}`, () => i.push(t.decodeStream(n)));
                }
              }),
              i
            );
          },
          validate: (e) => {
            if (!Array.isArray(e)) throw Error(`array: invalid value ${e}`);
            return e;
          },
        });
      }
    },
    4336: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.crypto = void 0),
        (t.crypto =
          "object" == typeof globalThis && "crypto" in globalThis
            ? globalThis.crypto
            : void 0);
    },
    6226: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer,
        i = r(29143);
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.InvalidStatusCodeError = t.InvalidCertError = void 0);
      let o = Object.freeze({
        redirect: !0,
        expectStatusCode: 200,
        headers: {},
        full: !1,
        keepAlive: !0,
        cors: !1,
        referrer: !1,
        sslAllowSelfSigned: !1,
        _redirectCount: 0,
      });
      class a extends Error {
        constructor(e, t) {
          super(e), (this.fingerprint256 = t);
        }
      }
      t.InvalidCertError = a;
      class s extends Error {
        constructor(e) {
          super(`Request Failed. Status Code: ${e}`), (this.statusCode = e);
        }
      }
      function l(e, t) {
        if (!t || "text" === t || "json" === t)
          try {
            let r = new TextDecoder("utf8", { fatal: !0 }).decode(e);
            if ("text" === t) return r;
            try {
              return JSON.parse(r);
            } catch (e) {
              if ("json" === t) throw e;
              return r;
            }
          } catch (e) {
            if ("text" === t || "json" === t) throw e;
          }
        return e;
      }
      t.InvalidStatusCodeError = s;
      let f = {},
        u = new Set(
          ["Accept", "Accept-Language", "Content-Language", "Content-Type"].map(
            (e) => e.toLowerCase()
          )
        ),
        c = new Set(
          [
            "Accept-Charset",
            "Accept-Encoding",
            "Access-Control-Request-Headers",
            "Access-Control-Request-Method",
            "Connection",
            "Content-Length",
            "Cookie",
            "Cookie2",
            "Date",
            "DNT",
            "Expect",
            "Host",
            "Keep-Alive",
            "Origin",
            "Referer",
            "TE",
            "Trailer",
            "Transfer-Encoding",
            "Upgrade",
            "Via",
          ].map((e) => e.toLowerCase())
        );
      async function h(e, t) {
        let r = { ...o, ...t },
          n = new Headers();
        "json" === r.type && n.set("Content-Type", "application/json");
        let i = new URL(e);
        if (i.username) {
          let e = btoa(`${i.username}:${i.password}`);
          n.set("Authorization", `Basic ${e}`),
            (i.username = ""),
            (i.password = "");
        }
        for (let t in ((e = "" + i), r.headers)) {
          let e = t.toLowerCase();
          (u.has(e) || (r.cors && !c.has(e))) && n.set(t, r.headers[t]);
        }
        let a = { headers: n, redirect: r.redirect ? "follow" : "manual" };
        r.referrer || (a.referrerPolicy = "no-referrer"),
          r.cors && (a.mode = "cors"),
          r.data &&
            (r.method || (a.method = "POST"),
            (a.body = "json" === r.type ? JSON.stringify(r.data) : r.data));
        let f = await fetch(e, a);
        if (r.expectStatusCode && f.status !== r.expectStatusCode)
          throw new s(f.status);
        let h = l(new Uint8Array(await f.arrayBuffer()), r.type);
        return r.full
          ? {
              headers: Object.fromEntries(f.headers.entries()),
              status: f.status,
              body: h,
            }
          : h;
      }
      let d = !!(
        "object" == typeof i &&
        i.versions &&
        i.versions.node &&
        i.versions.v8
      );
      t.default = function (e, t) {
        return (
          d
            ? function e(t, i) {
                let u = { ...o, ...i },
                  c = r(47744),
                  h = r(27321),
                  d = r(89343),
                  { promisify: p } = r(84864),
                  { resolve: y } = r(40252),
                  g = !!/^https/.test(t),
                  b = {
                    method: u.method || "GET",
                    headers: { "Accept-Encoding": "gzip, deflate, br" },
                  },
                  m = (e) => e.replace(/:| /g, "").toLowerCase();
                if (u.keepAlive) {
                  let e = [
                    g,
                    g && u.sslPinnedCertificates?.map((e) => m(e)).sort(),
                  ].join();
                  b.agent =
                    f[e] ||
                    (f[e] = new (g ? h : c).Agent({
                      keepAlive: !0,
                      keepAliveMsecs: 3e4,
                      maxFreeSockets: 1024,
                      maxCachedSessions: 1024,
                    }));
                }
                "json" === u.type &&
                  (b.headers["Content-Type"] = "application/json"),
                  u.data &&
                    (u.method || (b.method = "POST"),
                    (b.body =
                      "json" === u.type ? JSON.stringify(u.data) : u.data)),
                  (b.headers = { ...b.headers, ...u.headers }),
                  u.sslAllowSelfSigned && (b.rejectUnauthorized = !1);
                let w = async (r) => {
                  let i = r.statusCode;
                  if (u.redirect && 300 <= i && i < 400 && r.headers.location) {
                    if (10 == u._redirectCount)
                      throw Error("Request failed. Too much redirects.");
                    return (
                      (u._redirectCount += 1),
                      await e(y(t, r.headers.location), u)
                    );
                  }
                  if (u.expectStatusCode && i !== u.expectStatusCode)
                    throw (r.resume(), new s(i));
                  let o = [];
                  for await (let e of r) o.push(e);
                  let a = n.concat(o),
                    f = r.headers["content-encoding"];
                  "br" === f && (a = await p(d.brotliDecompress)(a)),
                    ("gzip" === f || "deflate" === f) &&
                      (a = await p(d.unzip)(a));
                  let c = l(a, u.type);
                  return u.full
                    ? { headers: r.headers, status: i, body: c }
                    : c;
                };
                return new Promise((r, n) => {
                  let i = async (r) => {
                      if (r && "DEPTH_ZERO_SELF_SIGNED_CERT" === r.code)
                        try {
                          await e(t, {
                            ...u,
                            sslAllowSelfSigned: !0,
                            sslPinnedCertificates: [],
                          });
                        } catch (e) {
                          e &&
                            e.fingerprint256 &&
                            (r = new a(
                              `Self-signed SSL certificate: ${e.fingerprint256}`,
                              e.fingerprint256
                            ));
                        }
                      n(r);
                    },
                    o = (g ? h : c).request(t, b, (e) => {
                      e.on("error", i),
                        (async () => {
                          try {
                            r(await w(e));
                          } catch (e) {
                            n(e);
                          }
                        })();
                    });
                  o.on("error", i);
                  let s = u.sslPinnedCertificates?.map((e) => m(e)),
                    l = (e) => {
                      let t = m(e.getPeerCertificate()?.fingerprint256 || "");
                      if (!(!t && e.isSessionReused()) && !s.includes(t))
                        return (
                          o.emit(
                            "error",
                            new a(
                              `Invalid SSL certificate: ${t} Expected: ${s}`,
                              t
                            )
                          ),
                          o.abort()
                        );
                    };
                  u.sslPinnedCertificates &&
                    o.on("socket", (e) => {
                      e
                        .listeners("secureConnect")
                        .map((e) => (e.name || "").replace("bound ", ""))
                        .includes("mfetchSecureConnect") ||
                        e.on("secureConnect", l.bind(null, e));
                    }),
                    u.keepAlive && o.setNoDelay(!0),
                    b.body && o.write(b.body),
                    o.end();
                });
              }
            : h
        )(e, t);
      };
    },
    9678: (e, t, r) => {
      "use strict";
      r.d(t, { L: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 7777777,
        name: "Zora",
        nativeCurrency: { decimals: 18, name: "Ether", symbol: "ETH" },
        rpcUrls: {
          default: {
            http: ["https://rpc.zora.energy"],
            webSocket: ["wss://rpc.zora.energy"],
          },
        },
        blockExplorers: {
          default: {
            name: "Explorer",
            url: "https://explorer.zora.energy",
            apiUrl: "https://explorer.zora.energy/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          l2OutputOracle: {
            1: { address: "0x9E6204F750cD866b299594e2aC9eA824E2e5f95c" },
          },
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 5882,
          },
          portal: {
            1: { address: "0x1a0ad011913A150f69f6A19DF447A0CfD9551054" },
          },
          l1StandardBridge: {
            1: { address: "0x3e2Ea9B92B7E48A52296fD261dc26fd995284631" },
          },
        },
        sourceId: 1,
      });
    },
    10250: (e, t, r) => {
      "use strict";
      r.d(t, { Z: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 84532,
        network: "base-sepolia",
        name: "Base Sepolia",
        nativeCurrency: { name: "Sepolia Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://sepolia.base.org"] } },
        blockExplorers: {
          default: {
            name: "Basescan",
            url: "https://sepolia.basescan.org",
            apiUrl: "https://api-sepolia.basescan.org/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          disputeGameFactory: {
            0xaa36a7: { address: "0xd6E6dBf4F7EA0ac412fD8b65ED297e64BB7a06E1" },
          },
          l2OutputOracle: {
            0xaa36a7: { address: "0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254" },
          },
          portal: {
            0xaa36a7: {
              address: "0x49f53e41452c74589e85ca1677426ba426459e85",
              blockCreated: 4446677,
            },
          },
          l1StandardBridge: {
            0xaa36a7: {
              address: "0xfd0Bf71F60660E2f608ed56e1659C450eB113120",
              blockCreated: 4446677,
            },
          },
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 1059647,
          },
        },
        testnet: !0,
        sourceId: 0xaa36a7,
      });
    },
    10519: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.wNAF = function (e, t) {
          let r = (e, t) => {
              let r = t.negate();
              return e ? r : t;
            },
            n = (e) => ({
              windows: Math.ceil(t / e) + 1,
              windowSize: 2 ** (e - 1),
            });
          return {
            constTimeNegate: r,
            unsafeLadder(t, r) {
              let n = e.ZERO,
                i = t;
              for (; r > o; )
                r & a && (n = n.add(i)), (i = i.double()), (r >>= a);
              return n;
            },
            precomputeWindow(e, t) {
              let { windows: r, windowSize: i } = n(t),
                o = [],
                a = e,
                s = a;
              for (let e = 0; e < r; e++) {
                (s = a), o.push(s);
                for (let e = 1; e < i; e++) (s = s.add(a)), o.push(s);
                a = s.double();
              }
              return o;
            },
            wNAF(t, i, o) {
              let { windows: s, windowSize: l } = n(t),
                f = e.ZERO,
                u = e.BASE,
                c = BigInt(2 ** t - 1),
                h = 2 ** t,
                d = BigInt(t);
              for (let e = 0; e < s; e++) {
                let t = e * l,
                  n = Number(o & c);
                (o >>= d), n > l && ((n -= h), (o += a));
                let s = t + Math.abs(n) - 1,
                  p = e % 2 != 0,
                  y = n < 0;
                0 === n ? (u = u.add(r(p, i[t]))) : (f = f.add(r(y, i[s])));
              }
              return { p: f, f: u };
            },
            wNAFCached(e, t, r, n) {
              let i = e._WINDOW_SIZE || 1,
                o = t.get(e);
              return (
                o ||
                  ((o = this.precomputeWindow(e, i)),
                  1 !== i && t.set(e, n(o))),
                this.wNAF(i, o, r)
              );
            },
          };
        }),
        (t.validateBasic = function (e) {
          return (
            (0, n.validateField)(e.Fp),
            (0, i.validateObject)(
              e,
              { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
              { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
            ),
            Object.freeze({
              ...(0, n.nLength)(e.n, e.nBitLength),
              ...e,
              p: e.Fp.ORDER,
            })
          );
        });
      let n = r(24738),
        i = r(57953),
        o = BigInt(0),
        a = BigInt(1);
    },
    11512: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.expand_message_xmd = l),
        (t.expand_message_xof = f),
        (t.hash_to_field = u),
        (t.isogenyMap = function (e, t) {
          let r = t.map((e) => Array.from(e).reverse());
          return (t, n) => {
            let [i, o, a, s] = r.map((r) =>
              r.reduce((r, n) => e.add(e.mul(r, t), n))
            );
            return (
              (t = e.div(i, o)), (n = e.mul(n, e.div(a, s))), { x: t, y: n }
            );
          };
        }),
        (t.createHasher = function (e, t, r) {
          if ("function" != typeof t)
            throw Error("mapToCurve() must be defined");
          return {
            hashToCurve(n, i) {
              let o = u(n, 2, { ...r, DST: r.DST, ...i }),
                a = e.fromAffine(t(o[0])),
                s = e.fromAffine(t(o[1])),
                l = a.add(s).clearCofactor();
              return l.assertValidity(), l;
            },
            encodeToCurve(n, i) {
              let o = u(n, 1, { ...r, DST: r.encodeDST, ...i }),
                a = e.fromAffine(t(o[0])).clearCofactor();
              return a.assertValidity(), a;
            },
            mapToCurve(r) {
              if (!Array.isArray(r))
                throw Error("mapToCurve: expected array of bigints");
              for (let e of r)
                if ("bigint" != typeof e)
                  throw Error(
                    `mapToCurve: expected array of bigints, got ${e} in array`
                  );
              let n = e.fromAffine(t(r)).clearCofactor();
              return n.assertValidity(), n;
            },
          };
        });
      let n = r(24738),
        i = r(57953),
        o = i.bytesToNumberBE;
      function a(e, t) {
        if (e < 0 || e >= 1 << (8 * t))
          throw Error(`bad I2OSP call: value=${e} length=${t}`);
        let r = Array.from({ length: t }).fill(0);
        for (let n = t - 1; n >= 0; n--) (r[n] = 255 & e), (e >>>= 8);
        return new Uint8Array(r);
      }
      function s(e) {
        if (!Number.isSafeInteger(e)) throw Error("number expected");
      }
      function l(e, t, r, n) {
        (0, i.abytes)(e),
          (0, i.abytes)(t),
          s(r),
          t.length > 255 &&
            (t = n(
              (0, i.concatBytes)((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-"), t)
            ));
        let { outputLen: o, blockLen: l } = n,
          f = Math.ceil(r / o);
        if (f > 255) throw Error("Invalid xmd length");
        let u = (0, i.concatBytes)(t, a(t.length, 1)),
          c = a(0, l),
          h = a(r, 2),
          d = Array(f),
          p = n((0, i.concatBytes)(c, e, h, a(0, 1), u));
        d[0] = n((0, i.concatBytes)(p, a(1, 1), u));
        for (let e = 1; e <= f; e++) {
          let t = [
            (function (e, t) {
              let r = new Uint8Array(e.length);
              for (let n = 0; n < e.length; n++) r[n] = e[n] ^ t[n];
              return r;
            })(p, d[e - 1]),
            a(e + 1, 1),
            u,
          ];
          d[e] = n((0, i.concatBytes)(...t));
        }
        return (0, i.concatBytes)(...d).slice(0, r);
      }
      function f(e, t, r, n, o) {
        if (((0, i.abytes)(e), (0, i.abytes)(t), s(r), t.length > 255)) {
          let e = Math.ceil((2 * n) / 8);
          t = o
            .create({ dkLen: e })
            .update((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-"))
            .update(t)
            .digest();
        }
        if (r > 65535 || t.length > 255)
          throw Error("expand_message_xof: invalid lenInBytes");
        return o
          .create({ dkLen: r })
          .update(e)
          .update(a(r, 2))
          .update(t)
          .update(a(t.length, 1))
          .digest();
      }
      function u(e, t, r) {
        let a;
        (0, i.validateObject)(r, {
          DST: "stringOrUint8Array",
          p: "bigint",
          m: "isSafeInteger",
          k: "isSafeInteger",
          hash: "hash",
        });
        let { p: u, k: c, m: h, hash: d, expand: p, DST: y } = r;
        (0, i.abytes)(e), s(t);
        let g = "string" == typeof y ? (0, i.utf8ToBytes)(y) : y,
          b = Math.ceil((u.toString(2).length + c) / 8),
          m = t * h * b;
        if ("xmd" === p) a = l(e, g, m, d);
        else if ("xof" === p) a = f(e, g, m, c, d);
        else if ("_internal_pass" === p) a = e;
        else throw Error('expand must be "xmd" or "xof"');
        let w = Array(t);
        for (let e = 0; e < t; e++) {
          let t = Array(h);
          for (let r = 0; r < h; r++) {
            let i = b * (r + e * h),
              s = a.subarray(i, i + b);
            t[r] = (0, n.mod)(o(s), u);
          }
          w[e] = t;
        }
        return w;
      }
    },
    11600: (e, t, r) => {
      "use strict";
      r.d(t, { J: () => n });
      let n = (0, r(12644).x)({
        id: 80085,
        name: "Berachain Artio",
        nativeCurrency: { decimals: 18, name: "BERA Token", symbol: "BERA" },
        rpcUrls: { default: { http: ["https://artio.rpc.berachain.com"] } },
        blockExplorers: {
          default: { name: "Berachain", url: "https://artio.beratrail.io" },
        },
        contracts: {
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 866924,
          },
        },
        testnet: !0,
      });
    },
    12155: (e, t, r) => {
      "use strict";
      r.d(t, { G: () => n });
      let n = (0, r(12644).x)({
        id: 314,
        name: "Filecoin Mainnet",
        nativeCurrency: { decimals: 18, name: "filecoin", symbol: "FIL" },
        rpcUrls: { default: { http: ["https://api.node.glif.io/rpc/v1"] } },
        blockExplorers: {
          default: { name: "Filfox", url: "https://filfox.info/en" },
        },
        contracts: {
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 3328594,
          },
        },
      });
    },
    12644: (e, t, r) => {
      "use strict";
      function n(e) {
        return { formatters: void 0, fees: void 0, serializers: void 0, ...e };
      }
      r.d(t, { x: () => n });
    },
    14157: (e, t, r) => {
      "use strict";
      r.d(t, { sc: () => c });
      var n = r(52344);
      let i = BigInt(0x100000000 - 1),
        o = BigInt(32);
      var a = r(84080);
      let s = Uint32Array.from([
          0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
          0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
          0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
          0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f,
          0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d,
          0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967,
          0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354,
          0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,
          0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585,
          0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
          0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee,
          0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb,
          0xbef9a3f7, 0xc67178f2,
        ]),
        l = new Uint32Array(64);
      class f extends n.ol {
        constructor(e = 32) {
          super(64, e, 8, !1),
            (this.A = 0 | n.yc[0]),
            (this.B = 0 | n.yc[1]),
            (this.C = 0 | n.yc[2]),
            (this.D = 0 | n.yc[3]),
            (this.E = 0 | n.yc[4]),
            (this.F = 0 | n.yc[5]),
            (this.G = 0 | n.yc[6]),
            (this.H = 0 | n.yc[7]);
        }
        get() {
          let { A: e, B: t, C: r, D: n, E: i, F: o, G: a, H: s } = this;
          return [e, t, r, n, i, o, a, s];
        }
        set(e, t, r, n, i, o, a, s) {
          (this.A = 0 | e),
            (this.B = 0 | t),
            (this.C = 0 | r),
            (this.D = 0 | n),
            (this.E = 0 | i),
            (this.F = 0 | o),
            (this.G = 0 | a),
            (this.H = 0 | s);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) l[r] = e.getUint32(t, !1);
          for (let e = 16; e < 64; e++) {
            let t = l[e - 15],
              r = l[e - 2],
              n = (0, a.Ow)(t, 7) ^ (0, a.Ow)(t, 18) ^ (t >>> 3),
              i = (0, a.Ow)(r, 17) ^ (0, a.Ow)(r, 19) ^ (r >>> 10);
            l[e] = (i + l[e - 7] + n + l[e - 16]) | 0;
          }
          let { A: r, B: i, C: o, D: f, E: u, F: c, G: h, H: d } = this;
          for (let e = 0; e < 64; e++) {
            let t =
                (d +
                  ((0, a.Ow)(u, 6) ^ (0, a.Ow)(u, 11) ^ (0, a.Ow)(u, 25)) +
                  (0, n.r9)(u, c, h) +
                  s[e] +
                  l[e]) |
                0,
              p =
                (((0, a.Ow)(r, 2) ^ (0, a.Ow)(r, 13) ^ (0, a.Ow)(r, 22)) +
                  (0, n.TQ)(r, i, o)) |
                0;
            (d = h),
              (h = c),
              (c = u),
              (u = (f + t) | 0),
              (f = o),
              (o = i),
              (i = r),
              (r = (t + p) | 0);
          }
          (r = (r + this.A) | 0),
            (i = (i + this.B) | 0),
            (o = (o + this.C) | 0),
            (f = (f + this.D) | 0),
            (u = (u + this.E) | 0),
            (c = (c + this.F) | 0),
            (h = (h + this.G) | 0),
            (d = (d + this.H) | 0),
            this.set(r, i, o, f, u, c, h, d);
        }
        roundClean() {
          (0, a.uH)(l);
        }
        destroy() {
          this.set(0, 0, 0, 0, 0, 0, 0, 0), (0, a.uH)(this.buffer);
        }
      }
      let u = (function (e, t = !1) {
        let r = e.length,
          n = new Uint32Array(r),
          a = new Uint32Array(r);
        for (let s = 0; s < r; s++) {
          let { h: r, l } = (function (e, t = !1) {
            return t
              ? { h: Number(e & i), l: Number((e >> o) & i) }
              : { h: 0 | Number((e >> o) & i), l: 0 | Number(e & i) };
          })(e[s], t);
          [n[s], a[s]] = [r, l];
        }
        return [n, a];
      })(
        [
          "0x428a2f98d728ae22",
          "0x7137449123ef65cd",
          "0xb5c0fbcfec4d3b2f",
          "0xe9b5dba58189dbbc",
          "0x3956c25bf348b538",
          "0x59f111f1b605d019",
          "0x923f82a4af194f9b",
          "0xab1c5ed5da6d8118",
          "0xd807aa98a3030242",
          "0x12835b0145706fbe",
          "0x243185be4ee4b28c",
          "0x550c7dc3d5ffb4e2",
          "0x72be5d74f27b896f",
          "0x80deb1fe3b1696b1",
          "0x9bdc06a725c71235",
          "0xc19bf174cf692694",
          "0xe49b69c19ef14ad2",
          "0xefbe4786384f25e3",
          "0x0fc19dc68b8cd5b5",
          "0x240ca1cc77ac9c65",
          "0x2de92c6f592b0275",
          "0x4a7484aa6ea6e483",
          "0x5cb0a9dcbd41fbd4",
          "0x76f988da831153b5",
          "0x983e5152ee66dfab",
          "0xa831c66d2db43210",
          "0xb00327c898fb213f",
          "0xbf597fc7beef0ee4",
          "0xc6e00bf33da88fc2",
          "0xd5a79147930aa725",
          "0x06ca6351e003826f",
          "0x142929670a0e6e70",
          "0x27b70a8546d22ffc",
          "0x2e1b21385c26c926",
          "0x4d2c6dfc5ac42aed",
          "0x53380d139d95b3df",
          "0x650a73548baf63de",
          "0x766a0abb3c77b2a8",
          "0x81c2c92e47edaee6",
          "0x92722c851482353b",
          "0xa2bfe8a14cf10364",
          "0xa81a664bbc423001",
          "0xc24b8b70d0f89791",
          "0xc76c51a30654be30",
          "0xd192e819d6ef5218",
          "0xd69906245565a910",
          "0xf40e35855771202a",
          "0x106aa07032bbd1b8",
          "0x19a4c116b8d2d0c8",
          "0x1e376c085141ab53",
          "0x2748774cdf8eeb99",
          "0x34b0bcb5e19b48a8",
          "0x391c0cb3c5c95a63",
          "0x4ed8aa4ae3418acb",
          "0x5b9cca4f7763e373",
          "0x682e6ff3d6b2b8a3",
          "0x748f82ee5defb2fc",
          "0x78a5636f43172f60",
          "0x84c87814a1f0ab72",
          "0x8cc702081a6439ec",
          "0x90befffa23631e28",
          "0xa4506cebde82bde9",
          "0xbef9a3f7b2c67915",
          "0xc67178f2e372532b",
          "0xca273eceea26619c",
          "0xd186b8c721c0c207",
          "0xeada7dd6cde0eb1e",
          "0xf57d4f7fee6ed178",
          "0x06f067aa72176fba",
          "0x0a637dc5a2c898a6",
          "0x113f9804bef90dae",
          "0x1b710b35131c471b",
          "0x28db77f523047d84",
          "0x32caab7b40c72493",
          "0x3c9ebe0a15c9bebc",
          "0x431d67c49c100d4c",
          "0x4cc5d4becb3e42b6",
          "0x597f299cfc657e2a",
          "0x5fcb6fab3ad6faec",
          "0x6c44198c4a475817",
        ].map((e) => BigInt(e))
      );
      u[0], u[1], n.ol;
      let c = (0, a.qj)(() => new f());
    },
    15720: (e, t, r) => {
      "use strict";
      r.d(t, { n: () => n });
      let n = (0, r(12644).x)({
        id: 80002,
        name: "Polygon Amoy",
        nativeCurrency: { name: "POL", symbol: "POL", decimals: 18 },
        rpcUrls: { default: { http: ["https://rpc-amoy.polygon.technology"] } },
        blockExplorers: {
          default: {
            name: "PolygonScan",
            url: "https://amoy.polygonscan.com",
            apiUrl: "https://api-amoy.polygonscan.com/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 3127388,
          },
        },
        testnet: !0,
      });
    },
    15906: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.randomBytes =
          t.wrapXOFConstructorWithOpts =
          t.wrapConstructorWithOpts =
          t.wrapConstructor =
          t.checkOpts =
          t.Hash =
          t.concatBytes =
          t.toBytes =
          t.utf8ToBytes =
          t.asyncLoop =
          t.nextTick =
          t.hexToBytes =
          t.bytesToHex =
          t.byteSwap32 =
          t.byteSwapIfBE =
          t.byteSwap =
          t.isLE =
          t.rotl =
          t.rotr =
          t.createView =
          t.u32 =
          t.u8 =
          t.isBytes =
            void 0);
      let n = r(4336),
        i = r(34116);
      (t.isBytes = function (e) {
        return (
          e instanceof Uint8Array ||
          (null != e &&
            "object" == typeof e &&
            "Uint8Array" === e.constructor.name)
        );
      }),
        (t.u8 = (e) => new Uint8Array(e.buffer, e.byteOffset, e.byteLength)),
        (t.u32 = (e) =>
          new Uint32Array(
            e.buffer,
            e.byteOffset,
            Math.floor(e.byteLength / 4)
          )),
        (t.createView = (e) =>
          new DataView(e.buffer, e.byteOffset, e.byteLength)),
        (t.rotr = (e, t) => (e << (32 - t)) | (e >>> t)),
        (t.rotl = (e, t) => (e << t) | ((e >>> (32 - t)) >>> 0)),
        (t.isLE =
          68 === new Uint8Array(new Uint32Array([0x11223344]).buffer)[0]),
        (t.byteSwap = (e) =>
          ((e << 24) & 0xff000000) |
          ((e << 8) & 0xff0000) |
          ((e >>> 8) & 65280) |
          ((e >>> 24) & 255)),
        (t.byteSwapIfBE = t.isLE ? (e) => e : (e) => (0, t.byteSwap)(e)),
        (t.byteSwap32 = function (e) {
          for (let r = 0; r < e.length; r++) e[r] = (0, t.byteSwap)(e[r]);
        });
      let o = Array.from({ length: 256 }, (e, t) =>
        t.toString(16).padStart(2, "0")
      );
      t.bytesToHex = function (e) {
        (0, i.bytes)(e);
        let t = "";
        for (let r = 0; r < e.length; r++) t += o[e[r]];
        return t;
      };
      let a = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
      function s(e) {
        return e >= a._0 && e <= a._9
          ? e - a._0
          : e >= a._A && e <= a._F
          ? e - (a._A - 10)
          : e >= a._a && e <= a._f
          ? e - (a._a - 10)
          : void 0;
      }
      async function l(e, r, n) {
        let i = Date.now();
        for (let o = 0; o < e; o++) {
          n(o);
          let e = Date.now() - i;
          (e >= 0 && e < r) || (await (0, t.nextTick)(), (i += e));
        }
      }
      function f(e) {
        if ("string" != typeof e)
          throw Error(`utf8ToBytes expected string, got ${typeof e}`);
        return new Uint8Array(new TextEncoder().encode(e));
      }
      function u(e) {
        return "string" == typeof e && (e = f(e)), (0, i.bytes)(e), e;
      }
      (t.hexToBytes = function (e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        let t = e.length,
          r = t / 2;
        if (t % 2)
          throw Error(
            "padded hex string expected, got unpadded hex of length " + t
          );
        let n = new Uint8Array(r);
        for (let t = 0, i = 0; t < r; t++, i += 2) {
          let r = s(e.charCodeAt(i)),
            o = s(e.charCodeAt(i + 1));
          if (void 0 === r || void 0 === o)
            throw Error(
              'hex string expected, got non-hex character "' +
                (e[i] + e[i + 1]) +
                '" at index ' +
                i
            );
          n[t] = 16 * r + o;
        }
        return n;
      }),
        (t.nextTick = async () => {}),
        (t.asyncLoop = l),
        (t.utf8ToBytes = f),
        (t.toBytes = u),
        (t.concatBytes = function (...e) {
          let t = 0;
          for (let r = 0; r < e.length; r++) {
            let n = e[r];
            (0, i.bytes)(n), (t += n.length);
          }
          let r = new Uint8Array(t);
          for (let t = 0, n = 0; t < e.length; t++) {
            let i = e[t];
            r.set(i, n), (n += i.length);
          }
          return r;
        });
      class c {
        clone() {
          return this._cloneInto();
        }
      }
      t.Hash = c;
      let h = {}.toString;
      (t.checkOpts = function (e, t) {
        if (void 0 !== t && "[object Object]" !== h.call(t))
          throw Error("Options should be object or undefined");
        return Object.assign(e, t);
      }),
        (t.wrapConstructor = function (e) {
          let t = (t) => e().update(u(t)).digest(),
            r = e();
          return (
            (t.outputLen = r.outputLen),
            (t.blockLen = r.blockLen),
            (t.create = () => e()),
            t
          );
        }),
        (t.wrapConstructorWithOpts = function (e) {
          let t = (t, r) => e(r).update(u(t)).digest(),
            r = e({});
          return (
            (t.outputLen = r.outputLen),
            (t.blockLen = r.blockLen),
            (t.create = (t) => e(t)),
            t
          );
        }),
        (t.wrapXOFConstructorWithOpts = function (e) {
          let t = (t, r) => e(r).update(u(t)).digest(),
            r = e({});
          return (
            (t.outputLen = r.outputLen),
            (t.blockLen = r.blockLen),
            (t.create = (t) => e(t)),
            t
          );
        }),
        (t.randomBytes = function (e = 32) {
          if (n.crypto && "function" == typeof n.crypto.getRandomValues)
            return n.crypto.getRandomValues(new Uint8Array(e));
          throw Error("crypto.getRandomValues must be defined");
        });
    },
    16888: function (e, t, r) {
      "use strict";
      var n = r(51642).Buffer,
        i =
          (this && this.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.rawEncode = t.parseNumber = t.solidityPack = void 0);
      let o = r(43118),
        a = i(r(72289)),
        s = r(67551),
        l = r(91262);
      function f(e) {
        return e.endsWith("]");
      }
      function u(e) {
        let t = e.match(/(.*)\[(.*?)\]$/u);
        return t ? ("" === t[2] ? "dynamic" : parseInt(t[2], 10)) : null;
      }
      function c(e) {
        let t = /^\D+(\d+)$/u.exec(e);
        if (null === t) throw Error(`Invalid parseTypeN input "${e}".`);
        return parseInt(t[1], 10);
      }
      function h(e) {
        let t = typeof e;
        if ("string" === t)
          return (0, o.isHexPrefixed)(e)
            ? new a.default((0, s.stripHexPrefix)(e), 16)
            : new a.default(e, 10);
        if ("number" === t) return new a.default(e);
        if (
          (e && Object.prototype.hasOwnProperty.call(e, "toArray")) ||
          a.default.isBN(e)
        )
          return e;
        throw Error("Argument is not a number");
      }
      function d(e) {
        if (e.startsWith("int[")) return `int256${e.slice(3)}`;
        if ("int" === e) return "int256";
        if (e.startsWith("uint[")) return `uint256${e.slice(4)}`;
        if ("uint" === e) return "uint256";
        if (e.startsWith("fixed[")) return `fixed128x128${e.slice(5)}`;
        else if ("fixed" === e) return "fixed128x128";
        else if (e.startsWith("ufixed[")) return `ufixed128x128${e.slice(6)}`;
        else if ("ufixed" === e) return "ufixed128x128";
        return e;
      }
      function p(e, t) {
        if ("address" === e) return p("uint160", h(t));
        if ("bool" === e) return p("uint8", +!!t);
        if ("string" === e) return p("bytes", n.from(t, "utf8"));
        if (f(e)) {
          if (void 0 === t.length) throw Error("Not an array?");
          let r = u(e);
          if ("dynamic" !== r && 0 !== r && null !== r && t.length > r)
            throw Error(`Elements exceed array size: ${r}`);
          let i = [];
          for (let r in ((e = e.slice(0, e.lastIndexOf("["))),
          "string" == typeof t && (t = JSON.parse(t)),
          t))
            Object.prototype.hasOwnProperty.call(t, r) && i.push(p(e, t[r]));
          if ("dynamic" === r) {
            let e = p("uint256", t.length);
            i.unshift(e);
          }
          return n.concat(i);
        }
        if ("bytes" === e) {
          t = n.from(t);
          let e = n.concat([p("uint256", t.length), t]);
          return (
            t.length % 32 != 0 &&
              (e = n.concat([e, (0, o.zeros)(32 - (t.length % 32))])),
            e
          );
        } else if (e.startsWith("bytes")) {
          let r = c(e);
          if (r < 1 || r > 32) throw Error(`Invalid bytes<N> width: ${r}`);
          let n = "number" == typeof t ? (0, l.normalize)(t) : t;
          return (0, o.setLengthRight)((0, o.toBuffer)(n), 32);
        } else if (e.startsWith("uint")) {
          let r = c(e);
          if (r % 8 || r < 8 || r > 256)
            throw Error(`Invalid uint<N> width: ${r}`);
          let i = h(t);
          if (i.bitLength() > r)
            throw Error(
              `Supplied uint exceeds width: ${r} vs ${i.bitLength()}`
            );
          if (i.isNeg()) throw Error("Supplied uint is negative");
          return i.toArrayLike(n, "be", 32);
        } else if (e.startsWith("int")) {
          let r = c(e);
          if (r % 8 || r < 8 || r > 256)
            throw Error(`Invalid int<N> width: ${r}`);
          let i = h(t);
          if (i.bitLength() > r)
            throw Error(`Supplied int exceeds width: ${r} vs ${i.bitLength()}`);
          return i.toTwos(256).toArrayLike(n, "be", 32);
        } else if (e.startsWith("ufixed")) {
          let r = y(e),
            n = h(t);
          if (n.isNeg()) throw Error("Supplied ufixed is negative");
          return p("uint256", n.mul(new a.default(2).pow(new a.default(r[1]))));
        } else if (e.startsWith("fixed")) {
          let r = y(e);
          return p(
            "int256",
            h(t).mul(new a.default(2).pow(new a.default(r[1])))
          );
        }
        throw Error(`Unsupported or invalid type: ${JSON.stringify(e)}`);
      }
      function y(e) {
        let t = /^\D+(\d+)x(\d+)$/u.exec(e);
        if (null === t || t.length < 1)
          throw Error(`Invalid parseTypeNxM input "${e}".`);
        return [parseInt(t[1], 10), parseInt(t[2], 10)];
      }
      (t.solidityPack = function (e, t) {
        if (e.length !== t.length)
          throw Error("Number of types are not matching the values");
        let r = [];
        for (let i = 0; i < e.length; i++) {
          let a = d(e[i]),
            s = t[i];
          r.push(
            (function e(t, r, i) {
              if (f(t)) {
                let i = t.replace(/\[.*?\]/u, "");
                if (!f(i)) {
                  let e = u(t);
                  if ("dynamic" !== e && 0 !== e && null !== e && r.length > e)
                    throw Error(`Elements exceed array size: ${e}`);
                }
                let o = r.map((t) => e(i, t, 256));
                return n.concat(o);
              }
              if ("bytes" === t) return r;
              if ("string" === t) return n.from(r, "utf8");
              if ("bool" === t) {
                let e = Array((i = i || 8) / 4).join("0");
                return n.from(r ? `${e}1` : `${e}0`, "hex");
              }
              if ("address" === t) {
                let e = 20;
                return (
                  i && (e = i / 8), (0, o.setLengthLeft)((0, o.toBuffer)(r), e)
                );
              } else if (t.startsWith("bytes")) {
                let e = c(t);
                if (e < 1 || e > 32)
                  throw Error(`Invalid bytes<N> width: ${e}`);
                return (
                  "number" == typeof r && (r = (0, l.normalize)(r)),
                  (0, o.setLengthRight)((0, o.toBuffer)(r), e)
                );
              } else if (t.startsWith("uint")) {
                let e = c(t);
                if (e % 8 || e < 8 || e > 256)
                  throw Error(`Invalid uint<N> width: ${e}`);
                let o = h(r);
                if (o.bitLength() > e)
                  throw Error(
                    `Supplied uint exceeds width: ${e} vs ${o.bitLength()}`
                  );
                return (i = i || e), o.toArrayLike(n, "be", i / 8);
              } else if (t.startsWith("int")) {
                let e = c(t);
                if (e % 8 || e < 8 || e > 256)
                  throw Error(`Invalid int<N> width: ${e}`);
                let o = h(r);
                if (o.bitLength() > e)
                  throw Error(
                    `Supplied int exceeds width: ${e} vs ${o.bitLength()}`
                  );
                return (i = i || e), o.toTwos(e).toArrayLike(n, "be", i / 8);
              }
              throw Error(`Unsupported or invalid type: ${JSON.stringify(t)}`);
            })(a, s, null)
          );
        }
        return n.concat(r);
      }),
        (t.parseNumber = h),
        (t.rawEncode = function (e, t) {
          let r = [],
            i = [],
            o = 0;
          e.forEach((e) => {
            if (f(e)) {
              let t = u(e);
              "dynamic" !== t && null !== t ? (o += 32 * t) : (o += 32);
            } else o += 32;
          });
          for (let n = 0; n < e.length; n++) {
            var a;
            let s = d(e[n]),
              l = p(s, t[n]);
            "string" === (a = s) || "bytes" === a || "dynamic" === u(a)
              ? (r.push(p("uint256", o)), i.push(l), (o += l.length))
              : r.push(l);
          }
          return n.concat(r.concat(i));
        });
    },
    16953: (e) => {
      e.exports = function (e) {
        if ("string" != typeof e)
          throw Error(
            "[is-hex-prefixed] value must be type 'string', is currently type " +
              typeof e +
              ", while checking isHexPrefixed."
          );
        return "0x" === e.slice(0, 2);
      };
    },
    17486: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.shake256 =
          t.shake128 =
          t.keccak_512 =
          t.keccak_384 =
          t.keccak_256 =
          t.keccak_224 =
          t.sha3_512 =
          t.sha3_384 =
          t.sha3_256 =
          t.sha3_224 =
          t.Keccak =
          t.keccakP =
            void 0);
      let n = r(34116),
        i = r(69855),
        o = r(15906),
        a = [],
        s = [],
        l = [],
        f = BigInt(0),
        u = BigInt(1),
        c = BigInt(2),
        h = BigInt(7),
        d = BigInt(256),
        p = BigInt(113);
      for (let e = 0, t = u, r = 1, n = 0; e < 24; e++) {
        ([r, n] = [n, (2 * r + 3 * n) % 5]),
          a.push(2 * (5 * n + r)),
          s.push((((e + 1) * (e + 2)) / 2) % 64);
        let i = f;
        for (let e = 0; e < 7; e++)
          (t = ((t << u) ^ ((t >> h) * p)) % d) & c &&
            (i ^= u << ((u << BigInt(e)) - u));
        l.push(i);
      }
      let [y, g] = (0, i.split)(l, !0),
        b = (e, t, r) =>
          r > 32 ? (0, i.rotlBH)(e, t, r) : (0, i.rotlSH)(e, t, r),
        m = (e, t, r) =>
          r > 32 ? (0, i.rotlBL)(e, t, r) : (0, i.rotlSL)(e, t, r);
      function w(e, t = 24) {
        let r = new Uint32Array(10);
        for (let n = 24 - t; n < 24; n++) {
          for (let t = 0; t < 10; t++)
            r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
          for (let t = 0; t < 10; t += 2) {
            let n = (t + 8) % 10,
              i = (t + 2) % 10,
              o = r[i],
              a = r[i + 1],
              s = b(o, a, 1) ^ r[n],
              l = m(o, a, 1) ^ r[n + 1];
            for (let r = 0; r < 50; r += 10)
              (e[t + r] ^= s), (e[t + r + 1] ^= l);
          }
          let t = e[2],
            i = e[3];
          for (let r = 0; r < 24; r++) {
            let n = s[r],
              o = b(t, i, n),
              l = m(t, i, n),
              f = a[r];
            (t = e[f]), (i = e[f + 1]), (e[f] = o), (e[f + 1] = l);
          }
          for (let t = 0; t < 50; t += 10) {
            for (let n = 0; n < 10; n++) r[n] = e[t + n];
            for (let n = 0; n < 10; n++)
              e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10];
          }
          (e[0] ^= y[n]), (e[1] ^= g[n]);
        }
        r.fill(0);
      }
      t.keccakP = w;
      class v extends o.Hash {
        constructor(e, t, r, i = !1, a = 24) {
          if (
            (super(),
            (this.blockLen = e),
            (this.suffix = t),
            (this.outputLen = r),
            (this.enableXOF = i),
            (this.rounds = a),
            (this.pos = 0),
            (this.posOut = 0),
            (this.finished = !1),
            (this.destroyed = !1),
            (0, n.number)(r),
            0 >= this.blockLen || this.blockLen >= 200)
          )
            throw Error("Sha3 supports only keccak-f1600 function");
          (this.state = new Uint8Array(200)),
            (this.state32 = (0, o.u32)(this.state));
        }
        keccak() {
          o.isLE || (0, o.byteSwap32)(this.state32),
            w(this.state32, this.rounds),
            o.isLE || (0, o.byteSwap32)(this.state32),
            (this.posOut = 0),
            (this.pos = 0);
        }
        update(e) {
          (0, n.exists)(this);
          let { blockLen: t, state: r } = this,
            i = (e = (0, o.toBytes)(e)).length;
          for (let n = 0; n < i; ) {
            let o = Math.min(t - this.pos, i - n);
            for (let t = 0; t < o; t++) r[this.pos++] ^= e[n++];
            this.pos === t && this.keccak();
          }
          return this;
        }
        finish() {
          if (this.finished) return;
          this.finished = !0;
          let { state: e, suffix: t, pos: r, blockLen: n } = this;
          (e[r] ^= t),
            (128 & t) != 0 && r === n - 1 && this.keccak(),
            (e[n - 1] ^= 128),
            this.keccak();
        }
        writeInto(e) {
          (0, n.exists)(this, !1), (0, n.bytes)(e), this.finish();
          let t = this.state,
            { blockLen: r } = this;
          for (let n = 0, i = e.length; n < i; ) {
            this.posOut >= r && this.keccak();
            let o = Math.min(r - this.posOut, i - n);
            e.set(t.subarray(this.posOut, this.posOut + o), n),
              (this.posOut += o),
              (n += o);
          }
          return e;
        }
        xofInto(e) {
          if (!this.enableXOF)
            throw Error("XOF is not possible for this instance");
          return this.writeInto(e);
        }
        xof(e) {
          return (0, n.number)(e), this.xofInto(new Uint8Array(e));
        }
        digestInto(e) {
          if (((0, n.output)(e, this), this.finished))
            throw Error("digest() was already called");
          return this.writeInto(e), this.destroy(), e;
        }
        digest() {
          return this.digestInto(new Uint8Array(this.outputLen));
        }
        destroy() {
          (this.destroyed = !0), this.state.fill(0);
        }
        _cloneInto(e) {
          let {
            blockLen: t,
            suffix: r,
            outputLen: n,
            rounds: i,
            enableXOF: o,
          } = this;
          return (
            e || (e = new v(t, r, n, o, i)),
            e.state32.set(this.state32),
            (e.pos = this.pos),
            (e.posOut = this.posOut),
            (e.finished = this.finished),
            (e.rounds = i),
            (e.suffix = r),
            (e.outputLen = n),
            (e.enableXOF = o),
            (e.destroyed = this.destroyed),
            e
          );
        }
      }
      t.Keccak = v;
      let x = (e, t, r) => (0, o.wrapConstructor)(() => new v(t, e, r));
      (t.sha3_224 = x(6, 144, 28)),
        (t.sha3_256 = x(6, 136, 32)),
        (t.sha3_384 = x(6, 104, 48)),
        (t.sha3_512 = x(6, 72, 64)),
        (t.keccak_224 = x(1, 144, 28)),
        (t.keccak_256 = x(1, 136, 32)),
        (t.keccak_384 = x(1, 104, 48)),
        (t.keccak_512 = x(1, 72, 64));
      let E = (e, t, r) =>
        (0, o.wrapXOFConstructorWithOpts)(
          (n = {}) => new v(t, e, void 0 === n.dkLen ? r : n.dkLen, !0)
        );
      (t.shake128 = E(31, 168, 16)), (t.shake256 = E(31, 136, 32));
    },
    18189: (e, t, r) => {
      "use strict";
      r.d(t, { O: () => n });
      let n = (0, r(12644).x)({
        id: 314159,
        name: "Filecoin Calibration",
        nativeCurrency: {
          decimals: 18,
          name: "testnet filecoin",
          symbol: "tFIL",
        },
        rpcUrls: {
          default: { http: ["https://api.calibration.node.glif.io/rpc/v1"] },
        },
        blockExplorers: {
          default: { name: "Filscan", url: "https://calibration.filscan.io" },
        },
        testnet: !0,
      });
    },
    19961: (e, t, r) => {
      "use strict";
      r.d(t, { _: () => n });
      let n = (0, r(12644).x)({
        id: 80094,
        name: "Berachain",
        nativeCurrency: { decimals: 18, name: "BERA Token", symbol: "BERA" },
        contracts: {
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 0,
          },
          ensRegistry: {
            address: "0x5b22280886a2f5e09a49bea7e320eab0e5320e28",
            blockCreated: 877007,
          },
          ensUniversalResolver: {
            address: "0xddfb18888a9466688235887dec2a10c4f5effee9",
            blockCreated: 877008,
          },
        },
        rpcUrls: { default: { http: ["https://rpc.berachain.com"] } },
        blockExplorers: {
          default: { name: "Berascan", url: "https://berascan.com" },
        },
        ensTlds: [".bera"],
        testnet: !1,
      });
    },
    20237: (e, t, r) => {
      "use strict";
      r.d(t, { o: () => k });
      var n = r(16630);
      async function i(e, t) {
        return BigInt(await e.request({ method: "eth_gasPrice", params: [t] }));
      }
      async function o(e, t) {
        return BigInt(
          await e.request({ method: "eth_maxPriorityFeePerGas", params: [t] })
        );
      }
      var a = r(2753),
        s = r(41991),
        l = r(62822),
        f = r(92687),
        u = r(5359);
      function c(e) {
        return (
          0 === e ||
          0n === e ||
          null == e ||
          "0" === e ||
          "" === e ||
          ("string" == typeof e &&
            ("0x" === (0, u.B)(e).toLowerCase() ||
              "0x00" === (0, u.B)(e).toLowerCase()))
        );
      }
      function h(e) {
        return (
          "cip64" === e.type ||
          (void 0 !== e.maxFeePerGas &&
            void 0 !== e.maxPriorityFeePerGas &&
            !c(e.feeCurrency))
        );
      }
      let d = {
        block: (0, s.R)({
          format: (e) => ({
            transactions: e.transactions?.map((e) =>
              "string" == typeof e
                ? e
                : {
                    ...l.uP(e),
                    ...(e.gatewayFee
                      ? {
                          gatewayFee: a.uU(e.gatewayFee),
                          gatewayFeeRecipient: e.gatewayFeeRecipient,
                        }
                      : {}),
                    feeCurrency: e.feeCurrency,
                  }
            ),
          }),
        }),
        transaction: (0, l.gU)({
          format(e) {
            if ("0x7e" === e.type)
              return {
                isSystemTx: e.isSystemTx,
                mint: e.mint ? (0, a.uU)(e.mint) : void 0,
                sourceHash: e.sourceHash,
                type: "deposit",
              };
            let t = { feeCurrency: e.feeCurrency };
            return (
              "0x7b" === e.type
                ? (t.type = "cip64")
                : ("0x7c" === e.type && (t.type = "cip42"),
                  (t.gatewayFee = e.gatewayFee
                    ? (0, a.uU)(e.gatewayFee)
                    : null),
                  (t.gatewayFeeRecipient = e.gatewayFeeRecipient)),
              t
            );
          },
        }),
        transactionRequest: (0, f.bm)({
          format(e) {
            let t = {};
            return (
              e.feeCurrency && (t.feeCurrency = e.feeCurrency),
              h(e) && (t.type = "0x7b"),
              t
            );
          },
        }),
      };
      var p = r(60027),
        y = r(83484),
        g = r(27095),
        b = r(35185),
        m = r(27184),
        w = r(76892),
        v = r(81649),
        x = r(58355),
        E = r(98114),
        _ = r(97701),
        S = r(64189),
        A = r(56840);
      let B = p.Ao,
        k = {
          blockTime: 1e3,
          contracts: n.M,
          formatters: d,
          serializers: {
            transaction: function (e, t) {
              return h(e)
                ? (function (e, t) {
                    !(function (e) {
                      let {
                        chainId: t,
                        maxPriorityFeePerGas: r,
                        gasPrice: n,
                        maxFeePerGas: i,
                        to: o,
                        feeCurrency: a,
                      } = e;
                      if (t <= 0) throw new b.qD({ chainId: t });
                      if (o && !(0, v.P)(o)) throw new y.M({ address: o });
                      if (n)
                        throw new g.C(
                          "`gasPrice` is not a valid CIP-64 Transaction attribute."
                        );
                      if (!c(i) && i > B) throw new m.BG({ maxFeePerGas: i });
                      if (!c(r) && !c(i) && r > i)
                        throw new m.lN({
                          maxFeePerGas: i,
                          maxPriorityFeePerGas: r,
                        });
                      if (!c(a) && !(0, v.P)(a))
                        throw new g.C(
                          "`feeCurrency` MUST be a token address for CIP-64 transactions."
                        );
                      if (c(a))
                        throw new g.C(
                          "`feeCurrency` must be provided for CIP-64 transactions."
                        );
                    })(e);
                    let {
                        chainId: r,
                        gas: n,
                        nonce: i,
                        to: o,
                        value: a,
                        maxFeePerGas: s,
                        maxPriorityFeePerGas: l,
                        accessList: f,
                        feeCurrency: u,
                        data: h,
                      } = e,
                      d = [
                        (0, E.nj)(r),
                        i ? (0, E.nj)(i) : "0x",
                        l ? (0, E.nj)(l) : "0x",
                        s ? (0, E.nj)(s) : "0x",
                        n ? (0, E.nj)(n) : "0x",
                        o ?? "0x",
                        a ? (0, E.nj)(a) : "0x",
                        h ?? "0x",
                        (0, S.f)(f),
                        u,
                        ...(0, A.Z)(e, t),
                      ];
                    return (0, x.aP)(["0x7b", (0, _.EQ)(d)]);
                  })(e, t)
                : (0, w.bQ)(e, t);
            },
          },
          fees: {
            estimateFeesPerGas: async (e) => {
              if (!e.request?.feeCurrency) return null;
              let [t, r] = await Promise.all([
                i(e.client, e.request.feeCurrency),
                o(e.client, e.request.feeCurrency),
              ]);
              return {
                maxFeePerGas: e.multiply(t - r) + r,
                maxPriorityFeePerGas: r,
              };
            },
          },
        };
    },
    23065: (e, t, r) => {
      var n = r(29143),
        i = r(51642).Buffer;
      !(function () {
        var t = {
            992: function (e) {
              e.exports = function (e, r, n) {
                if (e.filter) return e.filter(r, n);
                if (null == e || "function" != typeof r) throw TypeError();
                for (var i = [], o = 0; o < e.length; o++)
                  if (t.call(e, o)) {
                    var a = e[o];
                    r.call(n, a, o, e) && i.push(a);
                  }
                return i;
              };
              var t = Object.prototype.hasOwnProperty;
            },
            167: function (e, t, r) {
              "use strict";
              function i(e) {
                return (i =
                  "function" == typeof Symbol &&
                  "symbol" == typeof Symbol.iterator
                    ? function (e) {
                        return typeof e;
                      }
                    : function (e) {
                        return e &&
                          "function" == typeof Symbol &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? "symbol"
                          : typeof e;
                      })(e);
              }
              var o,
                a,
                s = r(23).codes,
                l = s.ERR_AMBIGUOUS_ARGUMENT,
                f = s.ERR_INVALID_ARG_TYPE,
                u = s.ERR_INVALID_ARG_VALUE,
                c = s.ERR_INVALID_RETURN_VALUE,
                h = s.ERR_MISSING_ARGS,
                d = r(404),
                p = r(177).inspect,
                y = r(177).types,
                g = y.isPromise,
                b = y.isRegExp,
                m = Object.assign ? Object.assign : r(604).assign,
                w = Object.is ? Object.is : r(208);
              function v() {
                var e = r(176);
                (o = e.isDeepEqual), (a = e.isDeepStrictEqual);
              }
              var x = !1,
                E = (e.exports = B),
                _ = {};
              function S(e) {
                if (e.message instanceof Error) throw e.message;
                throw new d(e);
              }
              function A(e, t, r, n) {
                if (!r) {
                  var i = !1;
                  if (0 === t)
                    (i = !0), (n = "No value argument passed to `assert.ok()`");
                  else if (n instanceof Error) throw n;
                  var o = new d({
                    actual: r,
                    expected: !0,
                    message: n,
                    operator: "==",
                    stackStartFn: e,
                  });
                  throw ((o.generatedMessage = i), o);
                }
              }
              function B() {
                for (var e = arguments.length, t = Array(e), r = 0; r < e; r++)
                  t[r] = arguments[r];
                A.apply(void 0, [B, t.length].concat(t));
              }
              (E.fail = function e(t, r, i, o, a) {
                var s,
                  l = arguments.length;
                if (
                  (0 === l
                    ? (s = "Failed")
                    : 1 === l
                    ? ((i = t), (t = void 0))
                    : (!1 === x &&
                        ((x = !0),
                        (n.emitWarning
                          ? n.emitWarning
                          : console.warn.bind(console))(
                          "assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.",
                          "DeprecationWarning",
                          "DEP0094"
                        )),
                      2 === l && (o = "!=")),
                  i instanceof Error)
                )
                  throw i;
                var f = {
                  actual: t,
                  expected: r,
                  operator: void 0 === o ? "fail" : o,
                  stackStartFn: a || e,
                };
                void 0 !== i && (f.message = i);
                var u = new d(f);
                throw (s && ((u.message = s), (u.generatedMessage = !0)), u);
              }),
                (E.AssertionError = d),
                (E.ok = B),
                (E.equal = function e(t, r, n) {
                  if (arguments.length < 2) throw new h("actual", "expected");
                  t != r &&
                    S({
                      actual: t,
                      expected: r,
                      message: n,
                      operator: "==",
                      stackStartFn: e,
                    });
                }),
                (E.notEqual = function e(t, r, n) {
                  if (arguments.length < 2) throw new h("actual", "expected");
                  t == r &&
                    S({
                      actual: t,
                      expected: r,
                      message: n,
                      operator: "!=",
                      stackStartFn: e,
                    });
                }),
                (E.deepEqual = function e(t, r, n) {
                  if (arguments.length < 2) throw new h("actual", "expected");
                  void 0 === o && v(),
                    o(t, r) ||
                      S({
                        actual: t,
                        expected: r,
                        message: n,
                        operator: "deepEqual",
                        stackStartFn: e,
                      });
                }),
                (E.notDeepEqual = function e(t, r, n) {
                  if (arguments.length < 2) throw new h("actual", "expected");
                  void 0 === o && v(),
                    o(t, r) &&
                      S({
                        actual: t,
                        expected: r,
                        message: n,
                        operator: "notDeepEqual",
                        stackStartFn: e,
                      });
                }),
                (E.deepStrictEqual = function e(t, r, n) {
                  if (arguments.length < 2) throw new h("actual", "expected");
                  void 0 === o && v(),
                    a(t, r) ||
                      S({
                        actual: t,
                        expected: r,
                        message: n,
                        operator: "deepStrictEqual",
                        stackStartFn: e,
                      });
                }),
                (E.notDeepStrictEqual = function e(t, r, n) {
                  if (arguments.length < 2) throw new h("actual", "expected");
                  void 0 === o && v(),
                    a(t, r) &&
                      S({
                        actual: t,
                        expected: r,
                        message: n,
                        operator: "notDeepStrictEqual",
                        stackStartFn: e,
                      });
                }),
                (E.strictEqual = function e(t, r, n) {
                  if (arguments.length < 2) throw new h("actual", "expected");
                  w(t, r) ||
                    S({
                      actual: t,
                      expected: r,
                      message: n,
                      operator: "strictEqual",
                      stackStartFn: e,
                    });
                }),
                (E.notStrictEqual = function e(t, r, n) {
                  if (arguments.length < 2) throw new h("actual", "expected");
                  w(t, r) &&
                    S({
                      actual: t,
                      expected: r,
                      message: n,
                      operator: "notStrictEqual",
                      stackStartFn: e,
                    });
                });
              var k = function e(t, r, n) {
                var i = this;
                !(function (e, t) {
                  if (!(e instanceof t))
                    throw TypeError("Cannot call a class as a function");
                })(this, e),
                  r.forEach(function (e) {
                    e in t &&
                      (void 0 !== n &&
                      "string" == typeof n[e] &&
                      b(t[e]) &&
                      t[e].test(n[e])
                        ? (i[e] = n[e])
                        : (i[e] = t[e]));
                  });
              };
              function O(e, t, r, n) {
                if ("function" != typeof t) {
                  if (b(t)) return t.test(e);
                  if (2 == arguments.length)
                    throw new f("expected", ["Function", "RegExp"], t);
                  if ("object" !== i(e) || null === e) {
                    var s = new d({
                      actual: e,
                      expected: t,
                      message: r,
                      operator: "deepStrictEqual",
                      stackStartFn: n,
                    });
                    throw ((s.operator = n.name), s);
                  }
                  var l = Object.keys(t);
                  if (t instanceof Error) l.push("name", "message");
                  else if (0 === l.length)
                    throw new u("error", t, "may not be an empty object");
                  return (
                    void 0 === o && v(),
                    l.forEach(function (i) {
                      !(
                        "string" == typeof e[i] &&
                        b(t[i]) &&
                        t[i].test(e[i])
                      ) &&
                        !(function (e, t, r, n, i, o) {
                          if (!(r in e) || !a(e[r], t[r])) {
                            if (!n) {
                              var s = new d({
                                actual: new k(e, i),
                                expected: new k(t, i, e),
                                operator: "deepStrictEqual",
                                stackStartFn: o,
                              });
                              throw (
                                ((s.actual = e),
                                (s.expected = t),
                                (s.operator = o.name),
                                s)
                              );
                            }
                            S({
                              actual: e,
                              expected: t,
                              message: n,
                              operator: o.name,
                              stackStartFn: o,
                            });
                          }
                        })(e, t, i, r, l, n);
                    }),
                    !0
                  );
                }
                return (
                  (void 0 !== t.prototype && e instanceof t) ||
                  (!Error.isPrototypeOf(t) && !0 === t.call({}, e))
                );
              }
              function T(e) {
                if ("function" != typeof e) throw new f("fn", "Function", e);
                try {
                  e();
                } catch (e) {
                  return e;
                }
                return _;
              }
              function I(e) {
                return (
                  g(e) ||
                  (null !== e &&
                    "object" === i(e) &&
                    "function" == typeof e.then &&
                    "function" == typeof e.catch)
                );
              }
              function R(e) {
                return Promise.resolve().then(function () {
                  var t;
                  if ("function" == typeof e) {
                    if (!I((t = e())))
                      throw new c("instance of Promise", "promiseFn", t);
                  } else if (I(e)) t = e;
                  else throw new f("promiseFn", ["Function", "Promise"], e);
                  return Promise.resolve()
                    .then(function () {
                      return t;
                    })
                    .then(function () {
                      return _;
                    })
                    .catch(function (e) {
                      return e;
                    });
                });
              }
              function M(e, t, r, n) {
                if ("string" == typeof r) {
                  if (4 == arguments.length)
                    throw new f(
                      "error",
                      ["Object", "Error", "Function", "RegExp"],
                      r
                    );
                  if ("object" === i(t) && null !== t) {
                    if (t.message === r)
                      throw new l(
                        "error/message",
                        'The error message "'.concat(
                          t.message,
                          '" is identical to the message.'
                        )
                      );
                  } else if (t === r)
                    throw new l(
                      "error/message",
                      'The error "'.concat(t, '" is identical to the message.')
                    );
                  (n = r), (r = void 0);
                } else if (
                  null != r &&
                  "object" !== i(r) &&
                  "function" != typeof r
                )
                  throw new f(
                    "error",
                    ["Object", "Error", "Function", "RegExp"],
                    r
                  );
                if (t === _) {
                  var o = "";
                  r && r.name && (o += " (".concat(r.name, ")")),
                    (o += n ? ": ".concat(n) : ".");
                  var a = "rejects" === e.name ? "rejection" : "exception";
                  S({
                    actual: void 0,
                    expected: r,
                    operator: e.name,
                    message: "Missing expected ".concat(a).concat(o),
                    stackStartFn: e,
                  });
                }
                if (r && !O(t, r, n, e)) throw t;
              }
              function P(e, t, r, n) {
                if (t !== _) {
                  if (
                    ("string" == typeof r && ((n = r), (r = void 0)),
                    !r || O(t, r))
                  ) {
                    var i = n ? ": ".concat(n) : ".",
                      o =
                        "doesNotReject" === e.name ? "rejection" : "exception";
                    S({
                      actual: t,
                      expected: r,
                      operator: e.name,
                      message:
                        "Got unwanted ".concat(o).concat(i, "\n") +
                        'Actual message: "'.concat(t && t.message, '"'),
                      stackStartFn: e,
                    });
                  }
                  throw t;
                }
              }
              function C() {
                for (var e = arguments.length, t = Array(e), r = 0; r < e; r++)
                  t[r] = arguments[r];
                A.apply(void 0, [C, t.length].concat(t));
              }
              (E.throws = function e(t) {
                for (
                  var r = arguments.length, n = Array(r > 1 ? r - 1 : 0), i = 1;
                  i < r;
                  i++
                )
                  n[i - 1] = arguments[i];
                M.apply(void 0, [e, T(t)].concat(n));
              }),
                (E.rejects = function e(t) {
                  for (
                    var r = arguments.length,
                      n = Array(r > 1 ? r - 1 : 0),
                      i = 1;
                    i < r;
                    i++
                  )
                    n[i - 1] = arguments[i];
                  return R(t).then(function (t) {
                    return M.apply(void 0, [e, t].concat(n));
                  });
                }),
                (E.doesNotThrow = function e(t) {
                  for (
                    var r = arguments.length,
                      n = Array(r > 1 ? r - 1 : 0),
                      i = 1;
                    i < r;
                    i++
                  )
                    n[i - 1] = arguments[i];
                  P.apply(void 0, [e, T(t)].concat(n));
                }),
                (E.doesNotReject = function e(t) {
                  for (
                    var r = arguments.length,
                      n = Array(r > 1 ? r - 1 : 0),
                      i = 1;
                    i < r;
                    i++
                  )
                    n[i - 1] = arguments[i];
                  return R(t).then(function (t) {
                    return P.apply(void 0, [e, t].concat(n));
                  });
                }),
                (E.ifError = function e(t) {
                  if (null != t) {
                    var r = "ifError got unwanted exception: ";
                    "object" === i(t) && "string" == typeof t.message
                      ? 0 === t.message.length && t.constructor
                        ? (r += t.constructor.name)
                        : (r += t.message)
                      : (r += p(t));
                    var n = new d({
                        actual: t,
                        expected: null,
                        operator: "ifError",
                        message: r,
                        stackStartFn: e,
                      }),
                      o = t.stack;
                    if ("string" == typeof o) {
                      var a = o.split("\n");
                      a.shift();
                      for (
                        var s = n.stack.split("\n"), l = 0;
                        l < a.length;
                        l++
                      ) {
                        var f = s.indexOf(a[l]);
                        if (-1 !== f) {
                          s = s.slice(0, f);
                          break;
                        }
                      }
                      n.stack = ""
                        .concat(s.join("\n"), "\n")
                        .concat(a.join("\n"));
                    }
                    throw n;
                  }
                }),
                (E.strict = m(C, E, {
                  equal: E.strictEqual,
                  deepEqual: E.deepStrictEqual,
                  notEqual: E.notStrictEqual,
                  notDeepEqual: E.notDeepStrictEqual,
                })),
                (E.strict.strict = E.strict);
            },
            404: function (e, t, r) {
              "use strict";
              function i(e, t) {
                return t && ("object" === u(t) || "function" == typeof t)
                  ? t
                  : o(e);
              }
              function o(e) {
                if (void 0 === e)
                  throw ReferenceError(
                    "this hasn't been initialised - super() hasn't been called"
                  );
                return e;
              }
              function a(e) {
                var t = "function" == typeof Map ? new Map() : void 0;
                return (a = function (e) {
                  var r;
                  if (
                    null === e ||
                    ((r = e),
                    -1 === Function.toString.call(r).indexOf("[native code]"))
                  )
                    return e;
                  if ("function" != typeof e)
                    throw TypeError(
                      "Super expression must either be null or a function"
                    );
                  if (void 0 !== t) {
                    if (t.has(e)) return t.get(e);
                    t.set(e, n);
                  }
                  function n() {
                    return s(e, arguments, f(this).constructor);
                  }
                  return (
                    (n.prototype = Object.create(e.prototype, {
                      constructor: {
                        value: n,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0,
                      },
                    })),
                    l(n, e)
                  );
                })(e);
              }
              function s(e, t, r) {
                return (s = !(function () {
                  if (
                    "undefined" == typeof Reflect ||
                    !Reflect.construct ||
                    Reflect.construct.sham
                  )
                    return !1;
                  if ("function" == typeof Proxy) return !0;
                  try {
                    return (
                      Date.prototype.toString.call(
                        Reflect.construct(Date, [], function () {})
                      ),
                      !0
                    );
                  } catch (e) {
                    return !1;
                  }
                })()
                  ? function (e, t, r) {
                      var n = [null];
                      n.push.apply(n, t);
                      var i = new (Function.bind.apply(e, n))();
                      return r && l(i, r.prototype), i;
                    }
                  : Reflect.construct).apply(null, arguments);
              }
              function l(e, t) {
                return (l =
                  Object.setPrototypeOf ||
                  function (e, t) {
                    return (e.__proto__ = t), e;
                  })(e, t);
              }
              function f(e) {
                return (f = Object.setPrototypeOf
                  ? Object.getPrototypeOf
                  : function (e) {
                      return e.__proto__ || Object.getPrototypeOf(e);
                    })(e);
              }
              function u(e) {
                return (u =
                  "function" == typeof Symbol &&
                  "symbol" == typeof Symbol.iterator
                    ? function (e) {
                        return typeof e;
                      }
                    : function (e) {
                        return e &&
                          "function" == typeof Symbol &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? "symbol"
                          : typeof e;
                      })(e);
              }
              var c = r(177).inspect,
                h = r(23).codes.ERR_INVALID_ARG_TYPE;
              function d(e, t, r) {
                return (
                  (void 0 === r || r > e.length) && (r = e.length),
                  e.substring(r - t.length, r) === t
                );
              }
              var p = "",
                y = "",
                g = "",
                b = "",
                m = {
                  deepStrictEqual: "Expected values to be strictly deep-equal:",
                  strictEqual: "Expected values to be strictly equal:",
                  strictEqualObject:
                    'Expected "actual" to be reference-equal to "expected":',
                  deepEqual: "Expected values to be loosely deep-equal:",
                  equal: "Expected values to be loosely equal:",
                  notDeepStrictEqual:
                    'Expected "actual" not to be strictly deep-equal to:',
                  notStrictEqual:
                    'Expected "actual" to be strictly unequal to:',
                  notStrictEqualObject:
                    'Expected "actual" not to be reference-equal to "expected":',
                  notDeepEqual:
                    'Expected "actual" not to be loosely deep-equal to:',
                  notEqual: 'Expected "actual" to be loosely unequal to:',
                  notIdentical: "Values identical but not reference-equal:",
                };
              function w(e) {
                var t = Object.keys(e),
                  r = Object.create(Object.getPrototypeOf(e));
                return (
                  t.forEach(function (t) {
                    r[t] = e[t];
                  }),
                  Object.defineProperty(r, "message", { value: e.message }),
                  r
                );
              }
              function v(e) {
                return c(e, {
                  compact: !1,
                  customInspect: !1,
                  depth: 1e3,
                  maxArrayLength: 1 / 0,
                  showHidden: !1,
                  breakLength: 1 / 0,
                  showProxy: !1,
                  sorted: !0,
                  getters: !0,
                });
              }
              e.exports = (function (e) {
                var t;
                function r(e) {
                  if (
                    (!(function (e, t) {
                      if (!(e instanceof t))
                        throw TypeError("Cannot call a class as a function");
                    })(this, r),
                    "object" !== u(e) || null === e)
                  )
                    throw new h("options", "Object", e);
                  var t,
                    a = e.message,
                    s = e.operator,
                    l = e.stackStartFn,
                    c = e.actual,
                    x = e.expected,
                    E = Error.stackTraceLimit;
                  if (((Error.stackTraceLimit = 0), null != a))
                    t = i(this, f(r).call(this, String(a)));
                  else if (
                    (n.stderr &&
                      n.stderr.isTTY &&
                      (n.stderr &&
                      n.stderr.getColorDepth &&
                      1 !== n.stderr.getColorDepth()
                        ? ((p = "\x1b[34m"),
                          (y = "\x1b[32m"),
                          (b = "\x1b[39m"),
                          (g = "\x1b[31m"))
                        : ((p = ""), (y = ""), (b = ""), (g = ""))),
                    "object" === u(c) &&
                      null !== c &&
                      "object" === u(x) &&
                      null !== x &&
                      "stack" in c &&
                      c instanceof Error &&
                      "stack" in x &&
                      x instanceof Error &&
                      ((c = w(c)), (x = w(x))),
                    "deepStrictEqual" === s || "strictEqual" === s)
                  )
                    t = i(
                      this,
                      f(r).call(
                        this,
                        (function (e, t, r) {
                          var i = "",
                            o = "",
                            a = 0,
                            s = "",
                            l = !1,
                            f = v(e),
                            c = f.split("\n"),
                            h = v(t).split("\n"),
                            w = 0,
                            x = "";
                          if (
                            ("strictEqual" === r &&
                              "object" === u(e) &&
                              "object" === u(t) &&
                              null !== e &&
                              null !== t &&
                              (r = "strictEqualObject"),
                            1 === c.length && 1 === h.length && c[0] !== h[0])
                          ) {
                            var E = c[0].length + h[0].length;
                            if (E <= 10) {
                              if (
                                ("object" !== u(e) || null === e) &&
                                ("object" !== u(t) || null === t) &&
                                (0 !== e || 0 !== t)
                              )
                                return (
                                  "".concat(m[r], "\n\n") +
                                  "".concat(c[0], " !== ").concat(h[0], "\n")
                                );
                            } else if (
                              "strictEqualObject" !== r &&
                              E <
                                (n.stderr && n.stderr.isTTY
                                  ? n.stderr.columns
                                  : 80)
                            ) {
                              for (; c[0][w] === h[0][w]; ) w++;
                              w > 2 &&
                                ((x = "\n  ".concat(
                                  (function (e, t) {
                                    if (
                                      ((t = Math.floor(t)),
                                      0 == e.length || 0 == t)
                                    )
                                      return "";
                                    var r = e.length * t;
                                    for (
                                      t = Math.floor(Math.log(t) / Math.log(2));
                                      t;

                                    )
                                      (e += e), t--;
                                    return e + e.substring(0, r - e.length);
                                  })(" ", w),
                                  "^"
                                )),
                                (w = 0));
                            }
                          }
                          for (
                            var _ = c[c.length - 1], S = h[h.length - 1];
                            _ === S &&
                            (w++ < 2
                              ? (s = "\n  ".concat(_).concat(s))
                              : (i = _),
                            c.pop(),
                            h.pop(),
                            0 !== c.length && 0 !== h.length);

                          )
                            (_ = c[c.length - 1]), (S = h[h.length - 1]);
                          var A = Math.max(c.length, h.length);
                          if (0 === A) {
                            var B = f.split("\n");
                            if (B.length > 30)
                              for (
                                B[26] = "".concat(p, "...").concat(b);
                                B.length > 27;

                              )
                                B.pop();
                            return ""
                              .concat(m.notIdentical, "\n\n")
                              .concat(B.join("\n"), "\n");
                          }
                          w > 3 &&
                            ((s = "\n".concat(p, "...").concat(b).concat(s)),
                            (l = !0)),
                            "" !== i &&
                              ((s = "\n  ".concat(i).concat(s)), (i = ""));
                          var k = 0,
                            O =
                              m[r] +
                              "\n"
                                .concat(y, "+ actual")
                                .concat(b, " ")
                                .concat(g, "- expected")
                                .concat(b),
                            T = " "
                              .concat(p, "...")
                              .concat(b, " Lines skipped");
                          for (w = 0; w < A; w++) {
                            var I = w - a;
                            if (c.length < w + 1)
                              I > 1 &&
                                w > 2 &&
                                (I > 4
                                  ? ((o += "\n".concat(p, "...").concat(b)),
                                    (l = !0))
                                  : I > 3 &&
                                    ((o += "\n  ".concat(h[w - 2])), k++),
                                (o += "\n  ".concat(h[w - 1])),
                                k++),
                                (a = w),
                                (i += "\n"
                                  .concat(g, "-")
                                  .concat(b, " ")
                                  .concat(h[w])),
                                k++;
                            else if (h.length < w + 1)
                              I > 1 &&
                                w > 2 &&
                                (I > 4
                                  ? ((o += "\n".concat(p, "...").concat(b)),
                                    (l = !0))
                                  : I > 3 &&
                                    ((o += "\n  ".concat(c[w - 2])), k++),
                                (o += "\n  ".concat(c[w - 1])),
                                k++),
                                (a = w),
                                (o += "\n"
                                  .concat(y, "+")
                                  .concat(b, " ")
                                  .concat(c[w])),
                                k++;
                            else {
                              var R = h[w],
                                M = c[w],
                                P =
                                  M !== R &&
                                  (!d(M, ",") || M.slice(0, -1) !== R);
                              P &&
                                d(R, ",") &&
                                R.slice(0, -1) === M &&
                                ((P = !1), (M += ",")),
                                P
                                  ? (I > 1 &&
                                      w > 2 &&
                                      (I > 4
                                        ? ((o += "\n"
                                            .concat(p, "...")
                                            .concat(b)),
                                          (l = !0))
                                        : I > 3 &&
                                          ((o += "\n  ".concat(c[w - 2])), k++),
                                      (o += "\n  ".concat(c[w - 1])),
                                      k++),
                                    (a = w),
                                    (o += "\n"
                                      .concat(y, "+")
                                      .concat(b, " ")
                                      .concat(M)),
                                    (i += "\n"
                                      .concat(g, "-")
                                      .concat(b, " ")
                                      .concat(R)),
                                    (k += 2))
                                  : ((o += i),
                                    (i = ""),
                                    (1 === I || 0 === w) &&
                                      ((o += "\n  ".concat(M)), k++));
                            }
                            if (k > 20 && w < A - 2)
                              return (
                                ""
                                  .concat(O)
                                  .concat(T, "\n")
                                  .concat(o, "\n")
                                  .concat(p, "...")
                                  .concat(b)
                                  .concat(i, "\n") +
                                "".concat(p, "...").concat(b)
                              );
                          }
                          return ""
                            .concat(O)
                            .concat(l ? T : "", "\n")
                            .concat(o)
                            .concat(i)
                            .concat(s)
                            .concat(x);
                        })(c, x, s)
                      )
                    );
                  else if (
                    "notDeepStrictEqual" === s ||
                    "notStrictEqual" === s
                  ) {
                    var _ = m[s],
                      S = v(c).split("\n");
                    if (
                      ("notStrictEqual" === s &&
                        "object" === u(c) &&
                        null !== c &&
                        (_ = m.notStrictEqualObject),
                      S.length > 30)
                    )
                      for (
                        S[26] = "".concat(p, "...").concat(b);
                        S.length > 27;

                      )
                        S.pop();
                    t =
                      1 === S.length
                        ? i(
                            this,
                            f(r).call(this, "".concat(_, " ").concat(S[0]))
                          )
                        : i(
                            this,
                            f(r).call(
                              this,
                              "".concat(_, "\n\n").concat(S.join("\n"), "\n")
                            )
                          );
                  } else {
                    var A = v(c),
                      B = "",
                      k = m[s];
                    "notDeepEqual" === s || "notEqual" === s
                      ? (A = "".concat(m[s], "\n\n").concat(A)).length > 1024 &&
                        (A = "".concat(A.slice(0, 1021), "..."))
                      : ((B = "".concat(v(x))),
                        A.length > 512 &&
                          (A = "".concat(A.slice(0, 509), "...")),
                        B.length > 512 &&
                          (B = "".concat(B.slice(0, 509), "...")),
                        "deepEqual" === s || "equal" === s
                          ? (A = ""
                              .concat(k, "\n\n")
                              .concat(A, "\n\nshould equal\n\n"))
                          : (B = " ".concat(s, " ").concat(B))),
                      (t = i(this, f(r).call(this, "".concat(A).concat(B))));
                  }
                  return (
                    (Error.stackTraceLimit = E),
                    (t.generatedMessage = !a),
                    Object.defineProperty(o(t), "name", {
                      value: "AssertionError [ERR_ASSERTION]",
                      enumerable: !1,
                      writable: !0,
                      configurable: !0,
                    }),
                    (t.code = "ERR_ASSERTION"),
                    (t.actual = c),
                    (t.expected = x),
                    (t.operator = s),
                    Error.captureStackTrace && Error.captureStackTrace(o(t), l),
                    t.stack,
                    (t.name = "AssertionError"),
                    i(t)
                  );
                }
                return (
                  !(function (e, t) {
                    if ("function" != typeof t && null !== t)
                      throw TypeError(
                        "Super expression must either be null or a function"
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && l(e, t);
                  })(r, e),
                  (t = [
                    {
                      key: "toString",
                      value: function () {
                        return ""
                          .concat(this.name, " [")
                          .concat(this.code, "]: ")
                          .concat(this.message);
                      },
                    },
                    {
                      key: c.custom,
                      value: function (e, t) {
                        return c(
                          this,
                          (function (e) {
                            for (var t = 1; t < arguments.length; t++) {
                              var r = null != arguments[t] ? arguments[t] : {},
                                n = Object.keys(r);
                              "function" ==
                                typeof Object.getOwnPropertySymbols &&
                                (n = n.concat(
                                  Object.getOwnPropertySymbols(r).filter(
                                    function (e) {
                                      return Object.getOwnPropertyDescriptor(
                                        r,
                                        e
                                      ).enumerable;
                                    }
                                  )
                                )),
                                n.forEach(function (t) {
                                  var n, i, o;
                                  (n = e),
                                    (i = t),
                                    (o = r[t]),
                                    i in n
                                      ? Object.defineProperty(n, i, {
                                          value: o,
                                          enumerable: !0,
                                          configurable: !0,
                                          writable: !0,
                                        })
                                      : (n[i] = o);
                                });
                            }
                            return e;
                          })({}, t, { customInspect: !1, depth: 0 })
                        );
                      },
                    },
                  ]),
                  (function (e, t) {
                    for (var r = 0; r < t.length; r++) {
                      var n = t[r];
                      (n.enumerable = n.enumerable || !1),
                        (n.configurable = !0),
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n);
                    }
                  })(r.prototype, t),
                  r
                );
              })(a(Error));
            },
            23: function (e, t, r) {
              "use strict";
              function n(e) {
                return (n =
                  "function" == typeof Symbol &&
                  "symbol" == typeof Symbol.iterator
                    ? function (e) {
                        return typeof e;
                      }
                    : function (e) {
                        return e &&
                          "function" == typeof Symbol &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? "symbol"
                          : typeof e;
                      })(e);
              }
              function i(e) {
                return (i = Object.setPrototypeOf
                  ? Object.getPrototypeOf
                  : function (e) {
                      return e.__proto__ || Object.getPrototypeOf(e);
                    })(e);
              }
              function o(e, t) {
                return (o =
                  Object.setPrototypeOf ||
                  function (e, t) {
                    return (e.__proto__ = t), e;
                  })(e, t);
              }
              var a,
                s,
                l = {};
              function f(e, t, r) {
                r || (r = Error);
                var a = (function (r) {
                  function a(r, o, s) {
                    var l, f;
                    return (
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw TypeError("Cannot call a class as a function");
                      })(this, a),
                      ((l =
                        (f = i(a).call(
                          this,
                          "string" == typeof t ? t : t(r, o, s)
                        )) &&
                        ("object" === n(f) || "function" == typeof f)
                          ? f
                          : (function (e) {
                              if (void 0 === e)
                                throw ReferenceError(
                                  "this hasn't been initialised - super() hasn't been called"
                                );
                              return e;
                            })(this)).code = e),
                      l
                    );
                  }
                  return (
                    !(function (e, t) {
                      if ("function" != typeof t && null !== t)
                        throw TypeError(
                          "Super expression must either be null or a function"
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                          value: e,
                          writable: !0,
                          configurable: !0,
                        },
                      })),
                        t && o(e, t);
                    })(a, r),
                    a
                  );
                })(r);
                l[e] = a;
              }
              function u(e, t) {
                if (!Array.isArray(e))
                  return "of ".concat(t, " ").concat(String(e));
                var r = e.length;
                return ((e = e.map(function (e) {
                  return String(e);
                })),
                r > 2)
                  ? "one of "
                      .concat(t, " ")
                      .concat(e.slice(0, r - 1).join(", "), ", or ") + e[r - 1]
                  : 2 === r
                  ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1])
                  : "of ".concat(t, " ").concat(e[0]);
              }
              f(
                "ERR_AMBIGUOUS_ARGUMENT",
                'The "%s" argument is ambiguous. %s',
                TypeError
              ),
                f(
                  "ERR_INVALID_ARG_TYPE",
                  function (e, t, i) {
                    if (
                      ((void 0 === a && (a = r(167)),
                      a("string" == typeof e, "'name' must be a string"),
                      "string" == typeof t &&
                        ((o = "not "), t.substr(0, o.length) === o))
                        ? ((c = "must not be"), (t = t.replace(/^not /, "")))
                        : (c = "must be"),
                      (s = " argument"),
                      (void 0 === l || l > e.length) && (l = e.length),
                      e.substring(l - s.length, l) === s)
                    )
                      h = "The "
                        .concat(e, " ")
                        .concat(c, " ")
                        .concat(u(t, "type"));
                    else {
                      var o,
                        s,
                        l,
                        f,
                        c,
                        h,
                        d = ("number" != typeof f && (f = 0),
                        f + 1 > e.length || -1 === e.indexOf(".", f))
                          ? "argument"
                          : "property";
                      h = 'The "'
                        .concat(e, '" ')
                        .concat(d, " ")
                        .concat(c, " ")
                        .concat(u(t, "type"));
                    }
                    return h + ". Received type ".concat(n(i));
                  },
                  TypeError
                ),
                f(
                  "ERR_INVALID_ARG_VALUE",
                  function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : "is invalid";
                    void 0 === s && (s = r(177));
                    var i = s.inspect(t);
                    return (
                      i.length > 128 && (i = "".concat(i.slice(0, 128), "...")),
                      "The argument '"
                        .concat(e, "' ")
                        .concat(n, ". Received ")
                        .concat(i)
                    );
                  },
                  TypeError,
                  RangeError
                ),
                f(
                  "ERR_INVALID_RETURN_VALUE",
                  function (e, t, r) {
                    var i;
                    return (
                      (i =
                        r && r.constructor && r.constructor.name
                          ? "instance of ".concat(r.constructor.name)
                          : "type ".concat(n(r))),
                      "Expected "
                        .concat(e, ' to be returned from the "')
                        .concat(t, '"') + " function but got ".concat(i, ".")
                    );
                  },
                  TypeError
                ),
                f(
                  "ERR_MISSING_ARGS",
                  function () {
                    for (
                      var e = arguments.length, t = Array(e), n = 0;
                      n < e;
                      n++
                    )
                      t[n] = arguments[n];
                    void 0 === a && (a = r(167)),
                      a(t.length > 0, "At least one arg needs to be specified");
                    var i = "The ",
                      o = t.length;
                    switch (
                      ((t = t.map(function (e) {
                        return '"'.concat(e, '"');
                      })),
                      o)
                    ) {
                      case 1:
                        i += "".concat(t[0], " argument");
                        break;
                      case 2:
                        i += ""
                          .concat(t[0], " and ")
                          .concat(t[1], " arguments");
                        break;
                      default:
                        (i += t.slice(0, o - 1).join(", ")),
                          (i += ", and ".concat(t[o - 1], " arguments"));
                    }
                    return "".concat(i, " must be specified");
                  },
                  TypeError
                ),
                (e.exports.codes = l);
            },
            176: function (e, t, r) {
              "use strict";
              function n(e, t) {
                return (
                  (function (e) {
                    if (Array.isArray(e)) return e;
                  })(e) ||
                  (function (e, t) {
                    var r = [],
                      n = !0,
                      i = !1,
                      o = void 0;
                    try {
                      for (
                        var a, s = e[Symbol.iterator]();
                        !(n = (a = s.next()).done) &&
                        (r.push(a.value), !t || r.length !== t);
                        n = !0
                      );
                    } catch (e) {
                      (i = !0), (o = e);
                    } finally {
                      try {
                        n || null == s.return || s.return();
                      } finally {
                        if (i) throw o;
                      }
                    }
                    return r;
                  })(e, t) ||
                  (function () {
                    throw TypeError(
                      "Invalid attempt to destructure non-iterable instance"
                    );
                  })()
                );
              }
              function i(e) {
                return (i =
                  "function" == typeof Symbol &&
                  "symbol" == typeof Symbol.iterator
                    ? function (e) {
                        return typeof e;
                      }
                    : function (e) {
                        return e &&
                          "function" == typeof Symbol &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? "symbol"
                          : typeof e;
                      })(e);
              }
              var o = void 0 !== /a/g.flags,
                a = function (e) {
                  var t = [];
                  return (
                    e.forEach(function (e) {
                      return t.push(e);
                    }),
                    t
                  );
                },
                s = function (e) {
                  var t = [];
                  return (
                    e.forEach(function (e, r) {
                      return t.push([r, e]);
                    }),
                    t
                  );
                },
                l = Object.is ? Object.is : r(208),
                f = Object.getOwnPropertySymbols
                  ? Object.getOwnPropertySymbols
                  : function () {
                      return [];
                    },
                u = Number.isNaN ? Number.isNaN : r(718);
              function c(e) {
                return e.call.bind(e);
              }
              var h = c(Object.prototype.hasOwnProperty),
                d = c(Object.prototype.propertyIsEnumerable),
                p = c(Object.prototype.toString),
                y = r(177).types,
                g = y.isAnyArrayBuffer,
                b = y.isArrayBufferView,
                m = y.isDate,
                w = y.isMap,
                v = y.isRegExp,
                x = y.isSet,
                E = y.isNativeError,
                _ = y.isBoxedPrimitive,
                S = y.isNumberObject,
                A = y.isStringObject,
                B = y.isBooleanObject,
                k = y.isBigIntObject,
                O = y.isSymbolObject,
                T = y.isFloat32Array,
                I = y.isFloat64Array;
              function R(e) {
                if (0 === e.length || e.length > 10) return !0;
                for (var t = 0; t < e.length; t++) {
                  var r = e.charCodeAt(t);
                  if (r < 48 || r > 57) return !0;
                }
                return 10 === e.length && e >= 0x100000000;
              }
              function M(e) {
                return Object.keys(e)
                  .filter(R)
                  .concat(
                    f(e).filter(Object.prototype.propertyIsEnumerable.bind(e))
                  );
              }
              function P(e, t) {
                if (e === t) return 0;
                for (
                  var r = e.length, n = t.length, i = 0, o = Math.min(r, n);
                  i < o;
                  ++i
                )
                  if (e[i] !== t[i]) {
                    (r = e[i]), (n = t[i]);
                    break;
                  }
                return r < n ? -1 : +(n < r);
              }
              var C = void 0;
              function U(e, t, r, n) {
                if (e === t) return 0 !== e || !r || l(e, t);
                if (r) {
                  if ("object" !== i(e))
                    return "number" == typeof e && u(e) && u(t);
                  if (
                    "object" !== i(t) ||
                    null === e ||
                    null === t ||
                    Object.getPrototypeOf(e) !== Object.getPrototypeOf(t)
                  )
                    return !1;
                } else {
                  if (null === e || "object" !== i(e))
                    return (null === t || "object" !== i(t)) && e == t;
                  if (null === t || "object" !== i(t)) return !1;
                }
                var a = p(e);
                if (a !== p(t)) return !1;
                if (Array.isArray(e)) {
                  if (e.length !== t.length) return !1;
                  var s = M(e, C),
                    f = M(t, C);
                  return s.length === f.length && N(e, t, r, n, 1, s);
                }
                if (
                  "[object Object]" === a &&
                  ((!w(e) && w(t)) || (!x(e) && x(t)))
                )
                  return !1;
                if (m(e)) {
                  if (
                    !m(t) ||
                    Date.prototype.getTime.call(e) !==
                      Date.prototype.getTime.call(t)
                  )
                    return !1;
                } else if (v(e)) {
                  if (
                    !v(t) ||
                    (o
                      ? e.source !== t.source || e.flags !== t.flags
                      : RegExp.prototype.toString.call(e) !==
                        RegExp.prototype.toString.call(t))
                  )
                    return !1;
                } else if (E(e) || e instanceof Error) {
                  if (e.message !== t.message || e.name !== t.name) return !1;
                } else if (b(e)) {
                  if (!r && (T(e) || I(e))) {
                    if (
                      !(function (e, t) {
                        if (e.byteLength !== t.byteLength) return !1;
                        for (var r = 0; r < e.byteLength; r++)
                          if (e[r] !== t[r]) return !1;
                        return !0;
                      })(e, t)
                    )
                      return !1;
                  } else if (
                    e.byteLength !== t.byteLength ||
                    0 !==
                      P(
                        new Uint8Array(e.buffer, e.byteOffset, e.byteLength),
                        new Uint8Array(t.buffer, t.byteOffset, t.byteLength)
                      )
                  )
                    return !1;
                  var c = M(e, C),
                    h = M(t, C);
                  return c.length === h.length && N(e, t, r, n, 0, c);
                } else if (x(e))
                  return !!x(t) && e.size === t.size && N(e, t, r, n, 2);
                else if (w(e))
                  return !!w(t) && e.size === t.size && N(e, t, r, n, 3);
                else if (g(e)) {
                  if (
                    e.byteLength !== t.byteLength ||
                    0 !== P(new Uint8Array(e), new Uint8Array(t))
                  )
                    return !1;
                } else if (
                  _(e) &&
                  (S(e)
                    ? !(
                        S(t) &&
                        l(
                          Number.prototype.valueOf.call(e),
                          Number.prototype.valueOf.call(t)
                        )
                      )
                    : A(e)
                    ? !A(t) ||
                      String.prototype.valueOf.call(e) !==
                        String.prototype.valueOf.call(t)
                    : B(e)
                    ? !B(t) ||
                      Boolean.prototype.valueOf.call(e) !==
                        Boolean.prototype.valueOf.call(t)
                    : k(e)
                    ? !k(t) ||
                      BigInt.prototype.valueOf.call(e) !==
                        BigInt.prototype.valueOf.call(t)
                    : !O(t) ||
                      Symbol.prototype.valueOf.call(e) !==
                        Symbol.prototype.valueOf.call(t))
                )
                  return !1;
                return N(e, t, r, n, 0);
              }
              function L(e, t) {
                return t.filter(function (t) {
                  return d(e, t);
                });
              }
              function N(e, t, r, o, l, u) {
                if (5 == arguments.length) {
                  u = Object.keys(e);
                  var c = Object.keys(t);
                  if (u.length !== c.length) return !1;
                }
                for (var p = 0; p < u.length; p++) if (!h(t, u[p])) return !1;
                if (r && 5 == arguments.length) {
                  var y = f(e);
                  if (0 !== y.length) {
                    var g = 0;
                    for (p = 0; p < y.length; p++) {
                      var b = y[p];
                      if (d(e, b)) {
                        if (!d(t, b)) return !1;
                        u.push(b), g++;
                      } else if (d(t, b)) return !1;
                    }
                    var m = f(t);
                    if (y.length !== m.length && L(t, m).length !== g)
                      return !1;
                  } else {
                    var w = f(t);
                    if (0 !== w.length && 0 !== L(t, w).length) return !1;
                  }
                }
                if (
                  0 === u.length &&
                  (0 === l || (1 === l && 0 === e.length) || 0 === e.size)
                )
                  return !0;
                if (void 0 === o)
                  o = { val1: new Map(), val2: new Map(), position: 0 };
                else {
                  var v = o.val1.get(e);
                  if (void 0 !== v) {
                    var x = o.val2.get(t);
                    if (void 0 !== x) return v === x;
                  }
                  o.position++;
                }
                o.val1.set(e, o.position), o.val2.set(t, o.position);
                var E = (function (e, t, r, o, l, f) {
                  var u = 0;
                  if (2 === f) {
                    if (
                      !(function (e, t, r, n) {
                        for (var o = null, s = a(e), l = 0; l < s.length; l++) {
                          var f = s[l];
                          if ("object" === i(f) && null !== f)
                            null === o && (o = new Set()), o.add(f);
                          else if (!t.has(f)) {
                            if (
                              r ||
                              !(function (e, t, r) {
                                var n = H(r);
                                return null != n ? n : t.has(n) && !e.has(n);
                              })(e, t, f)
                            )
                              return !1;
                            null === o && (o = new Set()), o.add(f);
                          }
                        }
                        if (null !== o) {
                          for (var u = a(t), c = 0; c < u.length; c++) {
                            var h = u[c];
                            if ("object" === i(h) && null !== h) {
                              if (!j(o, h, r, n)) return !1;
                            } else if (!r && !e.has(h) && !j(o, h, r, n))
                              return !1;
                          }
                          return 0 === o.size;
                        }
                        return !0;
                      })(e, t, r, l)
                    )
                      return !1;
                  } else if (3 === f) {
                    if (
                      !(function (e, t, r, o) {
                        for (var a = null, l = s(e), f = 0; f < l.length; f++) {
                          var u = n(l[f], 2),
                            c = u[0],
                            h = u[1];
                          if ("object" === i(c) && null !== c)
                            null === a && (a = new Set()), a.add(c);
                          else {
                            var d = t.get(c);
                            if ((void 0 === d && !t.has(c)) || !U(h, d, r, o)) {
                              if (
                                r ||
                                !(function (e, t, r, n, i) {
                                  var o = H(r);
                                  if (null != o) return o;
                                  var a = t.get(o);
                                  return (
                                    !!(
                                      (void 0 !== a || t.has(o)) &&
                                      U(n, a, !1, i)
                                    ) &&
                                    !e.has(o) &&
                                    U(n, a, !1, i)
                                  );
                                })(e, t, c, h, o)
                              )
                                return !1;
                              null === a && (a = new Set()), a.add(c);
                            }
                          }
                        }
                        if (null !== a) {
                          for (var p = s(t), y = 0; y < p.length; y++) {
                            var g = n(p[y], 2),
                              c = g[0],
                              b = g[1];
                            if ("object" === i(c) && null !== c) {
                              if (!D(a, e, c, b, r, o)) return !1;
                            } else if (
                              !r &&
                              (!e.has(c) || !U(e.get(c), b, !1, o)) &&
                              !D(a, e, c, b, !1, o)
                            )
                              return !1;
                          }
                          return 0 === a.size;
                        }
                        return !0;
                      })(e, t, r, l)
                    )
                      return !1;
                  } else if (1 === f)
                    for (; u < e.length; u++)
                      if (h(e, u)) {
                        if (!h(t, u) || !U(e[u], t[u], r, l)) return !1;
                      } else {
                        if (h(t, u)) return !1;
                        for (var c = Object.keys(e); u < c.length; u++) {
                          var d = c[u];
                          if (!h(t, d) || !U(e[d], t[d], r, l)) return !1;
                        }
                        if (c.length !== Object.keys(t).length) return !1;
                        return !0;
                      }
                  for (u = 0; u < o.length; u++) {
                    var p = o[u];
                    if (!U(e[p], t[p], r, l)) return !1;
                  }
                  return !0;
                })(e, t, r, u, o, l);
                return o.val1.delete(e), o.val2.delete(t), E;
              }
              function j(e, t, r, n) {
                for (var i = a(e), o = 0; o < i.length; o++) {
                  var s = i[o];
                  if (U(t, s, r, n)) return e.delete(s), !0;
                }
                return !1;
              }
              function H(e) {
                switch (i(e)) {
                  case "undefined":
                    return null;
                  case "object":
                    return;
                  case "symbol":
                    return !1;
                  case "string":
                    e *= 1;
                  case "number":
                    if (u(e)) return !1;
                }
                return !0;
              }
              function D(e, t, r, n, i, o) {
                for (var s = a(e), l = 0; l < s.length; l++) {
                  var f = s[l];
                  if (U(r, f, i, o) && U(n, t.get(f), i, o))
                    return e.delete(f), !0;
                }
                return !1;
              }
              e.exports = {
                isDeepEqual: function (e, t) {
                  return U(e, t, !1);
                },
                isDeepStrictEqual: function (e, t) {
                  return U(e, t, !0);
                },
              };
            },
            256: function (e, t, r) {
              "use strict";
              var n = r(192),
                i = r(139),
                o = i(n("String.prototype.indexOf"));
              e.exports = function (e, t) {
                var r = n(e, !!t);
                return "function" == typeof r && o(e, ".prototype.") > -1
                  ? i(r)
                  : r;
              };
            },
            139: function (e, t, r) {
              "use strict";
              var n = r(212),
                i = r(192),
                o = i("%Function.prototype.apply%"),
                a = i("%Function.prototype.call%"),
                s = i("%Reflect.apply%", !0) || n.call(a, o),
                l = i("%Object.getOwnPropertyDescriptor%", !0),
                f = i("%Object.defineProperty%", !0),
                u = i("%Math.max%");
              if (f)
                try {
                  f({}, "a", { value: 1 });
                } catch (e) {
                  f = null;
                }
              e.exports = function (e) {
                var t = s(n, a, arguments);
                return (
                  l &&
                    f &&
                    l(t, "length").configurable &&
                    f(t, "length", {
                      value: 1 + u(0, e.length - (arguments.length - 1)),
                    }),
                  t
                );
              };
              var c = function () {
                return s(n, o, arguments);
              };
              f ? f(e.exports, "apply", { value: c }) : (e.exports.apply = c);
            },
            69: function (e, t, r) {
              "use strict";
              var n = r(935),
                i =
                  "function" == typeof Symbol &&
                  "symbol" == typeof Symbol("foo"),
                o = Object.prototype.toString,
                a = Array.prototype.concat,
                s = Object.defineProperty,
                l =
                  s &&
                  (function () {
                    var e = {};
                    try {
                      for (var t in (s(e, "x", { enumerable: !1, value: e }),
                      e))
                        return !1;
                      return e.x === e;
                    } catch (e) {
                      return !1;
                    }
                  })(),
                f = function (e, t, r, n) {
                  (!(t in e) ||
                    ("function" == typeof n &&
                      "[object Function]" === o.call(n) &&
                      n())) &&
                    (l
                      ? s(e, t, {
                          configurable: !0,
                          enumerable: !1,
                          value: r,
                          writable: !0,
                        })
                      : (e[t] = r));
                },
                u = function (e, t) {
                  var r = arguments.length > 2 ? arguments[2] : {},
                    o = n(t);
                  i && (o = a.call(o, Object.getOwnPropertySymbols(t)));
                  for (var s = 0; s < o.length; s += 1)
                    f(e, o[s], t[o[s]], r[o[s]]);
                };
              (u.supportsDescriptors = !!l), (e.exports = u);
            },
            181: function (e) {
              "use strict";
              e.exports = EvalError;
            },
            545: function (e) {
              "use strict";
              e.exports = Error;
            },
            22: function (e) {
              "use strict";
              e.exports = RangeError;
            },
            803: function (e) {
              "use strict";
              e.exports = ReferenceError;
            },
            182: function (e) {
              "use strict";
              e.exports = SyntaxError;
            },
            202: function (e) {
              "use strict";
              e.exports = TypeError;
            },
            284: function (e) {
              "use strict";
              e.exports = URIError;
            },
            604: function (e) {
              "use strict";
              function t(e, t) {
                if (null == e)
                  throw TypeError("Cannot convert first argument to object");
                for (var r = Object(e), n = 1; n < arguments.length; n++) {
                  var i = arguments[n];
                  if (null != i)
                    for (
                      var o = Object.keys(Object(i)), a = 0, s = o.length;
                      a < s;
                      a++
                    ) {
                      var l = o[a],
                        f = Object.getOwnPropertyDescriptor(i, l);
                      void 0 !== f && f.enumerable && (r[l] = i[l]);
                    }
                }
                return r;
              }
              e.exports = {
                assign: t,
                polyfill: function () {
                  Object.assign ||
                    Object.defineProperty(Object, "assign", {
                      enumerable: !1,
                      configurable: !0,
                      writable: !0,
                      value: t,
                    });
                },
              };
            },
            144: function (e) {
              var t = Object.prototype.hasOwnProperty,
                r = Object.prototype.toString;
              e.exports = function (e, n, i) {
                if ("[object Function]" !== r.call(n))
                  throw TypeError("iterator must be a function");
                var o = e.length;
                if (o === +o) for (var a = 0; a < o; a++) n.call(i, e[a], a, e);
                else for (var s in e) t.call(e, s) && n.call(i, e[s], s, e);
              };
            },
            136: function (e) {
              "use strict";
              var t = Object.prototype.toString,
                r = Math.max,
                n = function (e, t) {
                  for (var r = [], n = 0; n < e.length; n += 1) r[n] = e[n];
                  for (var i = 0; i < t.length; i += 1) r[i + e.length] = t[i];
                  return r;
                },
                i = function (e, t) {
                  for (
                    var r = [], n = t || 0, i = 0;
                    n < e.length;
                    n += 1, i += 1
                  )
                    r[i] = e[n];
                  return r;
                },
                o = function (e, t) {
                  for (var r = "", n = 0; n < e.length; n += 1)
                    (r += e[n]), n + 1 < e.length && (r += t);
                  return r;
                };
              e.exports = function (e) {
                var a,
                  s = this;
                if (
                  "function" != typeof s ||
                  "[object Function]" !== t.apply(s)
                )
                  throw TypeError(
                    "Function.prototype.bind called on incompatible " + s
                  );
                for (
                  var l = i(arguments, 1),
                    f = r(0, s.length - l.length),
                    u = [],
                    c = 0;
                  c < f;
                  c++
                )
                  u[c] = "$" + c;
                if (
                  ((a = Function(
                    "binder",
                    "return function (" +
                      o(u, ",") +
                      "){ return binder.apply(this,arguments); }"
                  )(function () {
                    if (this instanceof a) {
                      var t = s.apply(this, n(l, arguments));
                      return Object(t) === t ? t : this;
                    }
                    return s.apply(e, n(l, arguments));
                  })),
                  s.prototype)
                ) {
                  var h = function () {};
                  (h.prototype = s.prototype),
                    (a.prototype = new h()),
                    (h.prototype = null);
                }
                return a;
              };
            },
            212: function (e, t, r) {
              "use strict";
              var n = r(136);
              e.exports = Function.prototype.bind || n;
            },
            192: function (e, t, r) {
              "use strict";
              var n,
                i = r(545),
                o = r(181),
                a = r(22),
                s = r(803),
                l = r(182),
                f = r(202),
                u = r(284),
                c = Function,
                h = function (e) {
                  try {
                    return c('"use strict"; return (' + e + ").constructor;")();
                  } catch (e) {}
                },
                d = Object.getOwnPropertyDescriptor;
              if (d)
                try {
                  d({}, "");
                } catch (e) {
                  d = null;
                }
              var p = function () {
                  throw new f();
                },
                y = d
                  ? (function () {
                      try {
                        return arguments.callee, p;
                      } catch (e) {
                        try {
                          return d(arguments, "callee").get;
                        } catch (e) {
                          return p;
                        }
                      }
                    })()
                  : p,
                g = r(115)(),
                b = r(14)(),
                m =
                  Object.getPrototypeOf ||
                  (b
                    ? function (e) {
                        return e.__proto__;
                      }
                    : null),
                w = {},
                v = "undefined" != typeof Uint8Array && m ? m(Uint8Array) : n,
                x = {
                  __proto__: null,
                  "%AggregateError%":
                    "undefined" == typeof AggregateError ? n : AggregateError,
                  "%Array%": Array,
                  "%ArrayBuffer%":
                    "undefined" == typeof ArrayBuffer ? n : ArrayBuffer,
                  "%ArrayIteratorPrototype%":
                    g && m ? m([][Symbol.iterator]()) : n,
                  "%AsyncFromSyncIteratorPrototype%": n,
                  "%AsyncFunction%": w,
                  "%AsyncGenerator%": w,
                  "%AsyncGeneratorFunction%": w,
                  "%AsyncIteratorPrototype%": w,
                  "%Atomics%": "undefined" == typeof Atomics ? n : Atomics,
                  "%BigInt%": "undefined" == typeof BigInt ? n : BigInt,
                  "%BigInt64Array%":
                    "undefined" == typeof BigInt64Array ? n : BigInt64Array,
                  "%BigUint64Array%":
                    "undefined" == typeof BigUint64Array ? n : BigUint64Array,
                  "%Boolean%": Boolean,
                  "%DataView%": "undefined" == typeof DataView ? n : DataView,
                  "%Date%": Date,
                  "%decodeURI%": decodeURI,
                  "%decodeURIComponent%": decodeURIComponent,
                  "%encodeURI%": encodeURI,
                  "%encodeURIComponent%": encodeURIComponent,
                  "%Error%": i,
                  "%eval%": eval,
                  "%EvalError%": o,
                  "%Float32Array%":
                    "undefined" == typeof Float32Array ? n : Float32Array,
                  "%Float64Array%":
                    "undefined" == typeof Float64Array ? n : Float64Array,
                  "%FinalizationRegistry%":
                    "undefined" == typeof FinalizationRegistry
                      ? n
                      : FinalizationRegistry,
                  "%Function%": c,
                  "%GeneratorFunction%": w,
                  "%Int8Array%":
                    "undefined" == typeof Int8Array ? n : Int8Array,
                  "%Int16Array%":
                    "undefined" == typeof Int16Array ? n : Int16Array,
                  "%Int32Array%":
                    "undefined" == typeof Int32Array ? n : Int32Array,
                  "%isFinite%": isFinite,
                  "%isNaN%": isNaN,
                  "%IteratorPrototype%":
                    g && m ? m(m([][Symbol.iterator]())) : n,
                  "%JSON%": "object" == typeof JSON ? JSON : n,
                  "%Map%": "undefined" == typeof Map ? n : Map,
                  "%MapIteratorPrototype%":
                    "undefined" != typeof Map && g && m
                      ? m(new Map()[Symbol.iterator]())
                      : n,
                  "%Math%": Math,
                  "%Number%": Number,
                  "%Object%": Object,
                  "%parseFloat%": parseFloat,
                  "%parseInt%": parseInt,
                  "%Promise%": "undefined" == typeof Promise ? n : Promise,
                  "%Proxy%": "undefined" == typeof Proxy ? n : Proxy,
                  "%RangeError%": a,
                  "%ReferenceError%": s,
                  "%Reflect%": "undefined" == typeof Reflect ? n : Reflect,
                  "%RegExp%": RegExp,
                  "%Set%": "undefined" == typeof Set ? n : Set,
                  "%SetIteratorPrototype%":
                    "undefined" != typeof Set && g && m
                      ? m(new Set()[Symbol.iterator]())
                      : n,
                  "%SharedArrayBuffer%":
                    "undefined" == typeof SharedArrayBuffer
                      ? n
                      : SharedArrayBuffer,
                  "%String%": String,
                  "%StringIteratorPrototype%":
                    g && m ? m(""[Symbol.iterator]()) : n,
                  "%Symbol%": g ? Symbol : n,
                  "%SyntaxError%": l,
                  "%ThrowTypeError%": y,
                  "%TypedArray%": v,
                  "%TypeError%": f,
                  "%Uint8Array%":
                    "undefined" == typeof Uint8Array ? n : Uint8Array,
                  "%Uint8ClampedArray%":
                    "undefined" == typeof Uint8ClampedArray
                      ? n
                      : Uint8ClampedArray,
                  "%Uint16Array%":
                    "undefined" == typeof Uint16Array ? n : Uint16Array,
                  "%Uint32Array%":
                    "undefined" == typeof Uint32Array ? n : Uint32Array,
                  "%URIError%": u,
                  "%WeakMap%": "undefined" == typeof WeakMap ? n : WeakMap,
                  "%WeakRef%": "undefined" == typeof WeakRef ? n : WeakRef,
                  "%WeakSet%": "undefined" == typeof WeakSet ? n : WeakSet,
                };
              if (m)
                try {
                  null.error;
                } catch (e) {
                  var E = m(m(e));
                  x["%Error.prototype%"] = E;
                }
              var _ = function e(t) {
                  var r;
                  if ("%AsyncFunction%" === t) r = h("async function () {}");
                  else if ("%GeneratorFunction%" === t)
                    r = h("function* () {}");
                  else if ("%AsyncGeneratorFunction%" === t)
                    r = h("async function* () {}");
                  else if ("%AsyncGenerator%" === t) {
                    var n = e("%AsyncGeneratorFunction%");
                    n && (r = n.prototype);
                  } else if ("%AsyncIteratorPrototype%" === t) {
                    var i = e("%AsyncGenerator%");
                    i && m && (r = m(i.prototype));
                  }
                  return (x[t] = r), r;
                },
                S = {
                  __proto__: null,
                  "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
                  "%ArrayPrototype%": ["Array", "prototype"],
                  "%ArrayProto_entries%": ["Array", "prototype", "entries"],
                  "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
                  "%ArrayProto_keys%": ["Array", "prototype", "keys"],
                  "%ArrayProto_values%": ["Array", "prototype", "values"],
                  "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
                  "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
                  "%AsyncGeneratorPrototype%": [
                    "AsyncGeneratorFunction",
                    "prototype",
                    "prototype",
                  ],
                  "%BooleanPrototype%": ["Boolean", "prototype"],
                  "%DataViewPrototype%": ["DataView", "prototype"],
                  "%DatePrototype%": ["Date", "prototype"],
                  "%ErrorPrototype%": ["Error", "prototype"],
                  "%EvalErrorPrototype%": ["EvalError", "prototype"],
                  "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
                  "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
                  "%FunctionPrototype%": ["Function", "prototype"],
                  "%Generator%": ["GeneratorFunction", "prototype"],
                  "%GeneratorPrototype%": [
                    "GeneratorFunction",
                    "prototype",
                    "prototype",
                  ],
                  "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
                  "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
                  "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
                  "%JSONParse%": ["JSON", "parse"],
                  "%JSONStringify%": ["JSON", "stringify"],
                  "%MapPrototype%": ["Map", "prototype"],
                  "%NumberPrototype%": ["Number", "prototype"],
                  "%ObjectPrototype%": ["Object", "prototype"],
                  "%ObjProto_toString%": ["Object", "prototype", "toString"],
                  "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
                  "%PromisePrototype%": ["Promise", "prototype"],
                  "%PromiseProto_then%": ["Promise", "prototype", "then"],
                  "%Promise_all%": ["Promise", "all"],
                  "%Promise_reject%": ["Promise", "reject"],
                  "%Promise_resolve%": ["Promise", "resolve"],
                  "%RangeErrorPrototype%": ["RangeError", "prototype"],
                  "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
                  "%RegExpPrototype%": ["RegExp", "prototype"],
                  "%SetPrototype%": ["Set", "prototype"],
                  "%SharedArrayBufferPrototype%": [
                    "SharedArrayBuffer",
                    "prototype",
                  ],
                  "%StringPrototype%": ["String", "prototype"],
                  "%SymbolPrototype%": ["Symbol", "prototype"],
                  "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
                  "%TypedArrayPrototype%": ["TypedArray", "prototype"],
                  "%TypeErrorPrototype%": ["TypeError", "prototype"],
                  "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
                  "%Uint8ClampedArrayPrototype%": [
                    "Uint8ClampedArray",
                    "prototype",
                  ],
                  "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
                  "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
                  "%URIErrorPrototype%": ["URIError", "prototype"],
                  "%WeakMapPrototype%": ["WeakMap", "prototype"],
                  "%WeakSetPrototype%": ["WeakSet", "prototype"],
                },
                A = r(212),
                B = r(270),
                k = A.call(Function.call, Array.prototype.concat),
                O = A.call(Function.apply, Array.prototype.splice),
                T = A.call(Function.call, String.prototype.replace),
                I = A.call(Function.call, String.prototype.slice),
                R = A.call(Function.call, RegExp.prototype.exec),
                M =
                  /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
                P = /\\(\\)?/g,
                C = function (e) {
                  var t = I(e, 0, 1),
                    r = I(e, -1);
                  if ("%" === t && "%" !== r)
                    throw new l(
                      "invalid intrinsic syntax, expected closing `%`"
                    );
                  if ("%" === r && "%" !== t)
                    throw new l(
                      "invalid intrinsic syntax, expected opening `%`"
                    );
                  var n = [];
                  return (
                    T(e, M, function (e, t, r, i) {
                      n[n.length] = r ? T(i, P, "$1") : t || e;
                    }),
                    n
                  );
                },
                U = function (e, t) {
                  var r,
                    n = e;
                  if ((B(S, n) && (n = "%" + (r = S[n])[0] + "%"), B(x, n))) {
                    var i = x[n];
                    if ((i === w && (i = _(n)), void 0 === i && !t))
                      throw new f(
                        "intrinsic " +
                          e +
                          " exists, but is not available. Please file an issue!"
                      );
                    return { alias: r, name: n, value: i };
                  }
                  throw new l("intrinsic " + e + " does not exist!");
                };
              e.exports = function (e, t) {
                if ("string" != typeof e || 0 === e.length)
                  throw new f("intrinsic name must be a non-empty string");
                if (arguments.length > 1 && "boolean" != typeof t)
                  throw new f('"allowMissing" argument must be a boolean');
                if (null === R(/^%?[^%]*%?$/, e))
                  throw new l(
                    "`%` may not be present anywhere but at the beginning and end of the intrinsic name"
                  );
                var r = C(e),
                  n = r.length > 0 ? r[0] : "",
                  i = U("%" + n + "%", t),
                  o = i.name,
                  a = i.value,
                  s = !1,
                  u = i.alias;
                u && ((n = u[0]), O(r, k([0, 1], u)));
                for (var c = 1, h = !0; c < r.length; c += 1) {
                  var p = r[c],
                    y = I(p, 0, 1),
                    g = I(p, -1);
                  if (
                    ('"' === y ||
                      "'" === y ||
                      "`" === y ||
                      '"' === g ||
                      "'" === g ||
                      "`" === g) &&
                    y !== g
                  )
                    throw new l(
                      "property names with quotes must have matching quotes"
                    );
                  if (
                    (("constructor" !== p && h) || (s = !0),
                    (n += "." + p),
                    B(x, (o = "%" + n + "%")))
                  )
                    a = x[o];
                  else if (null != a) {
                    if (!(p in a)) {
                      if (!t)
                        throw new f(
                          "base intrinsic for " +
                            e +
                            " exists, but the property is not available."
                        );
                      return;
                    }
                    if (d && c + 1 >= r.length) {
                      var b = d(a, p);
                      a =
                        (h = !!b) && "get" in b && !("originalValue" in b.get)
                          ? b.get
                          : a[p];
                    } else (h = B(a, p)), (a = a[p]);
                    h && !s && (x[o] = a);
                  }
                }
                return a;
              };
            },
            14: function (e) {
              "use strict";
              var t = { __proto__: null, foo: {} },
                r = Object;
              e.exports = function () {
                return { __proto__: t }.foo === t.foo && !(t instanceof r);
              };
            },
            942: function (e, t, r) {
              "use strict";
              var n = "undefined" != typeof Symbol && Symbol,
                i = r(773);
              e.exports = function () {
                return (
                  "function" == typeof n &&
                  "function" == typeof Symbol &&
                  "symbol" == typeof n("foo") &&
                  "symbol" == typeof Symbol("bar") &&
                  i()
                );
              };
            },
            773: function (e) {
              "use strict";
              e.exports = function () {
                if (
                  "function" != typeof Symbol ||
                  "function" != typeof Object.getOwnPropertySymbols
                )
                  return !1;
                if ("symbol" == typeof Symbol.iterator) return !0;
                var e = {},
                  t = Symbol("test"),
                  r = Object(t);
                if (
                  "string" == typeof t ||
                  "[object Symbol]" !== Object.prototype.toString.call(t) ||
                  "[object Symbol]" !== Object.prototype.toString.call(r)
                )
                  return !1;
                for (t in ((e[t] = 42), e)) return !1;
                if (
                  ("function" == typeof Object.keys &&
                    0 !== Object.keys(e).length) ||
                  ("function" == typeof Object.getOwnPropertyNames &&
                    0 !== Object.getOwnPropertyNames(e).length)
                )
                  return !1;
                var n = Object.getOwnPropertySymbols(e);
                if (
                  1 !== n.length ||
                  n[0] !== t ||
                  !Object.prototype.propertyIsEnumerable.call(e, t)
                )
                  return !1;
                if ("function" == typeof Object.getOwnPropertyDescriptor) {
                  var i = Object.getOwnPropertyDescriptor(e, t);
                  if (42 !== i.value || !0 !== i.enumerable) return !1;
                }
                return !0;
              };
            },
            115: function (e, t, r) {
              "use strict";
              var n = "undefined" != typeof Symbol && Symbol,
                i = r(832);
              e.exports = function () {
                return (
                  "function" == typeof n &&
                  "function" == typeof Symbol &&
                  "symbol" == typeof n("foo") &&
                  "symbol" == typeof Symbol("bar") &&
                  i()
                );
              };
            },
            832: function (e) {
              "use strict";
              e.exports = function () {
                if (
                  "function" != typeof Symbol ||
                  "function" != typeof Object.getOwnPropertySymbols
                )
                  return !1;
                if ("symbol" == typeof Symbol.iterator) return !0;
                var e = {},
                  t = Symbol("test"),
                  r = Object(t);
                if (
                  "string" == typeof t ||
                  "[object Symbol]" !== Object.prototype.toString.call(t) ||
                  "[object Symbol]" !== Object.prototype.toString.call(r)
                )
                  return !1;
                for (t in ((e[t] = 42), e)) return !1;
                if (
                  ("function" == typeof Object.keys &&
                    0 !== Object.keys(e).length) ||
                  ("function" == typeof Object.getOwnPropertyNames &&
                    0 !== Object.getOwnPropertyNames(e).length)
                )
                  return !1;
                var n = Object.getOwnPropertySymbols(e);
                if (
                  1 !== n.length ||
                  n[0] !== t ||
                  !Object.prototype.propertyIsEnumerable.call(e, t)
                )
                  return !1;
                if ("function" == typeof Object.getOwnPropertyDescriptor) {
                  var i = Object.getOwnPropertyDescriptor(e, t);
                  if (42 !== i.value || !0 !== i.enumerable) return !1;
                }
                return !0;
              };
            },
            270: function (e, t, r) {
              "use strict";
              var n = Function.prototype.call,
                i = Object.prototype.hasOwnProperty;
              e.exports = r(212).call(n, i);
            },
            782: function (e) {
              "function" == typeof Object.create
                ? (e.exports = function (e, t) {
                    t &&
                      ((e.super_ = t),
                      (e.prototype = Object.create(t.prototype, {
                        constructor: {
                          value: e,
                          enumerable: !1,
                          writable: !0,
                          configurable: !0,
                        },
                      })));
                  })
                : (e.exports = function (e, t) {
                    if (t) {
                      e.super_ = t;
                      var r = function () {};
                      (r.prototype = t.prototype),
                        (e.prototype = new r()),
                        (e.prototype.constructor = e);
                    }
                  });
            },
            157: function (e) {
              "use strict";
              var t =
                  "function" == typeof Symbol &&
                  "symbol" == typeof Symbol.toStringTag,
                r = Object.prototype.toString,
                n = function (e) {
                  return (
                    (!t ||
                      !e ||
                      "object" != typeof e ||
                      !(Symbol.toStringTag in e)) &&
                    "[object Arguments]" === r.call(e)
                  );
                },
                i = function (e) {
                  return (
                    !!n(e) ||
                    (null !== e &&
                      "object" == typeof e &&
                      "number" == typeof e.length &&
                      e.length >= 0 &&
                      "[object Array]" !== r.call(e) &&
                      "[object Function]" === r.call(e.callee))
                  );
                },
                o = (function () {
                  return n(arguments);
                })();
              (n.isLegacyArguments = i), (e.exports = o ? n : i);
            },
            391: function (e) {
              "use strict";
              var t = Object.prototype.toString,
                r = Function.prototype.toString,
                n = /^\s*(?:function)?\*/,
                i =
                  "function" == typeof Symbol &&
                  "symbol" == typeof Symbol.toStringTag,
                o = Object.getPrototypeOf,
                a = (function () {
                  if (!i) return !1;
                  try {
                    return Function("return function*() {}")();
                  } catch (e) {}
                })(),
                s = a ? o(a) : {};
              e.exports = function (e) {
                return (
                  "function" == typeof e &&
                  (!!n.test(r.call(e)) ||
                    (i
                      ? o(e) === s
                      : "[object GeneratorFunction]" === t.call(e)))
                );
              };
            },
            460: function (e) {
              "use strict";
              e.exports = function (e) {
                return e != e;
              };
            },
            718: function (e, t, r) {
              "use strict";
              var n = r(139),
                i = r(69),
                o = r(460),
                a = r(625),
                s = r(171),
                l = n(a(), Number);
              i(l, { getPolyfill: a, implementation: o, shim: s }),
                (e.exports = l);
            },
            625: function (e, t, r) {
              "use strict";
              var n = r(460);
              e.exports = function () {
                return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a")
                  ? Number.isNaN
                  : n;
              };
            },
            171: function (e, t, r) {
              "use strict";
              var n = r(69),
                i = r(625);
              e.exports = function () {
                var e = i();
                return (
                  n(
                    Number,
                    { isNaN: e },
                    {
                      isNaN: function () {
                        return Number.isNaN !== e;
                      },
                    }
                  ),
                  e
                );
              };
            },
            994: function (e, t, n) {
              "use strict";
              var i = n(144),
                o = n(349),
                a = n(256),
                s = a("Object.prototype.toString"),
                l = n(942)() && "symbol" == typeof Symbol.toStringTag,
                f = o(),
                u =
                  a("Array.prototype.indexOf", !0) ||
                  function (e, t) {
                    for (var r = 0; r < e.length; r += 1)
                      if (e[r] === t) return r;
                    return -1;
                  },
                c = a("String.prototype.slice"),
                h = {},
                d = n(24),
                p = Object.getPrototypeOf;
              l &&
                d &&
                p &&
                i(f, function (e) {
                  var t = new r.g[e]();
                  if (!(Symbol.toStringTag in t))
                    throw EvalError(
                      "this engine has support for Symbol.toStringTag, but " +
                        e +
                        " does not have the property! Please report this."
                    );
                  var n = p(t),
                    i = d(n, Symbol.toStringTag);
                  i || (i = d(p(n), Symbol.toStringTag)), (h[e] = i.get);
                });
              var y = function (e) {
                var t = !1;
                return (
                  i(h, function (r, n) {
                    if (!t)
                      try {
                        t = r.call(e) === n;
                      } catch (e) {}
                  }),
                  t
                );
              };
              e.exports = function (e) {
                return (
                  !!e &&
                  "object" == typeof e &&
                  (l ? !!d && y(e) : u(f, c(s(e), 8, -1)) > -1)
                );
              };
            },
            208: function (e) {
              "use strict";
              var t = function (e) {
                return e != e;
              };
              e.exports = function (e, r) {
                return 0 === e && 0 === r
                  ? 1 / e == 1 / r
                  : !!(e === r || (t(e) && t(r)));
              };
            },
            579: function (e, t, r) {
              "use strict";
              var n;
              if (!Object.keys) {
                var i = Object.prototype.hasOwnProperty,
                  o = Object.prototype.toString,
                  a = r(412),
                  s = Object.prototype.propertyIsEnumerable,
                  l = !s.call({ toString: null }, "toString"),
                  f = s.call(function () {}, "prototype"),
                  u = [
                    "toString",
                    "toLocaleString",
                    "valueOf",
                    "hasOwnProperty",
                    "isPrototypeOf",
                    "propertyIsEnumerable",
                    "constructor",
                  ],
                  c = function (e) {
                    var t = e.constructor;
                    return t && t.prototype === e;
                  },
                  h = {
                    $applicationCache: !0,
                    $console: !0,
                    $external: !0,
                    $frame: !0,
                    $frameElement: !0,
                    $frames: !0,
                    $innerHeight: !0,
                    $innerWidth: !0,
                    $onmozfullscreenchange: !0,
                    $onmozfullscreenerror: !0,
                    $outerHeight: !0,
                    $outerWidth: !0,
                    $pageXOffset: !0,
                    $pageYOffset: !0,
                    $parent: !0,
                    $scrollLeft: !0,
                    $scrollTop: !0,
                    $scrollX: !0,
                    $scrollY: !0,
                    $self: !0,
                    $webkitIndexedDB: !0,
                    $webkitStorageInfo: !0,
                    $window: !0,
                  },
                  d = (function () {
                    if ("undefined" == typeof window) return !1;
                    for (var e in window)
                      try {
                        if (
                          !h["$" + e] &&
                          i.call(window, e) &&
                          null !== window[e] &&
                          "object" == typeof window[e]
                        )
                          try {
                            c(window[e]);
                          } catch (e) {
                            return !0;
                          }
                      } catch (e) {
                        return !0;
                      }
                    return !1;
                  })(),
                  p = function (e) {
                    if ("undefined" == typeof window || !d) return c(e);
                    try {
                      return c(e);
                    } catch (e) {
                      return !1;
                    }
                  };
                n = function (e) {
                  var t = null !== e && "object" == typeof e,
                    r = "[object Function]" === o.call(e),
                    n = a(e),
                    s = t && "[object String]" === o.call(e),
                    c = [];
                  if (!t && !r && !n)
                    throw TypeError("Object.keys called on a non-object");
                  var h = f && r;
                  if (s && e.length > 0 && !i.call(e, 0))
                    for (var d = 0; d < e.length; ++d) c.push(String(d));
                  if (n && e.length > 0)
                    for (var y = 0; y < e.length; ++y) c.push(String(y));
                  else
                    for (var g in e)
                      !(h && "prototype" === g) &&
                        i.call(e, g) &&
                        c.push(String(g));
                  if (l)
                    for (var b = p(e), m = 0; m < u.length; ++m)
                      !(b && "constructor" === u[m]) &&
                        i.call(e, u[m]) &&
                        c.push(u[m]);
                  return c;
                };
              }
              e.exports = n;
            },
            935: function (e, t, r) {
              "use strict";
              var n = Array.prototype.slice,
                i = r(412),
                o = Object.keys,
                a = o
                  ? function (e) {
                      return o(e);
                    }
                  : r(579),
                s = Object.keys;
              (a.shim = function () {
                return (
                  Object.keys
                    ? !(function () {
                        var e = Object.keys(arguments);
                        return e && e.length === arguments.length;
                      })(1, 2) &&
                      (Object.keys = function (e) {
                        return i(e) ? s(n.call(e)) : s(e);
                      })
                    : (Object.keys = a),
                  Object.keys || a
                );
              }),
                (e.exports = a);
            },
            412: function (e) {
              "use strict";
              var t = Object.prototype.toString;
              e.exports = function (e) {
                var r = t.call(e),
                  n = "[object Arguments]" === r;
                return (
                  n ||
                    (n =
                      "[object Array]" !== r &&
                      null !== e &&
                      "object" == typeof e &&
                      "number" == typeof e.length &&
                      e.length >= 0 &&
                      "[object Function]" === t.call(e.callee)),
                  n
                );
              };
            },
            369: function (e) {
              e.exports = function (e) {
                return e instanceof i;
              };
            },
            584: function (e, t, r) {
              "use strict";
              var n = r(157),
                i = r(391),
                o = r(490),
                a = r(994);
              function s(e) {
                return e.call.bind(e);
              }
              var l = "undefined" != typeof BigInt,
                f = "undefined" != typeof Symbol,
                u = s(Object.prototype.toString),
                c = s(Number.prototype.valueOf),
                h = s(String.prototype.valueOf),
                d = s(Boolean.prototype.valueOf);
              if (l) var p = s(BigInt.prototype.valueOf);
              if (f) var y = s(Symbol.prototype.valueOf);
              function g(e, t) {
                if ("object" != typeof e) return !1;
                try {
                  return t(e), !0;
                } catch (e) {
                  return !1;
                }
              }
              function b(e) {
                return "[object Map]" === u(e);
              }
              function m(e) {
                return "[object Set]" === u(e);
              }
              function w(e) {
                return "[object WeakMap]" === u(e);
              }
              function v(e) {
                return "[object WeakSet]" === u(e);
              }
              function x(e) {
                return "[object ArrayBuffer]" === u(e);
              }
              function E(e) {
                return (
                  "undefined" != typeof ArrayBuffer &&
                  (x.working ? x(e) : e instanceof ArrayBuffer)
                );
              }
              function _(e) {
                return "[object DataView]" === u(e);
              }
              function S(e) {
                return (
                  "undefined" != typeof DataView &&
                  (_.working ? _(e) : e instanceof DataView)
                );
              }
              (t.isArgumentsObject = n),
                (t.isGeneratorFunction = i),
                (t.isTypedArray = a),
                (t.isPromise = function (e) {
                  return (
                    ("undefined" != typeof Promise && e instanceof Promise) ||
                    (null !== e &&
                      "object" == typeof e &&
                      "function" == typeof e.then &&
                      "function" == typeof e.catch)
                  );
                }),
                (t.isArrayBufferView = function (e) {
                  return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
                    ? ArrayBuffer.isView(e)
                    : a(e) || S(e);
                }),
                (t.isUint8Array = function (e) {
                  return "Uint8Array" === o(e);
                }),
                (t.isUint8ClampedArray = function (e) {
                  return "Uint8ClampedArray" === o(e);
                }),
                (t.isUint16Array = function (e) {
                  return "Uint16Array" === o(e);
                }),
                (t.isUint32Array = function (e) {
                  return "Uint32Array" === o(e);
                }),
                (t.isInt8Array = function (e) {
                  return "Int8Array" === o(e);
                }),
                (t.isInt16Array = function (e) {
                  return "Int16Array" === o(e);
                }),
                (t.isInt32Array = function (e) {
                  return "Int32Array" === o(e);
                }),
                (t.isFloat32Array = function (e) {
                  return "Float32Array" === o(e);
                }),
                (t.isFloat64Array = function (e) {
                  return "Float64Array" === o(e);
                }),
                (t.isBigInt64Array = function (e) {
                  return "BigInt64Array" === o(e);
                }),
                (t.isBigUint64Array = function (e) {
                  return "BigUint64Array" === o(e);
                }),
                (b.working = "undefined" != typeof Map && b(new Map())),
                (t.isMap = function (e) {
                  return (
                    "undefined" != typeof Map &&
                    (b.working ? b(e) : e instanceof Map)
                  );
                }),
                (m.working = "undefined" != typeof Set && m(new Set())),
                (t.isSet = function (e) {
                  return (
                    "undefined" != typeof Set &&
                    (m.working ? m(e) : e instanceof Set)
                  );
                }),
                (w.working = "undefined" != typeof WeakMap && w(new WeakMap())),
                (t.isWeakMap = function (e) {
                  return (
                    "undefined" != typeof WeakMap &&
                    (w.working ? w(e) : e instanceof WeakMap)
                  );
                }),
                (v.working = "undefined" != typeof WeakSet && v(new WeakSet())),
                (t.isWeakSet = function (e) {
                  return v(e);
                }),
                (x.working =
                  "undefined" != typeof ArrayBuffer && x(new ArrayBuffer())),
                (t.isArrayBuffer = E),
                (_.working =
                  "undefined" != typeof ArrayBuffer &&
                  "undefined" != typeof DataView &&
                  _(new DataView(new ArrayBuffer(1), 0, 1))),
                (t.isDataView = S);
              var A =
                "undefined" != typeof SharedArrayBuffer
                  ? SharedArrayBuffer
                  : void 0;
              function B(e) {
                return "[object SharedArrayBuffer]" === u(e);
              }
              function k(e) {
                return (
                  void 0 !== A &&
                  (void 0 === B.working && (B.working = B(new A())),
                  B.working ? B(e) : e instanceof A)
                );
              }
              function O(e) {
                return g(e, c);
              }
              function T(e) {
                return g(e, h);
              }
              function I(e) {
                return g(e, d);
              }
              function R(e) {
                return l && g(e, p);
              }
              function M(e) {
                return f && g(e, y);
              }
              (t.isSharedArrayBuffer = k),
                (t.isAsyncFunction = function (e) {
                  return "[object AsyncFunction]" === u(e);
                }),
                (t.isMapIterator = function (e) {
                  return "[object Map Iterator]" === u(e);
                }),
                (t.isSetIterator = function (e) {
                  return "[object Set Iterator]" === u(e);
                }),
                (t.isGeneratorObject = function (e) {
                  return "[object Generator]" === u(e);
                }),
                (t.isWebAssemblyCompiledModule = function (e) {
                  return "[object WebAssembly.Module]" === u(e);
                }),
                (t.isNumberObject = O),
                (t.isStringObject = T),
                (t.isBooleanObject = I),
                (t.isBigIntObject = R),
                (t.isSymbolObject = M),
                (t.isBoxedPrimitive = function (e) {
                  return O(e) || T(e) || I(e) || R(e) || M(e);
                }),
                (t.isAnyArrayBuffer = function (e) {
                  return "undefined" != typeof Uint8Array && (E(e) || k(e));
                }),
                ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(
                  function (e) {
                    Object.defineProperty(t, e, {
                      enumerable: !1,
                      value: function () {
                        throw Error(e + " is not supported in userland");
                      },
                    });
                  }
                );
            },
            177: function (e, t, r) {
              var i =
                  Object.getOwnPropertyDescriptors ||
                  function (e) {
                    for (
                      var t = Object.keys(e), r = {}, n = 0;
                      n < t.length;
                      n++
                    )
                      r[t[n]] = Object.getOwnPropertyDescriptor(e, t[n]);
                    return r;
                  },
                o = /%[sdj%]/g;
              (t.format = function (e) {
                if (!w(e)) {
                  for (var t = [], r = 0; r < arguments.length; r++)
                    t.push(f(arguments[r]));
                  return t.join(" ");
                }
                for (
                  var r = 1,
                    n = arguments,
                    i = n.length,
                    a = String(e).replace(o, function (e) {
                      if ("%%" === e) return "%";
                      if (r >= i) return e;
                      switch (e) {
                        case "%s":
                          return String(n[r++]);
                        case "%d":
                          return Number(n[r++]);
                        case "%j":
                          try {
                            return JSON.stringify(n[r++]);
                          } catch (e) {
                            return "[Circular]";
                          }
                        default:
                          return e;
                      }
                    }),
                    s = n[r];
                  r < i;
                  s = n[++r]
                )
                  b(s) || !E(s) ? (a += " " + s) : (a += " " + f(s));
                return a;
              }),
                (t.deprecate = function (e, r) {
                  if (void 0 !== n && !0 === n.noDeprecation) return e;
                  if (void 0 === n)
                    return function () {
                      return t.deprecate(e, r).apply(this, arguments);
                    };
                  var i = !1;
                  return function () {
                    if (!i) {
                      if (n.throwDeprecation) throw Error(r);
                      n.traceDeprecation ? console.trace(r) : console.error(r),
                        (i = !0);
                    }
                    return e.apply(this, arguments);
                  };
                });
              var a = {},
                s = /^$/;
              if (n.env.NODE_DEBUG) {
                var l = n.env.NODE_DEBUG;
                s = RegExp(
                  "^" +
                    (l = l
                      .replace(/[|\\{}()[\]^$+?.]/g, "\\$&")
                      .replace(/\*/g, ".*")
                      .replace(/,/g, "$|^")
                      .toUpperCase()) +
                    "$",
                  "i"
                );
              }
              function f(e, r) {
                var n = { seen: [], stylize: c };
                return (
                  arguments.length >= 3 && (n.depth = arguments[2]),
                  arguments.length >= 4 && (n.colors = arguments[3]),
                  g(r) ? (n.showHidden = r) : r && t._extend(n, r),
                  v(n.showHidden) && (n.showHidden = !1),
                  v(n.depth) && (n.depth = 2),
                  v(n.colors) && (n.colors = !1),
                  v(n.customInspect) && (n.customInspect = !0),
                  n.colors && (n.stylize = u),
                  h(n, e, n.depth)
                );
              }
              function u(e, t) {
                var r = f.styles[t];
                return r
                  ? "\x1b[" +
                      f.colors[r][0] +
                      "m" +
                      e +
                      "\x1b[" +
                      f.colors[r][1] +
                      "m"
                  : e;
              }
              function c(e, t) {
                return e;
              }
              function h(e, r, n) {
                if (
                  e.customInspect &&
                  r &&
                  A(r.inspect) &&
                  r.inspect !== t.inspect &&
                  !(r.constructor && r.constructor.prototype === r)
                ) {
                  var i,
                    o,
                    a,
                    s,
                    l,
                    f,
                    u = r.inspect(n, e);
                  return w(u) || (u = h(e, u, n)), u;
                }
                var c = (function (e, t) {
                  if (v(t)) return e.stylize("undefined", "undefined");
                  if (w(t)) {
                    var r =
                      "'" +
                      JSON.stringify(t)
                        .replace(/^"|"$/g, "")
                        .replace(/'/g, "\\'")
                        .replace(/\\"/g, '"') +
                      "'";
                    return e.stylize(r, "string");
                  }
                  return m(t)
                    ? e.stylize("" + t, "number")
                    : g(t)
                    ? e.stylize("" + t, "boolean")
                    : b(t)
                    ? e.stylize("null", "null")
                    : void 0;
                })(e, r);
                if (c) return c;
                var E = Object.keys(r),
                  B =
                    ((l = {}),
                    E.forEach(function (e, t) {
                      l[e] = !0;
                    }),
                    l);
                if (
                  (e.showHidden && (E = Object.getOwnPropertyNames(r)),
                  S(r) &&
                    (E.indexOf("message") >= 0 ||
                      E.indexOf("description") >= 0))
                )
                  return d(r);
                if (0 === E.length) {
                  if (A(r)) {
                    var k = r.name ? ": " + r.name : "";
                    return e.stylize("[Function" + k + "]", "special");
                  }
                  if (x(r))
                    return e.stylize(
                      RegExp.prototype.toString.call(r),
                      "regexp"
                    );
                  if (_(r))
                    return e.stylize(Date.prototype.toString.call(r), "date");
                  if (S(r)) return d(r);
                }
                var O = "",
                  I = !1,
                  R = ["{", "}"];
                if (
                  (y(r) && ((I = !0), (R = ["[", "]"])),
                  A(r) &&
                    (O = " [Function" + (r.name ? ": " + r.name : "") + "]"),
                  x(r) && (O = " " + RegExp.prototype.toString.call(r)),
                  _(r) && (O = " " + Date.prototype.toUTCString.call(r)),
                  S(r) && (O = " " + d(r)),
                  0 === E.length && (!I || 0 == r.length))
                )
                  return R[0] + O + R[1];
                if (n < 0)
                  return x(r)
                    ? e.stylize(RegExp.prototype.toString.call(r), "regexp")
                    : e.stylize("[Object]", "special");
                return (
                  e.seen.push(r),
                  (f = I
                    ? (function (e, t, r, n, i) {
                        for (var o = [], a = 0, s = t.length; a < s; ++a)
                          T(t, String(a))
                            ? o.push(p(e, t, r, n, String(a), !0))
                            : o.push("");
                        return (
                          i.forEach(function (i) {
                            i.match(/^\d+$/) || o.push(p(e, t, r, n, i, !0));
                          }),
                          o
                        );
                      })(e, r, n, B, E)
                    : E.map(function (t) {
                        return p(e, r, n, B, t, I);
                      })),
                  e.seen.pop(),
                  (i = f),
                  (o = O),
                  (a = R),
                  (s = 0),
                  i.reduce(function (e, t) {
                    return (
                      s++,
                      t.indexOf("\n") >= 0 && s++,
                      e + t.replace(/\u001b\[\d\d?m/g, "").length + 1
                    );
                  }, 0) > 60
                    ? a[0] +
                      ("" === o ? "" : o + "\n ") +
                      " " +
                      i.join(",\n  ") +
                      " " +
                      a[1]
                    : a[0] + o + " " + i.join(", ") + " " + a[1]
                );
              }
              function d(e) {
                return "[" + Error.prototype.toString.call(e) + "]";
              }
              function p(e, t, r, n, i, o) {
                var a, s, l;
                if (
                  ((l = Object.getOwnPropertyDescriptor(t, i) || {
                    value: t[i],
                  }).get
                    ? (s = l.set
                        ? e.stylize("[Getter/Setter]", "special")
                        : e.stylize("[Getter]", "special"))
                    : l.set && (s = e.stylize("[Setter]", "special")),
                  T(n, i) || (a = "[" + i + "]"),
                  !s &&
                    (0 > e.seen.indexOf(l.value)
                      ? (s = b(r)
                          ? h(e, l.value, null)
                          : h(e, l.value, r - 1)).indexOf("\n") > -1 &&
                        (s = o
                          ? s
                              .split("\n")
                              .map(function (e) {
                                return "  " + e;
                              })
                              .join("\n")
                              .substr(2)
                          : "\n" +
                            s
                              .split("\n")
                              .map(function (e) {
                                return "   " + e;
                              })
                              .join("\n"))
                      : (s = e.stylize("[Circular]", "special"))),
                  v(a))
                ) {
                  if (o && i.match(/^\d+$/)) return s;
                  (a = JSON.stringify("" + i)).match(
                    /^"([a-zA-Z_][a-zA-Z_0-9]*)"$/
                  )
                    ? ((a = a.substr(1, a.length - 2)),
                      (a = e.stylize(a, "name")))
                    : ((a = a
                        .replace(/'/g, "\\'")
                        .replace(/\\"/g, '"')
                        .replace(/(^"|"$)/g, "'")),
                      (a = e.stylize(a, "string")));
                }
                return a + ": " + s;
              }
              function y(e) {
                return Array.isArray(e);
              }
              function g(e) {
                return "boolean" == typeof e;
              }
              function b(e) {
                return null === e;
              }
              function m(e) {
                return "number" == typeof e;
              }
              function w(e) {
                return "string" == typeof e;
              }
              function v(e) {
                return void 0 === e;
              }
              function x(e) {
                return E(e) && "[object RegExp]" === B(e);
              }
              function E(e) {
                return "object" == typeof e && null !== e;
              }
              function _(e) {
                return E(e) && "[object Date]" === B(e);
              }
              function S(e) {
                return (
                  E(e) && ("[object Error]" === B(e) || e instanceof Error)
                );
              }
              function A(e) {
                return "function" == typeof e;
              }
              function B(e) {
                return Object.prototype.toString.call(e);
              }
              function k(e) {
                return e < 10 ? "0" + e.toString(10) : e.toString(10);
              }
              (t.debuglog = function (e) {
                if (!a[(e = e.toUpperCase())]) {
                  if (s.test(e)) {
                    var r = n.pid;
                    a[e] = function () {
                      var n = t.format.apply(t, arguments);
                      console.error("%s %d: %s", e, r, n);
                    };
                  } else a[e] = function () {};
                }
                return a[e];
              }),
                (t.inspect = f),
                (f.colors = {
                  bold: [1, 22],
                  italic: [3, 23],
                  underline: [4, 24],
                  inverse: [7, 27],
                  white: [37, 39],
                  grey: [90, 39],
                  black: [30, 39],
                  blue: [34, 39],
                  cyan: [36, 39],
                  green: [32, 39],
                  magenta: [35, 39],
                  red: [31, 39],
                  yellow: [33, 39],
                }),
                (f.styles = {
                  special: "cyan",
                  number: "yellow",
                  boolean: "yellow",
                  undefined: "grey",
                  null: "bold",
                  string: "green",
                  date: "magenta",
                  regexp: "red",
                }),
                (t.types = r(584)),
                (t.isArray = y),
                (t.isBoolean = g),
                (t.isNull = b),
                (t.isNullOrUndefined = function (e) {
                  return null == e;
                }),
                (t.isNumber = m),
                (t.isString = w),
                (t.isSymbol = function (e) {
                  return "symbol" == typeof e;
                }),
                (t.isUndefined = v),
                (t.isRegExp = x),
                (t.types.isRegExp = x),
                (t.isObject = E),
                (t.isDate = _),
                (t.types.isDate = _),
                (t.isError = S),
                (t.types.isNativeError = S),
                (t.isFunction = A),
                (t.isPrimitive = function (e) {
                  return (
                    null === e ||
                    "boolean" == typeof e ||
                    "number" == typeof e ||
                    "string" == typeof e ||
                    "symbol" == typeof e ||
                    void 0 === e
                  );
                }),
                (t.isBuffer = r(369));
              var O = [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
              ];
              function T(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
              }
              (t.log = function () {
                var e, r;
                console.log(
                  "%s - %s",
                  ((r = [
                    k((e = new Date()).getHours()),
                    k(e.getMinutes()),
                    k(e.getSeconds()),
                  ].join(":")),
                  [e.getDate(), O[e.getMonth()], r].join(" ")),
                  t.format.apply(t, arguments)
                );
              }),
                (t.inherits = r(782)),
                (t._extend = function (e, t) {
                  if (!t || !E(t)) return e;
                  for (var r = Object.keys(t), n = r.length; n--; )
                    e[r[n]] = t[r[n]];
                  return e;
                });
              var I =
                "undefined" != typeof Symbol
                  ? Symbol("util.promisify.custom")
                  : void 0;
              function R(e, t) {
                if (!e) {
                  var r = Error("Promise was rejected with a falsy value");
                  (r.reason = e), (e = r);
                }
                return t(e);
              }
              (t.promisify = function (e) {
                if ("function" != typeof e)
                  throw TypeError(
                    'The "original" argument must be of type Function'
                  );
                if (I && e[I]) {
                  var t = e[I];
                  if ("function" != typeof t)
                    throw TypeError(
                      'The "util.promisify.custom" argument must be of type Function'
                    );
                  return (
                    Object.defineProperty(t, I, {
                      value: t,
                      enumerable: !1,
                      writable: !1,
                      configurable: !0,
                    }),
                    t
                  );
                }
                function t() {
                  for (
                    var t,
                      r,
                      n = new Promise(function (e, n) {
                        (t = e), (r = n);
                      }),
                      i = [],
                      o = 0;
                    o < arguments.length;
                    o++
                  )
                    i.push(arguments[o]);
                  i.push(function (e, n) {
                    e ? r(e) : t(n);
                  });
                  try {
                    e.apply(this, i);
                  } catch (e) {
                    r(e);
                  }
                  return n;
                }
                return (
                  Object.setPrototypeOf(t, Object.getPrototypeOf(e)),
                  I &&
                    Object.defineProperty(t, I, {
                      value: t,
                      enumerable: !1,
                      writable: !1,
                      configurable: !0,
                    }),
                  Object.defineProperties(t, i(e))
                );
              }),
                (t.promisify.custom = I),
                (t.callbackify = function (e) {
                  if ("function" != typeof e)
                    throw TypeError(
                      'The "original" argument must be of type Function'
                    );
                  function t() {
                    for (var t = [], r = 0; r < arguments.length; r++)
                      t.push(arguments[r]);
                    var i = t.pop();
                    if ("function" != typeof i)
                      throw TypeError(
                        "The last argument must be of type Function"
                      );
                    var o = this,
                      a = function () {
                        return i.apply(o, arguments);
                      };
                    e.apply(this, t).then(
                      function (e) {
                        n.nextTick(a.bind(null, null, e));
                      },
                      function (e) {
                        n.nextTick(R.bind(null, e, a));
                      }
                    );
                  }
                  return (
                    Object.setPrototypeOf(t, Object.getPrototypeOf(e)),
                    Object.defineProperties(t, i(e)),
                    t
                  );
                });
            },
            490: function (e, t, n) {
              "use strict";
              var i = n(144),
                o = n(349),
                a = n(256),
                s = a("Object.prototype.toString"),
                l = n(942)() && "symbol" == typeof Symbol.toStringTag,
                f = o(),
                u = a("String.prototype.slice"),
                c = {},
                h = n(24),
                d = Object.getPrototypeOf;
              l &&
                h &&
                d &&
                i(f, function (e) {
                  if ("function" == typeof r.g[e]) {
                    var t = new r.g[e]();
                    if (!(Symbol.toStringTag in t))
                      throw EvalError(
                        "this engine has support for Symbol.toStringTag, but " +
                          e +
                          " does not have the property! Please report this."
                      );
                    var n = d(t),
                      i = h(n, Symbol.toStringTag);
                    i || (i = h(d(n), Symbol.toStringTag)), (c[e] = i.get);
                  }
                });
              var p = function (e) {
                  var t = !1;
                  return (
                    i(c, function (r, n) {
                      if (!t)
                        try {
                          var i = r.call(e);
                          i === n && (t = i);
                        } catch (e) {}
                    }),
                    t
                  );
                },
                y = n(994);
              e.exports = function (e) {
                return !!y(e) && (l ? p(e) : u(s(e), 8, -1));
              };
            },
            349: function (e, t, n) {
              "use strict";
              var i = n(992);
              e.exports = function () {
                return i(
                  [
                    "BigInt64Array",
                    "BigUint64Array",
                    "Float32Array",
                    "Float64Array",
                    "Int16Array",
                    "Int32Array",
                    "Int8Array",
                    "Uint16Array",
                    "Uint32Array",
                    "Uint8Array",
                    "Uint8ClampedArray",
                  ],
                  function (e) {
                    return "function" == typeof r.g[e];
                  }
                );
              };
            },
            24: function (e, t, r) {
              "use strict";
              var n = r(192)("%Object.getOwnPropertyDescriptor%", !0);
              if (n)
                try {
                  n([], "length");
                } catch (e) {
                  n = null;
                }
              e.exports = n;
            },
          },
          o = {};
        function a(e) {
          var r = o[e];
          if (void 0 !== r) return r.exports;
          var n = (o[e] = { exports: {} }),
            i = !0;
          try {
            t[e](n, n.exports, a), (i = !1);
          } finally {
            i && delete o[e];
          }
          return n.exports;
        }
        (a.ab = "//"), (e.exports = a(167));
      })();
    },
    24047: (e, t, r) => {
      "use strict";
      r.d(t, { C: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 84531,
        name: "Base Goerli",
        nativeCurrency: { name: "Goerli Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://goerli.base.org"] } },
        blockExplorers: {
          default: {
            name: "Basescan",
            url: "https://goerli.basescan.org",
            apiUrl: "https://goerli.basescan.org/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          l2OutputOracle: {
            5: { address: "0x2A35891ff30313CcFa6CE88dcf3858bb075A2298" },
          },
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 1376988,
          },
          portal: {
            5: { address: "0xe93c8cD0D409341205A592f8c4Ac1A5fe5585cfA" },
          },
          l1StandardBridge: {
            5: { address: "0xfA6D8Ee5BE770F84FC001D098C4bD604Fe01284a" },
          },
        },
        testnet: !0,
        sourceId: 5,
      });
    },
    24738: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isNegativeLE = void 0),
        (t.mod = c),
        (t.pow = h),
        (t.pow2 = function (e, t, r) {
          let n = e;
          for (; t-- > i; ) (n *= n), (n %= r);
          return n;
        }),
        (t.invert = d),
        (t.tonelliShanks = p),
        (t.FpSqrt = y),
        (t.validateField = function (e) {
          let t = g.reduce((e, t) => ((e[t] = "function"), e), {
            ORDER: "bigint",
            MASK: "bigint",
            BYTES: "isSafeInteger",
            BITS: "isSafeInteger",
          });
          return (0, n.validateObject)(e, t);
        }),
        (t.FpPow = b),
        (t.FpInvertBatch = m),
        (t.FpDiv = function (e, t, r) {
          return e.mul(t, "bigint" == typeof r ? d(r, e.ORDER) : e.inv(r));
        }),
        (t.FpIsSquare = function (e) {
          let t = (e.ORDER - o) / a;
          return (r) => {
            let n = e.pow(r, t);
            return e.eql(n, e.ZERO) || e.eql(n, e.ONE);
          };
        }),
        (t.nLength = w),
        (t.Field = function (e, t, r = !1, a = {}) {
          if (e <= i) throw Error(`Expected Field ORDER > 0, got ${e}`);
          let { nBitLength: s, nByteLength: l } = w(e, t);
          if (l > 2048)
            throw Error("Field lengths over 2048 bytes are not supported");
          let f = y(e),
            u = Object.freeze({
              ORDER: e,
              BITS: s,
              BYTES: l,
              MASK: (0, n.bitMask)(s),
              ZERO: i,
              ONE: o,
              create: (t) => c(t, e),
              isValid: (t) => {
                if ("bigint" != typeof t)
                  throw Error(
                    `Invalid field element: expected bigint, got ${typeof t}`
                  );
                return i <= t && t < e;
              },
              is0: (e) => e === i,
              isOdd: (e) => (e & o) === o,
              neg: (t) => c(-t, e),
              eql: (e, t) => e === t,
              sqr: (t) => c(t * t, e),
              add: (t, r) => c(t + r, e),
              sub: (t, r) => c(t - r, e),
              mul: (t, r) => c(t * r, e),
              pow: (e, t) => b(u, e, t),
              div: (t, r) => c(t * d(r, e), e),
              sqrN: (e) => e * e,
              addN: (e, t) => e + t,
              subN: (e, t) => e - t,
              mulN: (e, t) => e * t,
              inv: (t) => d(t, e),
              sqrt: a.sqrt || ((e) => f(u, e)),
              invertBatch: (e) => m(u, e),
              cmov: (e, t, r) => (r ? t : e),
              toBytes: (e) =>
                r ? (0, n.numberToBytesLE)(e, l) : (0, n.numberToBytesBE)(e, l),
              fromBytes: (e) => {
                if (e.length !== l)
                  throw Error(`Fp.fromBytes: expected ${l}, got ${e.length}`);
                return r
                  ? (0, n.bytesToNumberLE)(e)
                  : (0, n.bytesToNumberBE)(e);
              },
            });
          return Object.freeze(u);
        }),
        (t.FpSqrtOdd = function (e, t) {
          if (!e.isOdd) throw Error("Field doesn't have isOdd");
          let r = e.sqrt(t);
          return e.isOdd(r) ? r : e.neg(r);
        }),
        (t.FpSqrtEven = function (e, t) {
          if (!e.isOdd) throw Error("Field doesn't have isOdd");
          let r = e.sqrt(t);
          return e.isOdd(r) ? e.neg(r) : r;
        }),
        (t.hashToPrivateScalar = function (e, t, r = !1) {
          let i = (e = (0, n.ensureBytes)("privateHash", e)).length,
            a = w(t).nByteLength + 8;
          if (a < 24 || i < a || i > 1024)
            throw Error(
              `hashToPrivateScalar: expected ${a}-1024 bytes of input, got ${i}`
            );
          return (
            c(
              r ? (0, n.bytesToNumberLE)(e) : (0, n.bytesToNumberBE)(e),
              t - o
            ) + o
          );
        }),
        (t.getFieldBytesLength = v),
        (t.getMinHashLength = x),
        (t.mapHashToField = function (e, t, r = !1) {
          let i = e.length,
            a = v(t),
            s = x(t);
          if (i < 16 || i < s || i > 1024)
            throw Error(`expected ${s}-1024 bytes of input, got ${i}`);
          let l =
            c(
              r ? (0, n.bytesToNumberBE)(e) : (0, n.bytesToNumberLE)(e),
              t - o
            ) + o;
          return r
            ? (0, n.numberToBytesLE)(l, a)
            : (0, n.numberToBytesBE)(l, a);
        });
      let n = r(57953),
        i = BigInt(0),
        o = BigInt(1),
        a = BigInt(2),
        s = BigInt(3),
        l = BigInt(4),
        f = BigInt(5),
        u = BigInt(8);
      function c(e, t) {
        let r = e % t;
        return r >= i ? r : t + r;
      }
      function h(e, t, r) {
        if (r <= i || t < i) throw Error("Expected power/modulo > 0");
        if (r === o) return i;
        let n = o;
        for (; t > i; )
          t & o && (n = (n * e) % r), (e = (e * e) % r), (t >>= o);
        return n;
      }
      function d(e, t) {
        if (e === i || t <= i)
          throw Error(
            `invert: expected positive integers, got n=${e} mod=${t}`
          );
        let r = c(e, t),
          n = t,
          a = i,
          s = o,
          l = o,
          f = i;
        for (; r !== i; ) {
          let e = n / r,
            t = n % r,
            i = a - l * e,
            o = s - f * e;
          (n = r), (r = t), (a = l), (s = f), (l = i), (f = o);
        }
        if (n !== o) throw Error("invert: does not exist");
        return c(a, t);
      }
      function p(e) {
        let t, r, n;
        let s = (e - o) / a;
        for (t = e - o, r = 0; t % a === i; t /= a, r++);
        for (n = a; n < e && h(n, s, e) !== e - o; n++);
        if (1 === r) {
          let t = (e + o) / l;
          return function (e, r) {
            let n = e.pow(r, t);
            if (!e.eql(e.sqr(n), r)) throw Error("Cannot find square root");
            return n;
          };
        }
        let f = (t + o) / a;
        return function (e, i) {
          if (e.pow(i, s) === e.neg(e.ONE))
            throw Error("Cannot find square root");
          let a = r,
            l = e.pow(e.mul(e.ONE, n), t),
            u = e.pow(i, f),
            c = e.pow(i, t);
          for (; !e.eql(c, e.ONE); ) {
            if (e.eql(c, e.ZERO)) return e.ZERO;
            let t = 1;
            for (let r = e.sqr(c); t < a && !e.eql(r, e.ONE); t++) r = e.sqr(r);
            let r = e.pow(l, o << BigInt(a - t - 1));
            (l = e.sqr(r)), (u = e.mul(u, r)), (c = e.mul(c, l)), (a = t);
          }
          return u;
        };
      }
      function y(e) {
        if (e % l === s) {
          let t = (e + o) / l;
          return function (e, r) {
            let n = e.pow(r, t);
            if (!e.eql(e.sqr(n), r)) throw Error("Cannot find square root");
            return n;
          };
        }
        if (e % u === f) {
          let t = (e - f) / u;
          return function (e, r) {
            let n = e.mul(r, a),
              i = e.pow(n, t),
              o = e.mul(r, i),
              s = e.mul(e.mul(o, a), i),
              l = e.mul(o, e.sub(s, e.ONE));
            if (!e.eql(e.sqr(l), r)) throw Error("Cannot find square root");
            return l;
          };
        }
        return p(e);
      }
      BigInt(9), BigInt(16), (t.isNegativeLE = (e, t) => (c(e, t) & o) === o);
      let g = [
        "create",
        "isValid",
        "is0",
        "neg",
        "inv",
        "sqrt",
        "sqr",
        "eql",
        "add",
        "sub",
        "mul",
        "pow",
        "div",
        "addN",
        "subN",
        "mulN",
        "sqrN",
      ];
      function b(e, t, r) {
        if (r < i) throw Error("Expected power > 0");
        if (r === i) return e.ONE;
        if (r === o) return t;
        let n = e.ONE,
          a = t;
        for (; r > i; ) r & o && (n = e.mul(n, a)), (a = e.sqr(a)), (r >>= o);
        return n;
      }
      function m(e, t) {
        let r = Array(t.length),
          n = t.reduce(
            (t, n, i) => (e.is0(n) ? t : ((r[i] = t), e.mul(t, n))),
            e.ONE
          ),
          i = e.inv(n);
        return (
          t.reduceRight(
            (t, n, i) =>
              e.is0(n) ? t : ((r[i] = e.mul(t, r[i])), e.mul(t, n)),
            i
          ),
          r
        );
      }
      function w(e, t) {
        let r = void 0 !== t ? t : e.toString(2).length,
          n = Math.ceil(r / 8);
        return { nBitLength: r, nByteLength: n };
      }
      function v(e) {
        if ("bigint" != typeof e) throw Error("field order must be bigint");
        return Math.ceil(e.toString(2).length / 8);
      }
      function x(e) {
        let t = v(e);
        return t + Math.ceil(t / 2);
      }
    },
    25929: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.Withdrawal = void 0);
      let i = r(46066),
        o = r(50797),
        a = r(83059);
      class s {
        constructor(e, t, r, n) {
          (this.index = e),
            (this.validatorIndex = t),
            (this.address = r),
            (this.amount = n);
        }
        static fromWithdrawalData(e) {
          let { index: t, validatorIndex: r, address: n, amount: o } = e,
            l = (0, a.toType)(t, a.TypeOutput.BigInt),
            f = (0, a.toType)(r, a.TypeOutput.BigInt);
          return new s(
            l,
            f,
            new i.Address((0, a.toType)(n, a.TypeOutput.Buffer)),
            (0, a.toType)(o, a.TypeOutput.BigInt)
          );
        }
        static fromValuesArray(e) {
          if (4 !== e.length)
            throw Error(
              `Invalid withdrawalArray length expected=4 actual=${e.length}`
            );
          let [t, r, n, i] = e;
          return s.fromWithdrawalData({
            index: t,
            validatorIndex: r,
            address: n,
            amount: i,
          });
        }
        static toBufferArray(e) {
          let { index: t, validatorIndex: r, address: o, amount: s } = e,
            l =
              (0, a.toType)(t, a.TypeOutput.BigInt) === BigInt(0)
                ? n.alloc(0)
                : (0, a.toType)(t, a.TypeOutput.Buffer);
          return [
            l,
            (0, a.toType)(r, a.TypeOutput.BigInt) === BigInt(0)
              ? n.alloc(0)
              : (0, a.toType)(r, a.TypeOutput.Buffer),
            o instanceof i.Address
              ? o.buf
              : (0, a.toType)(o, a.TypeOutput.Buffer),
            (0, a.toType)(s, a.TypeOutput.BigInt) === BigInt(0)
              ? n.alloc(0)
              : (0, a.toType)(s, a.TypeOutput.Buffer),
          ];
        }
        raw() {
          return s.toBufferArray(this);
        }
        toValue() {
          return {
            index: this.index,
            validatorIndex: this.validatorIndex,
            address: this.address.buf,
            amount: this.amount,
          };
        }
        toJSON() {
          return {
            index: (0, o.bigIntToHex)(this.index),
            validatorIndex: (0, o.bigIntToHex)(this.validatorIndex),
            address: "0x" + this.address.buf.toString("hex"),
            amount: (0, o.bigIntToHex)(this.amount),
          };
        }
      }
      t.Withdrawal = s;
    },
    26903: (e, t, r) => {
      "use strict";
      r.d(t, { i: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 0xaa37dc,
        name: "OP Sepolia",
        nativeCurrency: { name: "Sepolia Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://sepolia.optimism.io"] } },
        blockExplorers: {
          default: {
            name: "Blockscout",
            url: "https://optimism-sepolia.blockscout.com",
            apiUrl: "https://optimism-sepolia.blockscout.com/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          disputeGameFactory: {
            0xaa36a7: { address: "0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1" },
          },
          l2OutputOracle: {
            0xaa36a7: { address: "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F" },
          },
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 1620204,
          },
          portal: {
            0xaa36a7: { address: "0x16Fc5058F25648194471939df75CF27A2fdC48BC" },
          },
          l1StandardBridge: {
            0xaa36a7: { address: "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1" },
          },
        },
        testnet: !0,
        sourceId: 0xaa36a7,
      });
    },
    27321: (e, t, r) => {
      !(function () {
        var t = {
            528: function (e, t, r) {
              var n = r(685),
                i = r(310),
                o = e.exports;
              for (var a in n) n.hasOwnProperty(a) && (o[a] = n[a]);
              function s(e) {
                if (
                  ("string" == typeof e && (e = i.parse(e)),
                  e.protocol || (e.protocol = "https:"),
                  "https:" !== e.protocol)
                )
                  throw Error(
                    'Protocol "' +
                      e.protocol +
                      '" not supported. Expected "https:"'
                  );
                return e;
              }
              (o.request = function (e, t) {
                return (e = s(e)), n.request.call(this, e, t);
              }),
                (o.get = function (e, t) {
                  return (e = s(e)), n.get.call(this, e, t);
                });
            },
            685: function (e) {
              "use strict";
              e.exports = r(47744);
            },
            310: function (e) {
              "use strict";
              e.exports = r(40252);
            },
          },
          n = {};
        function i(e) {
          var r = n[e];
          if (void 0 !== r) return r.exports;
          var o = (n[e] = { exports: {} }),
            a = !0;
          try {
            t[e](o, o.exports, i), (a = !1);
          } finally {
            a && delete n[e];
          }
          return o.exports;
        }
        (i.ab = "//"), (e.exports = i(528));
      })();
    },
    27835: function (e, t, r) {
      var n,
        i = r(76928).Buffer;
      (n = function () {
        "use strict";
        var e = {};
        function t(e) {
          if (
            !/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(
              e
            )
          )
            throw TypeError("invalid encoding");
        }
        return (
          (e.decodeUTF8 = function (e) {
            if ("string" != typeof e) throw TypeError("expected string");
            var t,
              r = unescape(encodeURIComponent(e)),
              n = new Uint8Array(r.length);
            for (t = 0; t < r.length; t++) n[t] = r.charCodeAt(t);
            return n;
          }),
          (e.encodeUTF8 = function (e) {
            var t,
              r = [];
            for (t = 0; t < e.length; t++) r.push(String.fromCharCode(e[t]));
            return decodeURIComponent(escape(r.join("")));
          }),
          "undefined" == typeof atob
            ? void 0 !== i.from
              ? ((e.encodeBase64 = function (e) {
                  return i.from(e).toString("base64");
                }),
                (e.decodeBase64 = function (e) {
                  return (
                    t(e),
                    new Uint8Array(
                      Array.prototype.slice.call(i.from(e, "base64"), 0)
                    )
                  );
                }))
              : ((e.encodeBase64 = function (e) {
                  return new i(e).toString("base64");
                }),
                (e.decodeBase64 = function (e) {
                  return (
                    t(e),
                    new Uint8Array(
                      Array.prototype.slice.call(new i(e, "base64"), 0)
                    )
                  );
                }))
            : ((e.encodeBase64 = function (e) {
                var t,
                  r = [],
                  n = e.length;
                for (t = 0; t < n; t++) r.push(String.fromCharCode(e[t]));
                return btoa(r.join(""));
              }),
              (e.decodeBase64 = function (e) {
                t(e);
                var r,
                  n = atob(e),
                  i = new Uint8Array(n.length);
                for (r = 0; r < n.length; r++) i[r] = n.charCodeAt(r);
                return i;
              })),
          e
        );
      }),
        e.exports
          ? (e.exports = n())
          : (this.nacl || (this.nacl = {}), (this.nacl.util = n()));
    },
    28255: (e, t, r) => {
      "use strict";
      r.d(t, { _: () => h });
      var n = r(57833),
        i = r(57767),
        o = r(98114),
        a = r(72352),
        s = r(41287),
        l = r(92687),
        f = r(29618);
      async function u(e, t) {
        let { account: r = e.account } = t;
        if (!r) throw new i.T();
        let u = (0, n.J)(r);
        try {
          let {
              accessList: r,
              blockNumber: n,
              blockTag: i,
              data: a,
              gas: c,
              gasPrice: h,
              maxFeePerGas: d,
              maxPriorityFeePerGas: p,
              nonce: y,
              to: g,
              value: b,
              ...m
            } = t,
            w = ("bigint" == typeof n ? (0, o.cK)(n) : void 0) || i;
          (0, f.c)(t);
          let v = e.chain?.formatters?.transactionRequest?.format,
            x = (v || l.Bv)({
              ...(0, s.o)(m, { format: v }),
              from: u?.address,
              accessList: r,
              data: a,
              gas: c,
              gasPrice: h,
              maxFeePerGas: d,
              maxPriorityFeePerGas: p,
              nonce: y,
              to: g,
              value: b,
            }),
            {
              baseFeePerGas: E,
              gasLimit: _,
              priorityFeePerGas: S,
            } = await e.request({
              method: "linea_estimateGas",
              params: w ? [x, w] : [x],
            });
          return {
            baseFeePerGas: BigInt(E),
            gasLimit: BigInt(_),
            priorityFeePerGas: BigInt(S),
          };
        } catch (r) {
          throw (0, a.d)(r, { ...t, account: u, chain: e.chain });
        }
      }
      async function c({ client: e, multiply: t, request: r, type: n }) {
        try {
          let i = await u(e, { ...r, account: r?.account }),
            { priorityFeePerGas: o } = i,
            a = t(BigInt(i.baseFeePerGas)) + o;
          if ("legacy" === n) return { gasPrice: a };
          return { maxFeePerGas: a, maxPriorityFeePerGas: o };
        } catch {
          return null;
        }
      }
      let h = (0, r(12644).x)({
        fees: {
          estimateFeesPerGas: c,
          async maxPriorityFeePerGas({ block: e, client: t, request: r }) {
            let n = await c({
              block: e,
              client: t,
              multiply: (e) => e,
              request: r,
              type: "eip1559",
            });
            return n?.maxPriorityFeePerGas ? n.maxPriorityFeePerGas : null;
          },
        },
        id: 59144,
        name: "Linea Mainnet",
        nativeCurrency: { name: "Linea Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: {
          default: {
            http: ["https://rpc.linea.build"],
            webSocket: ["wss://rpc.linea.build"],
          },
        },
        blockExplorers: {
          default: {
            name: "Etherscan",
            url: "https://lineascan.build",
            apiUrl: "https://api.lineascan.build/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 42,
          },
          ensRegistry: {
            address: "0x50130b669B28C339991d8676FA73CF122a121267",
            blockCreated: 6682888,
          },
          ensUniversalResolver: {
            address: "0x3aA974fb3f8C1E02796048BDCdeD79e9D53a6965",
            blockCreated: 6683e3,
          },
        },
        ensTlds: [".linea.eth"],
        testnet: !1,
      });
    },
    28338: (e, t, r) => {
      "use strict";
      r.d(t, { D: () => n });
      let n = (0, r(12644).x)({
        id: 42161,
        name: "Arbitrum One",
        nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://arb1.arbitrum.io/rpc"] } },
        blockExplorers: {
          default: {
            name: "Arbiscan",
            url: "https://arbiscan.io",
            apiUrl: "https://api.arbiscan.io/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 7654707,
          },
        },
      });
    },
    29969: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.extractPublicKey =
          t.recoverPersonalSignature =
          t.personalSign =
            void 0);
      let n = r(43118),
        i = r(91262);
      function o(e, t) {
        let r = (0, n.hashPersonalMessage)((0, i.legacyToBuffer)(e));
        return (0, i.recoverPublicKey)(r, t);
      }
      (t.personalSign = function ({ privateKey: e, data: t }) {
        if ((0, i.isNullish)(t)) throw Error("Missing data parameter");
        if ((0, i.isNullish)(e)) throw Error("Missing privateKey parameter");
        let r = (0, i.legacyToBuffer)(t),
          o = (0, n.hashPersonalMessage)(r),
          a = (0, n.ecsign)(o, e);
        return (0, i.concatSig)((0, n.toBuffer)(a.v), a.r, a.s);
      }),
        (t.recoverPersonalSignature = function ({ data: e, signature: t }) {
          if ((0, i.isNullish)(e)) throw Error("Missing data parameter");
          if ((0, i.isNullish)(t)) throw Error("Missing signature parameter");
          let r = o(e, t),
            a = (0, n.publicToAddress)(r);
          return (0, n.bufferToHex)(a);
        }),
        (t.extractPublicKey = function ({ data: e, signature: t }) {
          if ((0, i.isNullish)(e)) throw Error("Missing data parameter");
          if ((0, i.isNullish)(t)) throw Error("Missing signature parameter");
          let r = o(e, t);
          return `0x${r.toString("hex")}`;
        });
    },
    30150: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.keccak512 = t.keccak384 = t.keccak256 = t.keccak224 = void 0);
      let n = r(17486),
        i = r(39069);
      (t.keccak224 = (0, i.wrapHash)(n.keccak_224)),
        (t.keccak256 = (() => {
          let e = (0, i.wrapHash)(n.keccak_256);
          return (e.create = n.keccak_256.create), e;
        })()),
        (t.keccak384 = (0, i.wrapHash)(n.keccak_384)),
        (t.keccak512 = (0, i.wrapHash)(n.keccak_512));
    },
    30428: (e, t, r) => {
      "use strict";
      r.d(t, { R: () => n });
      let n = (0, r(12644).x)({
        id: 421613,
        name: "Arbitrum Goerli",
        nativeCurrency: {
          name: "Arbitrum Goerli Ether",
          symbol: "ETH",
          decimals: 18,
        },
        rpcUrls: {
          default: { http: ["https://goerli-rollup.arbitrum.io/rpc"] },
        },
        blockExplorers: {
          default: { name: "Arbiscan", url: "https://goerli.arbiscan.io" },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 88114,
          },
        },
        testnet: !0,
      });
    },
    30728: (e, t, r) => {
      "use strict";
      r.d(t, {
        AT: () => I,
        G3: () => E,
        O4: () => N,
        Ow: () => U,
        QC: () => H,
        QX: () => j,
        Ss: () => A,
        hZ: () => S,
        j1: () => _,
        ju: () => T,
        k0: () => x,
        u0: () => y,
        xG: () => v,
      });
      var n = r(95293),
        i = r(3098),
        o = r(51552),
        a = r(31704);
      let s = i.tf(i.ee(null), (e) => (0, a.nj)(e, a.Wy.ecdsa)),
        l = i.tf(i.ee(32), (e) => (0, a.nj)(e, a.Wy.schnorr)),
        f = i.tf(i.ee(null), (e) => {
          if (64 !== e.length && 65 !== e.length)
            throw Error("Schnorr signature should be 64 or 65 bytes long");
          return e;
        }),
        u = i.w3({ fingerprint: i.C, path: i.YO(null, i.QK) }),
        c = i.w3({ hashes: i.YO(o.km, i.ee(32)), der: u }),
        h = i.ee(78),
        d = i.w3({ pubKey: l, leafHash: i.ee(32) }),
        p = i.w3({
          version: i.U8,
          internalKey: i.ee(32),
          merklePath: i.YO(null, i.ee(32)),
        }),
        y = i.tf(p, (e) => {
          if (e.merklePath.length > 128)
            throw Error(
              "TaprootControlBlock: merklePath should be of length 0..128 (inclusive)"
            );
          return e;
        }),
        g = i.YO(null, i.w3({ depth: i.U8, version: i.U8, script: o.Rg })),
        b = i.ee(null),
        m = i.ee(20),
        w = i.ee(32),
        v = {
          unsignedTx: [0, !1, o.kW, [0], [0], !1],
          xpub: [1, h, u, [], [0, 2], !1],
          txVersion: [2, !1, i.QK, [2], [2], !1],
          fallbackLocktime: [3, !1, i.QK, [], [2], !1],
          inputCount: [4, !1, o.km, [2], [2], !1],
          outputCount: [5, !1, o.km, [2], [2], !1],
          txModifiable: [6, !1, i.U8, [], [2], !1],
          version: [251, !1, i.QK, [], [0, 2], !1],
          proprietary: [252, b, b, [], [0, 2], !1],
        },
        x = {
          nonWitnessUtxo: [0, !1, o.NC, [], [0, 2], !1],
          witnessUtxo: [1, !1, o.oV, [], [0, 2], !1],
          partialSig: [2, s, b, [], [0, 2], !1],
          sighashType: [3, !1, i.QK, [], [0, 2], !1],
          redeemScript: [4, !1, b, [], [0, 2], !1],
          witnessScript: [5, !1, b, [], [0, 2], !1],
          bip32Derivation: [6, s, u, [], [0, 2], !1],
          finalScriptSig: [7, !1, b, [], [0, 2], !1],
          finalScriptWitness: [8, !1, o.Kk, [], [0, 2], !1],
          porCommitment: [9, !1, b, [], [0, 2], !1],
          ripemd160: [10, m, b, [], [0, 2], !1],
          sha256: [11, w, b, [], [0, 2], !1],
          hash160: [12, m, b, [], [0, 2], !1],
          hash256: [13, w, b, [], [0, 2], !1],
          txid: [14, !1, w, [2], [2], !0],
          index: [15, !1, i.QK, [2], [2], !0],
          sequence: [16, !1, i.QK, [], [2], !0],
          requiredTimeLocktime: [17, !1, i.QK, [], [2], !1],
          requiredHeightLocktime: [18, !1, i.QK, [], [2], !1],
          tapKeySig: [19, !1, f, [], [0, 2], !1],
          tapScriptSig: [20, d, f, [], [0, 2], !1],
          tapLeafScript: [21, y, b, [], [0, 2], !1],
          tapBip32Derivation: [22, w, c, [], [0, 2], !1],
          tapInternalKey: [23, !1, l, [], [0, 2], !1],
          tapMerkleRoot: [24, !1, w, [], [0, 2], !1],
          proprietary: [252, b, b, [], [0, 2], !1],
        },
        E = [
          "txid",
          "sequence",
          "index",
          "witnessUtxo",
          "nonWitnessUtxo",
          "finalScriptSig",
          "finalScriptWitness",
          "unknown",
        ],
        _ = [
          "partialSig",
          "finalScriptSig",
          "finalScriptWitness",
          "tapKeySig",
          "tapScriptSig",
        ],
        S = {
          redeemScript: [0, !1, b, [], [0, 2], !1],
          witnessScript: [1, !1, b, [], [0, 2], !1],
          bip32Derivation: [2, s, u, [], [0, 2], !1],
          amount: [3, !1, i.d, [2], [2], !0],
          script: [4, !1, b, [2], [2], !0],
          tapInternalKey: [5, !1, l, [], [0, 2], !1],
          tapTree: [6, !1, g, [], [0, 2], !1],
          tapBip32Derivation: [7, l, c, [], [0, 2], !1],
          proprietary: [252, b, b, [], [0, 2], !1],
        },
        A = [],
        B = i.YO(
          i.Cq,
          i.w3({
            key: i.Pl(o.km, i.w3({ type: o.km, key: i.ee(null) })),
            value: i.ee(o.km),
          })
        );
      function k(e) {
        let [t, r, n, i, o, a] = e;
        return {
          type: t,
          kc: r,
          vc: n,
          reqInc: i,
          allowInc: o,
          silentIgnore: a,
        };
      }
      function O(e) {
        let t = {};
        for (let r in e) {
          let [n, i, o] = e[r];
          t[n] = [r, i, o];
        }
        return i.LV({
          encodeStream: (t, r) => {
            let n = [];
            for (let t in e) {
              let o = r[t];
              if (void 0 === o) continue;
              let [s, l, f] = e[t];
              if (l) {
                let e = o.map(([e, t]) => [l.encode(e), f.encode(t)]);
                for (let [t, r] of (e.sort((e, t) => (0, a.Xo)(e[0], t[0])), e))
                  n.push({ key: { key: t, type: s }, value: r });
              } else
                n.push({ key: { type: s, key: i.wg }, value: f.encode(o) });
            }
            if (r.unknown)
              for (let [e, t] of (r.unknown.sort((e, t) =>
                (0, a.Xo)(e[0].key, t[0].key)
              ),
              r.unknown))
                n.push({ key: e, value: t });
            B.encodeStream(t, n);
          },
          decodeStream: (e) => {
            let r = B.decodeStream(e),
              i = {},
              o = {};
            for (let e of r) {
              let r = "unknown",
                a = e.key.key,
                s = e.value;
              if (t[e.key.type]) {
                let [l, f, u] = t[e.key.type];
                if (((r = l), !f && a.length))
                  throw Error(
                    `PSBT: Non-empty key for ${r} (key=${n.uh.encode(
                      a
                    )} value=${n.uh.encode(s)}`
                  );
                if (((a = f ? f.decode(a) : void 0), (s = u.decode(s)), !f)) {
                  if (i[r])
                    throw Error(`PSBT: Same keys: ${r} (key=${a} value=${s})`);
                  (i[r] = s), (o[r] = !0);
                  continue;
                }
              } else a = { type: e.key.type, key: e.key.key };
              if (o[r])
                throw Error(
                  `PSBT: Key type with empty key and no key=${r} val=${s}`
                );
              i[r] || (i[r] = []), i[r].push([a, s]);
            }
            return i;
          },
        });
      }
      i.w3({ type: o.km, key: i.ee(null) });
      let T = i.tf(O(x), (e) => {
          if (e.finalScriptWitness && !e.finalScriptWitness.length)
            throw Error("validateInput: empty finalScriptWitness");
          if (e.partialSig && !e.partialSig.length)
            throw Error("Empty partialSig");
          if (e.partialSig)
            for (let [t] of e.partialSig) (0, a.nj)(t, a.Wy.ecdsa);
          if (e.bip32Derivation)
            for (let [t] of e.bip32Derivation) (0, a.nj)(t, a.Wy.ecdsa);
          if (void 0 !== e.requiredTimeLocktime && e.requiredTimeLocktime < 5e8)
            throw Error(
              `validateInput: wrong timeLocktime=${e.requiredTimeLocktime}`
            );
          if (
            void 0 !== e.requiredHeightLocktime &&
            (e.requiredHeightLocktime <= 0 || e.requiredHeightLocktime >= 5e8)
          )
            throw Error(
              `validateInput: wrong heighLocktime=${e.requiredHeightLocktime}`
            );
          if (e.tapLeafScript)
            for (let [t, r] of e.tapLeafScript) {
              if ((254 & t.version) !== r[r.length - 1])
                throw Error("validateInput: tapLeafScript version mimatch");
              if (1 & r[r.length - 1])
                throw Error(
                  "validateInput: tapLeafScript version has parity bit!"
                );
            }
          return e;
        }),
        I = i.tf(O(S), (e) => {
          if (e.bip32Derivation)
            for (let [t] of e.bip32Derivation) (0, a.nj)(t, a.Wy.ecdsa);
          return e;
        }),
        R = i.tf(O(v), (e) => {
          if (0 === (e.version || 0)) {
            if (!e.unsignedTx) throw Error("PSBTv0: missing unsignedTx");
            for (let t of e.unsignedTx.inputs)
              if (t.finalScriptSig && t.finalScriptSig.length)
                throw Error("PSBTv0: input scriptSig found in unsignedTx");
          }
          return e;
        }),
        M = i.w3({
          magic: i.GE(i.Yj(new Uint8Array([255])), "psbt"),
          global: R,
          inputs: i.YO("global/unsignedTx/inputs/length", T),
          outputs: i.YO(null, I),
        }),
        P = i.w3({
          magic: i.GE(i.Yj(new Uint8Array([255])), "psbt"),
          global: R,
          inputs: i.YO("global/inputCount", T),
          outputs: i.YO("global/outputCount", I),
        });
      function C(e, t, r) {
        for (let n in r) {
          if ("unknown" === n || !t[n]) continue;
          let { allowInc: r } = k(t[n]);
          if (!r.includes(e))
            throw Error(`PSBTv${e}: field ${n} is not allowed`);
        }
        for (let n in t) {
          let { reqInc: i } = k(t[n]);
          if (i.includes(e) && void 0 === r[n])
            throw Error(`PSBTv${e}: missing required field ${n}`);
        }
      }
      function U(e, t, r) {
        let n = {};
        for (let i in r) {
          if ("unknown" !== i) {
            if (!t[i]) continue;
            let { allowInc: r, silentIgnore: n } = k(t[i]);
            if (!r.includes(e)) {
              if (n) continue;
              throw Error(
                `Failed to serialize in PSBTv${e}: ${i} but versions allows inclusion=${r}`
              );
            }
          }
          n[i] = r[i];
        }
        return n;
      }
      function L(e) {
        let t = (e && e.global && e.global.version) || 0;
        for (let r of (C(t, v, e.global), e.inputs)) C(t, x, r);
        for (let r of e.outputs) C(t, S, r);
        let r = t ? e.global.inputCount : e.global.unsignedTx.inputs.length;
        if (e.inputs.length < r) throw Error("Not enough inputs");
        let n = e.inputs.slice(r);
        if (n.length > 1 || (n.length && Object.keys(n[0]).length))
          throw Error(`Unexpected inputs left in tx=${n}`);
        let i = t ? e.global.outputCount : e.global.unsignedTx.outputs.length;
        if (e.outputs.length < i) throw Error("Not outputs inputs");
        let o = e.outputs.slice(i);
        if (o.length > 1 || (o.length && Object.keys(o[0]).length))
          throw Error(`Unexpected outputs left in tx=${o}`);
        return e;
      }
      function N(e, t, r, i, o) {
        let s = { ...r, ...t };
        for (let o in e) {
          let l = o,
            [f, u, c] = e[l],
            h = i && !i.includes(o);
          if (void 0 === t[o] && o in t) {
            if (h) throw Error(`Cannot remove signed field=${o}`);
            delete s[o];
          } else if (u) {
            let e = r && r[o] ? r[o] : [],
              i = t[l];
            if (i) {
              if (!Array.isArray(i))
                throw Error(`keyMap(${o}): KV pairs should be [k, v][]`);
              i = i.map((e) => {
                if (2 !== e.length)
                  throw Error(`keyMap(${o}): KV pairs should be [k, v][]`);
                return [
                  "string" == typeof e[0] ? u.decode(n.uh.decode(e[0])) : e[0],
                  "string" == typeof e[1] ? c.decode(n.uh.decode(e[1])) : e[1],
                ];
              });
              let t = {},
                r = (e, r, i) => {
                  if (void 0 === t[e]) {
                    t[e] = [r, i];
                    return;
                  }
                  let o = n.uh.encode(c.encode(t[e][1])),
                    a = n.uh.encode(c.encode(i));
                  if (o !== a)
                    throw Error(
                      `keyMap(${l}): same key=${e} oldVal=${o} newVal=${a}`
                    );
                };
              for (let [t, i] of e) r(n.uh.encode(u.encode(t)), t, i);
              for (let [e, o] of i) {
                let i = n.uh.encode(u.encode(e));
                if (void 0 === o) {
                  if (h) throw Error(`Cannot remove signed field=${l}/${e}`);
                  delete t[i];
                } else r(i, e, o);
              }
              s[l] = Object.values(t);
            }
          } else if ("string" == typeof s[o])
            s[o] = c.decode(n.uh.decode(s[o]));
          else if (
            h &&
            o in t &&
            r &&
            void 0 !== r[o] &&
            !(0, a.ex)(c.encode(t[o]), c.encode(r[o]))
          )
            throw Error(`Cannot change signed field=${o}`);
        }
        for (let t in s)
          if (!e[t]) {
            if (o && "unknown" === t) continue;
            delete s[t];
          }
        return s;
      }
      i.w3({
        magic: i.GE(i.Yj(new Uint8Array([255])), "psbt"),
        items: i.YO(
          null,
          i.Bb(i.YO(i.Cq, i.PV([i.uh(o.km), i.ee(o.RF)])), i.Lo.dict())
        ),
      });
      let j = i.tf(M, L),
        H = i.tf(P, L);
    },
    31704: (e, t, r) => {
      "use strict";
      r.d(t, {
        pG: () => tp,
        Wy: () => n,
        ie: () => td,
        Xo: () => ty,
        Id: () => e9,
        ex: () => te,
        A0: () => tt,
        aY: () => e7,
        E1: () => ti,
        vl: () => tn,
        Y7: () => tr,
        iM: () => ta,
        V0: () => ts,
        m: () => tl,
        Cn: () => tc,
        gD: () => th,
        nj: () => tf,
      });
      var n,
        i = r(14157),
        o = r(84080);
      class a extends o.Vw {
        constructor(e, t) {
          super(), (this.finished = !1), (this.destroyed = !1), (0, o.sd)(e);
          let r = (0, o.ZJ)(t);
          if (
            ((this.iHash = e.create()), "function" != typeof this.iHash.update)
          )
            throw Error("Expected instance of class which extends utils.Hash");
          (this.blockLen = this.iHash.blockLen),
            (this.outputLen = this.iHash.outputLen);
          let n = this.blockLen,
            i = new Uint8Array(n);
          i.set(r.length > n ? e.create().update(r).digest() : r);
          for (let e = 0; e < i.length; e++) i[e] ^= 54;
          this.iHash.update(i), (this.oHash = e.create());
          for (let e = 0; e < i.length; e++) i[e] ^= 106;
          this.oHash.update(i), (0, o.uH)(i);
        }
        update(e) {
          return (0, o.CC)(this), this.iHash.update(e), this;
        }
        digestInto(e) {
          (0, o.CC)(this),
            (0, o.DO)(e, this.outputLen),
            (this.finished = !0),
            this.iHash.digestInto(e),
            this.oHash.update(e),
            this.oHash.digestInto(e),
            this.destroy();
        }
        digest() {
          let e = new Uint8Array(this.oHash.outputLen);
          return this.digestInto(e), e;
        }
        _cloneInto(e) {
          e || (e = Object.create(Object.getPrototypeOf(this), {}));
          let {
            oHash: t,
            iHash: r,
            finished: n,
            destroyed: i,
            blockLen: o,
            outputLen: a,
          } = this;
          return (
            (e.finished = n),
            (e.destroyed = i),
            (e.blockLen = o),
            (e.outputLen = a),
            (e.oHash = t._cloneInto(e.oHash)),
            (e.iHash = r._cloneInto(e.iHash)),
            e
          );
        }
        clone() {
          return this._cloneInto();
        }
        destroy() {
          (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
        }
      }
      let s = (e, t, r) => new a(e, t).update(r).digest();
      s.create = (e, t) => new a(e, t);
      let l = BigInt(0),
        f = BigInt(1);
      function u(e, t) {
        if ("boolean" != typeof t)
          throw Error(e + " boolean expected, got " + t);
      }
      function c(e) {
        let t = e.toString(16);
        return 1 & t.length ? "0" + t : t;
      }
      function h(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        return "" === e ? l : BigInt("0x" + e);
      }
      function d(e) {
        return h((0, o.My)(e));
      }
      function p(e) {
        return (0, o.DO)(e), h((0, o.My)(Uint8Array.from(e).reverse()));
      }
      function y(e, t) {
        return (0, o.aT)(e.toString(16).padStart(2 * t, "0"));
      }
      function g(e, t) {
        return y(e, t).reverse();
      }
      function b(e, t, r) {
        let n;
        if ("string" == typeof t)
          try {
            n = (0, o.aT)(t);
          } catch (t) {
            throw Error(e + " must be hex string or Uint8Array, cause: " + t);
          }
        else if ((0, o.aY)(t)) n = Uint8Array.from(t);
        else throw Error(e + " must be hex string or Uint8Array");
        let i = n.length;
        if ("number" == typeof r && i !== r)
          throw Error(e + " of length " + r + " expected, got " + i);
        return n;
      }
      let m = (e) => "bigint" == typeof e && l <= e;
      function w(e, t, r) {
        return m(e) && m(t) && m(r) && t <= e && e < r;
      }
      function v(e, t, r, n) {
        if (!w(t, r, n))
          throw Error(
            "expected valid " + e + ": " + r + " <= n < " + n + ", got " + t
          );
      }
      function x(e) {
        let t;
        for (t = 0; e > l; e >>= f, t += 1);
        return t;
      }
      let E = (e) => (f << BigInt(e)) - f;
      function _(e, t, r = {}) {
        if (!e || "object" != typeof e)
          throw Error("expected valid options object");
        function n(t, r, n) {
          let i = e[t];
          if (n && void 0 === i) return;
          let o = typeof i;
          if (o !== r || null === i)
            throw Error(`param "${t}" is invalid: expected ${r}, got ${o}`);
        }
        Object.entries(t).forEach(([e, t]) => n(e, t, !1)),
          Object.entries(r).forEach(([e, t]) => n(e, t, !0));
      }
      function S(e) {
        let t = new WeakMap();
        return (r, ...n) => {
          let i = t.get(r);
          if (void 0 !== i) return i;
          let o = e(r, ...n);
          return t.set(r, o), o;
        };
      }
      let A = BigInt(0),
        B = BigInt(1),
        k = BigInt(2),
        O = BigInt(3),
        T = BigInt(4),
        I = BigInt(5),
        R = BigInt(7),
        M = BigInt(8),
        P = BigInt(9),
        C = BigInt(16);
      function U(e, t) {
        let r = e % t;
        return r >= A ? r : t + r;
      }
      function L(e, t, r) {
        let n = e;
        for (; t-- > A; ) (n *= n), (n %= r);
        return n;
      }
      function N(e, t) {
        if (e === A) throw Error("invert: expected non-zero number");
        if (t <= A) throw Error("invert: expected positive modulus, got " + t);
        let r = U(e, t),
          n = t,
          i = A,
          o = B,
          a = B,
          s = A;
        for (; r !== A; ) {
          let e = n / r,
            t = n % r,
            l = i - a * e,
            f = o - s * e;
          (n = r), (r = t), (i = a), (o = s), (a = l), (s = f);
        }
        if (n !== B) throw Error("invert: does not exist");
        return U(i, t);
      }
      function j(e, t, r) {
        if (!e.eql(e.sqr(t), r)) throw Error("Cannot find square root");
      }
      function H(e, t) {
        let r = (e.ORDER + B) / T,
          n = e.pow(t, r);
        return j(e, n, t), n;
      }
      function D(e, t) {
        let r = (e.ORDER - I) / M,
          n = e.mul(t, k),
          i = e.pow(n, r),
          o = e.mul(t, i),
          a = e.mul(e.mul(o, k), i),
          s = e.mul(o, e.sub(a, e.ONE));
        return j(e, s, t), s;
      }
      function F(e) {
        if (e < O) throw Error("sqrt is not defined for small field");
        let t = e - B,
          r = 0;
        for (; t % k === A; ) (t /= k), r++;
        let n = k,
          i = K(e);
        for (; 1 === z(i, n); )
          if (n++ > 1e3)
            throw Error("Cannot find square root: probably non-prime P");
        if (1 === r) return H;
        let o = i.pow(n, t),
          a = (t + B) / k;
        return function (e, n) {
          if (e.is0(n)) return n;
          if (1 !== z(e, n)) throw Error("Cannot find square root");
          let i = r,
            s = e.mul(e.ONE, o),
            l = e.pow(n, t),
            f = e.pow(n, a);
          for (; !e.eql(l, e.ONE); ) {
            if (e.is0(l)) return e.ZERO;
            let t = 1,
              r = e.sqr(l);
            for (; !e.eql(r, e.ONE); )
              if ((t++, (r = e.sqr(r)), t === i))
                throw Error("Cannot find square root");
            let n = B << BigInt(i - t - 1),
              o = e.pow(s, n);
            (i = t), (s = e.sqr(o)), (l = e.mul(l, s)), (f = e.mul(f, o));
          }
          return f;
        };
      }
      let $ = [
        "create",
        "isValid",
        "is0",
        "neg",
        "inv",
        "sqrt",
        "sqr",
        "eql",
        "add",
        "sub",
        "mul",
        "pow",
        "div",
        "addN",
        "subN",
        "mulN",
        "sqrN",
      ];
      function q(e, t, r = !1) {
        let n = Array(t.length).fill(r ? e.ZERO : void 0),
          i = t.reduce(
            (t, r, i) => (e.is0(r) ? t : ((n[i] = t), e.mul(t, r))),
            e.ONE
          ),
          o = e.inv(i);
        return (
          t.reduceRight(
            (t, r, i) =>
              e.is0(r) ? t : ((n[i] = e.mul(t, n[i])), e.mul(t, r)),
            o
          ),
          n
        );
      }
      function z(e, t) {
        let r = (e.ORDER - B) / k,
          n = e.pow(t, r),
          i = e.eql(n, e.ONE),
          o = e.eql(n, e.ZERO),
          a = e.eql(n, e.neg(e.ONE));
        if (!i && !o && !a) throw Error("invalid Legendre symbol result");
        return i ? 1 : o ? 0 : -1;
      }
      function K(e, t, r = !1, n = {}) {
        let i, a, s, l;
        if (e <= A) throw Error("invalid field: expected ORDER > 0, got " + e);
        let f = !1;
        if ("object" == typeof t && null != t) {
          if (n.sqrt || r) throw Error("cannot specify opts in two arguments");
          t.BITS && (a = t.BITS),
            t.sqrt && (s = t.sqrt),
            "boolean" == typeof t.isLE && (r = t.isLE),
            "boolean" == typeof t.modOnDecode && (f = t.modOnDecode),
            (l = t.allowedLengths);
        } else "number" == typeof t && (a = t), n.sqrt && (s = n.sqrt);
        let { nBitLength: u, nByteLength: c } = (function (e, t) {
          void 0 !== t && (0, o.Fe)(t);
          let r = void 0 !== t ? t : e.toString(2).length,
            n = Math.ceil(r / 8);
          return { nBitLength: r, nByteLength: n };
        })(e, a);
        if (c > 2048)
          throw Error("invalid field: expected ORDER of <= 2048 bytes");
        let h = Object.freeze({
          ORDER: e,
          isLE: r,
          BITS: u,
          BYTES: c,
          MASK: E(u),
          ZERO: A,
          ONE: B,
          allowedLengths: l,
          create: (t) => U(t, e),
          isValid: (t) => {
            if ("bigint" != typeof t)
              throw Error(
                "invalid field element: expected bigint, got " + typeof t
              );
            return A <= t && t < e;
          },
          is0: (e) => e === A,
          isValidNot0: (e) => !h.is0(e) && h.isValid(e),
          isOdd: (e) => (e & B) === B,
          neg: (t) => U(-t, e),
          eql: (e, t) => e === t,
          sqr: (t) => U(t * t, e),
          add: (t, r) => U(t + r, e),
          sub: (t, r) => U(t - r, e),
          mul: (t, r) => U(t * r, e),
          pow: (e, t) =>
            (function (e, t, r) {
              if (r < A) throw Error("invalid exponent, negatives unsupported");
              if (r === A) return e.ONE;
              if (r === B) return t;
              let n = e.ONE,
                i = t;
              for (; r > A; )
                r & B && (n = e.mul(n, i)), (i = e.sqr(i)), (r >>= B);
              return n;
            })(h, e, t),
          div: (t, r) => U(t * N(r, e), e),
          sqrN: (e) => e * e,
          addN: (e, t) => e + t,
          subN: (e, t) => e - t,
          mulN: (e, t) => e * t,
          inv: (t) => N(t, e),
          sqrt:
            s ||
            ((t) => {
              if (!i)
                i =
                  e % T === O
                    ? H
                    : e % M === I
                    ? D
                    : e % C === P
                    ? (function (e) {
                        let t = K(e),
                          r = F(e),
                          n = r(t, t.neg(t.ONE)),
                          i = r(t, n),
                          o = r(t, t.neg(n)),
                          a = (e + R) / C;
                        return (e, t) => {
                          let r = e.pow(t, a),
                            s = e.mul(r, n),
                            l = e.mul(r, i),
                            f = e.mul(r, o),
                            u = e.eql(e.sqr(s), t),
                            c = e.eql(e.sqr(l), t);
                          (r = e.cmov(r, s, u)), (s = e.cmov(f, l, c));
                          let h = e.eql(e.sqr(s), t),
                            d = e.cmov(r, s, h);
                          return j(e, d, t), d;
                        };
                      })(e)
                    : F(e);
              return i(h, t);
            }),
          toBytes: (e) => (r ? g(e, c) : y(e, c)),
          fromBytes: (t, n = !0) => {
            if (l) {
              if (!l.includes(t.length) || t.length > c)
                throw Error(
                  "Field.fromBytes: expected " + l + " bytes, got " + t.length
                );
              let e = new Uint8Array(c);
              e.set(t, r ? 0 : e.length - t.length), (t = e);
            }
            if (t.length !== c)
              throw Error(
                "Field.fromBytes: expected " + c + " bytes, got " + t.length
              );
            let i = r ? p(t) : d(t);
            if ((f && (i = U(i, e)), !n && !h.isValid(i)))
              throw Error("invalid field element: outside of range 0..ORDER");
            return i;
          },
          invertBatch: (e) => q(h, e),
          cmov: (e, t, r) => (r ? t : e),
        });
        return Object.freeze(h);
      }
      function Z(e) {
        if ("bigint" != typeof e) throw Error("field order must be bigint");
        return Math.ceil(e.toString(2).length / 8);
      }
      function V(e) {
        let t = Z(e);
        return t + Math.ceil(t / 2);
      }
      function G(e, t, r = !1) {
        let n = e.length,
          i = Z(t),
          o = V(t);
        if (n < 16 || n < o || n > 1024)
          throw Error("expected " + o + "-1024 bytes of input, got " + n);
        let a = U(r ? p(e) : d(e), t - B) + B;
        return r ? g(a, i) : y(a, i);
      }
      let W = BigInt(0),
        Y = BigInt(1);
      function X(e, t) {
        let r = t.negate();
        return e ? r : t;
      }
      function Q(e, t) {
        let r = q(
          e.Fp,
          t.map((e) => e.Z)
        );
        return t.map((t, n) => e.fromAffine(t.toAffine(r[n])));
      }
      function J(e, t) {
        if (!Number.isSafeInteger(e) || e <= 0 || e > t)
          throw Error(
            "invalid window size, expected [1.." + t + "], got W=" + e
          );
      }
      function ee(e, t) {
        J(e, t);
        let r = Math.ceil(t / e) + 1,
          n = 2 ** (e - 1),
          i = 2 ** e;
        return {
          windows: r,
          windowSize: n,
          mask: E(e),
          maxNumber: i,
          shiftBy: BigInt(e),
        };
      }
      function et(e, t, r) {
        let { windowSize: n, mask: i, maxNumber: o, shiftBy: a } = r,
          s = Number(e & i),
          l = e >> a;
        s > n && ((s -= o), (l += Y));
        let f = t * n,
          u = f + Math.abs(s) - 1,
          c = 0 === s;
        return {
          nextN: l,
          offset: u,
          isZero: c,
          isNeg: s < 0,
          isNegF: t % 2 != 0,
          offsetF: f,
        };
      }
      let er = new WeakMap(),
        en = new WeakMap();
      function ei(e) {
        return en.get(e) || 1;
      }
      function eo(e) {
        if (e !== W) throw Error("invalid wNAF");
      }
      class ea {
        constructor(e, t) {
          (this.BASE = e.BASE),
            (this.ZERO = e.ZERO),
            (this.Fn = e.Fn),
            (this.bits = t);
        }
        _unsafeLadder(e, t, r = this.ZERO) {
          let n = e;
          for (; t > W; ) t & Y && (r = r.add(n)), (n = n.double()), (t >>= Y);
          return r;
        }
        precomputeWindow(e, t) {
          let { windows: r, windowSize: n } = ee(t, this.bits),
            i = [],
            o = e,
            a = o;
          for (let e = 0; e < r; e++) {
            (a = o), i.push(a);
            for (let e = 1; e < n; e++) (a = a.add(o)), i.push(a);
            o = a.double();
          }
          return i;
        }
        wNAF(e, t, r) {
          if (!this.Fn.isValid(r)) throw Error("invalid scalar");
          let n = this.ZERO,
            i = this.BASE,
            o = ee(e, this.bits);
          for (let e = 0; e < o.windows; e++) {
            let {
              nextN: a,
              offset: s,
              isZero: l,
              isNeg: f,
              isNegF: u,
              offsetF: c,
            } = et(r, e, o);
            (r = a), l ? (i = i.add(X(u, t[c]))) : (n = n.add(X(f, t[s])));
          }
          return eo(r), { p: n, f: i };
        }
        wNAFUnsafe(e, t, r, n = this.ZERO) {
          let i = ee(e, this.bits);
          for (let e = 0; e < i.windows && r !== W; e++) {
            let { nextN: o, offset: a, isZero: s, isNeg: l } = et(r, e, i);
            if (((r = o), !s)) {
              let e = t[a];
              n = n.add(l ? e.negate() : e);
            }
          }
          return eo(r), n;
        }
        getPrecomputes(e, t, r) {
          let n = er.get(t);
          return (
            n ||
              ((n = this.precomputeWindow(t, e)),
              1 !== e && ("function" == typeof r && (n = r(n)), er.set(t, n))),
            n
          );
        }
        cached(e, t, r) {
          let n = ei(e);
          return this.wNAF(n, this.getPrecomputes(n, e, r), t);
        }
        unsafe(e, t, r, n) {
          let i = ei(e);
          return 1 === i
            ? this._unsafeLadder(e, t, n)
            : this.wNAFUnsafe(i, this.getPrecomputes(i, e, r), t, n);
        }
        createCache(e, t) {
          J(t, this.bits), en.set(e, t), er.delete(e);
        }
        hasCache(e) {
          return 1 !== ei(e);
        }
      }
      function es(e, t) {
        if (!t) return K(e);
        if (t.ORDER !== e)
          throw Error("Field.ORDER must match order: Fp == p, Fn == n");
        return (
          _(
            t,
            $.reduce((e, t) => ((e[t] = "function"), e), {
              ORDER: "bigint",
              MASK: "bigint",
              BYTES: "number",
              BITS: "number",
            })
          ),
          t
        );
      }
      let el = (e, t) => (e + (e >= 0 ? t : -t) / ep) / t;
      function ef(e) {
        void 0 !== e.lowS && u("lowS", e.lowS),
          void 0 !== e.prehash && u("prehash", e.prehash);
      }
      class eu extends Error {
        constructor(e = "") {
          super(e);
        }
      }
      let ec = {
          Err: eu,
          _tlv: {
            encode: (e, t) => {
              let { Err: r } = ec;
              if (e < 0 || e > 256) throw new r("tlv.encode: wrong tag");
              if (1 & t.length) throw new r("tlv.encode: unpadded data");
              let n = t.length / 2,
                i = c(n);
              if ((i.length / 2) & 128)
                throw new r("tlv.encode: long form length too big");
              let o = n > 127 ? c((i.length / 2) | 128) : "";
              return c(e) + o + i + t;
            },
            decode(e, t) {
              let { Err: r } = ec,
                n = 0;
              if (e < 0 || e > 256) throw new r("tlv.encode: wrong tag");
              if (t.length < 2 || t[n++] !== e)
                throw new r("tlv.decode: wrong tlv");
              let i = t[n++],
                o = 0;
              if (128 & i) {
                let e = 127 & i;
                if (!e)
                  throw new r(
                    "tlv.decode(long): indefinite length not supported"
                  );
                if (e > 4)
                  throw new r("tlv.decode(long): byte length is too big");
                let a = t.subarray(n, n + e);
                if (a.length !== e)
                  throw new r("tlv.decode: length bytes not complete");
                if (0 === a[0])
                  throw new r("tlv.decode(long): zero leftmost byte");
                for (let e of a) o = (o << 8) | e;
                if (((n += e), o < 128))
                  throw new r("tlv.decode(long): not minimal encoding");
              } else o = i;
              let a = t.subarray(n, n + o);
              if (a.length !== o) throw new r("tlv.decode: wrong value length");
              return { v: a, l: t.subarray(n + o) };
            },
          },
          _int: {
            encode(e) {
              let { Err: t } = ec;
              if (e < eh)
                throw new t("integer: negative integers are not allowed");
              let r = c(e);
              if (
                (8 & Number.parseInt(r[0], 16) && (r = "00" + r), 1 & r.length)
              )
                throw new t("unexpected DER parsing assertion: unpadded hex");
              return r;
            },
            decode(e) {
              let { Err: t } = ec;
              if (128 & e[0])
                throw new t("invalid signature integer: negative");
              if (0 === e[0] && !(128 & e[1]))
                throw new t(
                  "invalid signature integer: unnecessary leading zero"
                );
              return d(e);
            },
          },
          toSig(e) {
            let { Err: t, _int: r, _tlv: n } = ec,
              i = b("signature", e),
              { v: o, l: a } = n.decode(48, i);
            if (a.length)
              throw new t("invalid signature: left bytes after parsing");
            let { v: s, l: l } = n.decode(2, o),
              { v: f, l: u } = n.decode(2, l);
            if (u.length)
              throw new t("invalid signature: left bytes after parsing");
            return { r: r.decode(s), s: r.decode(f) };
          },
          hexFromSig(e) {
            let { _tlv: t, _int: r } = ec,
              n = t.encode(2, r.encode(e.r)),
              i = t.encode(2, r.encode(e.s));
            return t.encode(48, n + i);
          },
        },
        eh = BigInt(0),
        ed = BigInt(1),
        ep = BigInt(2),
        ey = BigInt(3),
        eg = BigInt(4);
      function eb(e, t) {
        let r;
        let { BYTES: n } = e;
        if ("bigint" == typeof t) r = t;
        else {
          let i = b("private key", t);
          try {
            r = e.fromBytes(i);
          } catch (e) {
            throw Error(
              `invalid private key: expected ui8a of size ${n}, got ${typeof t}`
            );
          }
        }
        if (!e.isValidNot0(r))
          throw Error("invalid private key: out of range [1..N-1]");
        return r;
      }
      function em(e) {
        return Uint8Array.of(e ? 2 : 3);
      }
      let ew = {
          p: BigInt(
            "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
          ),
          n: BigInt(
            "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
          ),
          h: BigInt(1),
          a: BigInt(0),
          b: BigInt(7),
          Gx: BigInt(
            "0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"
          ),
          Gy: BigInt(
            "0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"
          ),
        },
        ev = {
          beta: BigInt(
            "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
          ),
          basises: [
            [
              BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
              -BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
            ],
            [
              BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
              BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
            ],
          ],
        },
        ex = BigInt(0),
        eE = BigInt(1),
        e_ = BigInt(2);
      function eS(e) {
        let t = ew.p,
          r = BigInt(3),
          n = BigInt(6),
          i = BigInt(11),
          o = BigInt(22),
          a = BigInt(23),
          s = BigInt(44),
          l = BigInt(88),
          f = (e * e * e) % t,
          u = (f * f * e) % t,
          c = (L(u, r, t) * u) % t,
          h = (L(c, r, t) * u) % t,
          d = (L(h, e_, t) * f) % t,
          p = (L(d, i, t) * d) % t,
          y = (L(p, o, t) * p) % t,
          g = (L(y, s, t) * y) % t,
          b = (L(g, l, t) * g) % t,
          m = (L(b, s, t) * y) % t,
          w = (L(m, r, t) * u) % t,
          v = (L(w, a, t) * p) % t,
          x = (L(v, n, t) * f) % t,
          E = L(x, e_, t);
        if (!eA.eql(eA.sqr(E), e)) throw Error("Cannot find square root");
        return E;
      }
      let eA = K(ew.p, void 0, void 0, { sqrt: eS }),
        eB = (function (e, t) {
          let r = (t) =>
            (function (e) {
              let {
                  CURVE: t,
                  curveOpts: r,
                  hash: n,
                  ecdsaOpts: i,
                } = (function (e) {
                  let { CURVE: t, curveOpts: r } = (function (e) {
                      let t = {
                          a: e.a,
                          b: e.b,
                          p: e.Fp.ORDER,
                          n: e.n,
                          h: e.h,
                          Gx: e.Gx,
                          Gy: e.Gy,
                        },
                        r = e.Fp,
                        n = e.allowedPrivateKeyLengths
                          ? Array.from(
                              new Set(
                                e.allowedPrivateKeyLengths.map((e) =>
                                  Math.ceil(e / 2)
                                )
                              )
                            )
                          : void 0,
                        i = {
                          Fp: r,
                          Fn: K(t.n, {
                            BITS: e.nBitLength,
                            allowedLengths: n,
                            modOnDecode: e.wrapPrivateKey,
                          }),
                          allowInfinityPoint: e.allowInfinityPoint,
                          endo: e.endo,
                          isTorsionFree: e.isTorsionFree,
                          clearCofactor: e.clearCofactor,
                          fromBytes: e.fromBytes,
                          toBytes: e.toBytes,
                        };
                      return { CURVE: t, curveOpts: i };
                    })(e),
                    n = {
                      hmac: e.hmac,
                      randomBytes: e.randomBytes,
                      lowS: e.lowS,
                      bits2int: e.bits2int,
                      bits2int_modN: e.bits2int_modN,
                    };
                  return { CURVE: t, curveOpts: r, hash: e.hash, ecdsaOpts: n };
                })(e),
                a = (function (e, t, r = {}) {
                  (0, o.sd)(t),
                    _(
                      r,
                      {},
                      {
                        hmac: "function",
                        lowS: "boolean",
                        randomBytes: "function",
                        bits2int: "function",
                        bits2int_modN: "function",
                      }
                    );
                  let n = r.randomBytes || o.po,
                    i = r.hmac || ((e, ...r) => s(t, e, (0, o.Id)(...r))),
                    { Fp: a, Fn: l } = e,
                    { ORDER: f, BITS: u } = l,
                    c = V(f),
                    h = {
                      secret: l.BYTES,
                      public: 1 + a.BYTES,
                      publicUncompressed: 1 + 2 * a.BYTES,
                      signature: 2 * l.BYTES,
                      seed: c,
                    };
                  function p(e, t) {
                    if (!l.isValidNot0(t))
                      throw Error(
                        `invalid signature ${e}: out of range 1..CURVE.n`
                      );
                  }
                  class y {
                    constructor(e, t, r) {
                      p("r", e),
                        p("s", t),
                        (this.r = e),
                        (this.s = t),
                        null != r && (this.recovery = r),
                        Object.freeze(this);
                    }
                    static fromBytes(e, t = "compact") {
                      if ("compact" === t) {
                        let t = l.BYTES;
                        (0, o.DO)(e, 2 * t);
                        let r = e.subarray(0, t),
                          n = e.subarray(t, 2 * t);
                        return new y(l.fromBytes(r), l.fromBytes(n));
                      }
                      if ("der" === t) {
                        (0, o.DO)(e);
                        let { r: t, s: r } = ec.toSig(e);
                        return new y(t, r);
                      }
                      throw Error("invalid format");
                    }
                    static fromHex(e, t) {
                      return this.fromBytes((0, o.aT)(e), t);
                    }
                    addRecoveryBit(e) {
                      return new y(this.r, this.s, e);
                    }
                    recoverPublicKey(t) {
                      let r = a.ORDER,
                        { r: n, s: i, recovery: s } = this;
                      if (null == s || ![0, 1, 2, 3].includes(s))
                        throw Error("recovery id invalid");
                      if (f * ep < r && s > 1)
                        throw Error("recovery id is ambiguous for h>1 curve");
                      let u = 2 === s || 3 === s ? n + f : n;
                      if (!a.isValid(u))
                        throw Error("recovery id 2 or 3 invalid");
                      let c = a.toBytes(u),
                        h = e.fromHex((0, o.Id)(em((1 & s) == 0), c)),
                        d = l.inv(u),
                        p = B(b("msgHash", t)),
                        y = l.create(-p * d),
                        g = l.create(i * d),
                        m = e.BASE.multiplyUnsafe(y).add(h.multiplyUnsafe(g));
                      if (m.is0()) throw Error("point at infinify");
                      return m.assertValidity(), m;
                    }
                    hasHighS() {
                      return this.s > f >> ed;
                    }
                    normalizeS() {
                      return this.hasHighS()
                        ? new y(this.r, l.neg(this.s), this.recovery)
                        : this;
                    }
                    toBytes(e = "compact") {
                      if ("compact" === e)
                        return (0, o.Id)(l.toBytes(this.r), l.toBytes(this.s));
                      if ("der" === e) return (0, o.aT)(ec.hexFromSig(this));
                      throw Error("invalid format");
                    }
                    toHex(e) {
                      return (0, o.My)(this.toBytes(e));
                    }
                    assertValidity() {}
                    static fromCompact(e) {
                      return y.fromBytes(b("sig", e), "compact");
                    }
                    static fromDER(e) {
                      return y.fromBytes(b("sig", e), "der");
                    }
                    toDERRawBytes() {
                      return this.toBytes("der");
                    }
                    toDERHex() {
                      return (0, o.My)(this.toBytes("der"));
                    }
                    toCompactRawBytes() {
                      return this.toBytes("compact");
                    }
                    toCompactHex() {
                      return (0, o.My)(this.toBytes("compact"));
                    }
                  }
                  function g(e) {
                    try {
                      return !!eb(l, e);
                    } catch (e) {
                      return !1;
                    }
                  }
                  function m(e = n(c)) {
                    return G(e, f);
                  }
                  let w = {
                    isValidSecretKey: g,
                    isValidPublicKey: function (t, r) {
                      try {
                        let n = t.length;
                        if (
                          (!0 === r && n !== h.public) ||
                          (!1 === r && n !== h.publicUncompressed)
                        )
                          return !1;
                        return !!e.fromBytes(t);
                      } catch (e) {
                        return !1;
                      }
                    },
                    randomSecretKey: m,
                    isValidPrivateKey: g,
                    randomPrivateKey: m,
                    normPrivateKeyToScalar: (e) => eb(l, e),
                    precompute: (t = 8, r = e.BASE) => r.precompute(t, !1),
                  };
                  function x(t, r = !0) {
                    return e.BASE.multiply(eb(l, t)).toBytes(r);
                  }
                  function S(t) {
                    if ("bigint" == typeof t) return !1;
                    if (t instanceof e) return !0;
                    if (l.allowedLengths || h.secret === h.public) return;
                    let r = b("key", t).length;
                    return r === h.public || r === h.publicUncompressed;
                  }
                  let A =
                      r.bits2int ||
                      function (e) {
                        if (e.length > 8192) throw Error("input is too large");
                        let t = d(e),
                          r = 8 * e.length - u;
                        return r > 0 ? t >> BigInt(r) : t;
                      },
                    B =
                      r.bits2int_modN ||
                      function (e) {
                        return l.create(A(e));
                      },
                    k = E(u);
                  function O(e) {
                    return v("num < 2^" + u, e, eh, k), l.toBytes(e);
                  }
                  let T = { lowS: r.lowS, prehash: !1 },
                    I = { lowS: r.lowS, prehash: !1 };
                  return (
                    e.BASE.precompute(8),
                    Object.freeze({
                      keygen: function (e) {
                        let t = w.randomSecretKey(e);
                        return { secretKey: t, publicKey: x(t) };
                      },
                      getPublicKey: x,
                      sign: function (r, a, s = T) {
                        let { seed: u, k2sig: c } = (function (r, i, a = T) {
                          if (["recovered", "canonical"].some((e) => e in a))
                            throw Error("sign() legacy options not supported");
                          let { lowS: s, prehash: u, extraEntropy: c } = a;
                          null == s && (s = !0),
                            (r = b("msgHash", r)),
                            ef(a),
                            u && (r = b("prehashed msgHash", t(r)));
                          let d = B(r),
                            p = eb(l, i),
                            g = [O(p), O(d)];
                          if (null != c && !1 !== c) {
                            let e = !0 === c ? n(h.secret) : c;
                            g.push(b("extraEntropy", e));
                          }
                          return {
                            seed: (0, o.Id)(...g),
                            k2sig: function (t) {
                              let r = A(t);
                              if (!l.isValidNot0(r)) return;
                              let n = l.inv(r),
                                i = e.BASE.multiply(r).toAffine(),
                                o = l.create(i.x);
                              if (o === eh) return;
                              let a = l.create(n * l.create(d + o * p));
                              if (a === eh) return;
                              let u = (2 * (i.x !== o)) | Number(i.y & ed),
                                c = a;
                              if (s && a > f >> ed) {
                                var h;
                                (c = (h = a) > f >> ed ? l.neg(h) : h),
                                  (u ^= 1);
                              }
                              return new y(o, c, u);
                            },
                          };
                        })(r, a, s);
                        return (function (e, t, r) {
                          if ("number" != typeof e || e < 2)
                            throw Error("hashLen must be a number");
                          if ("number" != typeof t || t < 2)
                            throw Error("qByteLen must be a number");
                          if ("function" != typeof r)
                            throw Error("hmacFn must be a function");
                          let n = (e) => new Uint8Array(e),
                            i = (e) => Uint8Array.of(e),
                            a = n(e),
                            s = n(e),
                            l = 0,
                            f = () => {
                              a.fill(1), s.fill(0), (l = 0);
                            },
                            u = (...e) => r(s, a, ...e),
                            c = (e = n(0)) => {
                              (s = u(i(0), e)),
                                (a = u()),
                                0 !== e.length && ((s = u(i(1), e)), (a = u()));
                            },
                            h = () => {
                              if (l++ >= 1e3)
                                throw Error("drbg: tried 1000 values");
                              let e = 0,
                                r = [];
                              for (; e < t; ) {
                                let t = (a = u()).slice();
                                r.push(t), (e += a.length);
                              }
                              return (0, o.Id)(...r);
                            };
                          return (e, t) => {
                            let r;
                            for (f(), c(e); !(r = t(h())); ) c();
                            return f(), r;
                          };
                        })(
                          t.outputLen,
                          l.BYTES,
                          i
                        )(u, c);
                      },
                      verify: function (r, n, i, a = I) {
                        let s, f;
                        (n = b("msgHash", n)), (i = b("publicKey", i)), ef(a);
                        let { lowS: u, prehash: c, format: h } = a;
                        if ("strict" in a)
                          throw Error("options.strict was renamed to lowS");
                        if (void 0 === h) {
                          let e = "string" == typeof r || (0, o.aY)(r),
                            t =
                              !e &&
                              null !== r &&
                              "object" == typeof r &&
                              "bigint" == typeof r.r &&
                              "bigint" == typeof r.s;
                          if (!e && !t)
                            throw Error(
                              "invalid signature, expected Uint8Array, hex string or Signature instance"
                            );
                          if (t) f = new y(r.r, r.s);
                          else if (e) {
                            try {
                              f = y.fromDER(r);
                            } catch (e) {
                              if (!(e instanceof ec.Err)) throw e;
                            }
                            if (!f)
                              try {
                                f = y.fromCompact(r);
                              } catch (e) {
                                return !1;
                              }
                          }
                        } else if ("compact" === h || "der" === h) {
                          if ("string" != typeof r && !(0, o.aY)(r))
                            throw Error(
                              '"der" / "compact" format expects Uint8Array signature'
                            );
                          f = y.fromBytes(b("sig", r), h);
                        } else if ("js" === h) {
                          if (!(r instanceof y))
                            throw Error(
                              '"js" format expects Signature instance'
                            );
                          f = r;
                        } else
                          throw Error(
                            'format must be "compact", "der" or "js"'
                          );
                        if (!f) return !1;
                        try {
                          if (((s = e.fromHex(i)), u && f.hasHighS()))
                            return !1;
                          c && (n = t(n));
                          let { r, s: o } = f,
                            a = B(n),
                            h = l.inv(o),
                            d = l.create(a * h),
                            p = l.create(r * h),
                            y = e.BASE.multiplyUnsafe(d).add(
                              s.multiplyUnsafe(p)
                            );
                          if (y.is0()) return !1;
                          return l.create(y.x) === r;
                        } catch (e) {
                          return !1;
                        }
                      },
                      getSharedSecret: function (t, r, n = !0) {
                        if (!0 === S(t))
                          throw Error("first arg must be private key");
                        if (!1 === S(r))
                          throw Error("second arg must be public key");
                        let i = eb(l, t);
                        return e.fromHex(r).multiply(i).toBytes(n);
                      },
                      utils: w,
                      Point: e,
                      Signature: y,
                      info: {
                        type: "weierstrass",
                        lengths: h,
                        publicKeyHasPrefix: !0,
                      },
                    })
                  );
                })(
                  (function (e, t = {}) {
                    var r, n, i;
                    let { Fp: a, Fn: s } = (function (e, t, r = {}) {
                        if (!t || "object" != typeof t)
                          throw Error(`expected valid ${e} CURVE object`);
                        for (let e of ["p", "n", "h"]) {
                          let r = t[e];
                          if (!("bigint" == typeof r && r > W))
                            throw Error(`CURVE.${e} must be positive bigint`);
                        }
                        let n = es(t.p, r.Fp),
                          i = es(t.n, r.Fn);
                        for (let r of [
                          "Gx",
                          "Gy",
                          "a",
                          "weierstrass" === e ? "b" : "d",
                        ])
                          if (!n.isValid(t[r]))
                            throw Error(
                              `CURVE.${r} must be valid field element of CURVE.Fp`
                            );
                        return { Fp: n, Fn: i };
                      })("weierstrass", e, t),
                      { h: l, n: f } = e;
                    _(
                      t,
                      {},
                      {
                        allowInfinityPoint: "boolean",
                        clearCofactor: "function",
                        isTorsionFree: "function",
                        fromBytes: "function",
                        toBytes: "function",
                        endo: "object",
                        wrapPrivateKey: "boolean",
                      }
                    );
                    let { endo: c } = t;
                    if (
                      c &&
                      (!a.is0(e.a) ||
                        "bigint" != typeof c.beta ||
                        !Array.isArray(c.basises))
                    )
                      throw Error(
                        'invalid endo: expected "beta": bigint and "basises": array'
                      );
                    function h() {
                      if (!a.isOdd)
                        throw Error(
                          "compression is not supported: Field does not have .isOdd()"
                        );
                    }
                    let d =
                        t.toBytes ||
                        function (e, t, r) {
                          let { x: n, y: i } = t.toAffine(),
                            s = a.toBytes(n);
                          if ((u("isCompressed", r), !r))
                            return (0, o.Id)(Uint8Array.of(4), s, a.toBytes(i));
                          {
                            h();
                            let e = !a.isOdd(i);
                            return (0, o.Id)(em(e), s);
                          }
                        },
                      p =
                        t.fromBytes ||
                        function (e) {
                          (0, o.DO)(e);
                          let t = a.BYTES,
                            r = t + 1,
                            n = 2 * t + 1,
                            i = e.length,
                            s = e[0],
                            l = e.subarray(1);
                          if (i === r && (2 === s || 3 === s)) {
                            let e;
                            let t = a.fromBytes(l);
                            if (!a.isValid(t))
                              throw Error(
                                "bad point: is not on curve, wrong x"
                              );
                            let r = y(t);
                            try {
                              e = a.sqrt(r);
                            } catch (e) {
                              throw Error(
                                "bad point: is not on curve, sqrt error" +
                                  (e instanceof Error ? ": " + e.message : "")
                              );
                            }
                            return (
                              h(),
                              ((1 & s) == 1) !== a.isOdd(e) && (e = a.neg(e)),
                              { x: t, y: e }
                            );
                          }
                          if (i === n && 4 === s) {
                            let e = a.fromBytes(l.subarray(0 * t, +t)),
                              r = a.fromBytes(l.subarray(+t, 2 * t));
                            if (!g(e, r))
                              throw Error("bad point: is not on curve");
                            return { x: e, y: r };
                          }
                          throw Error(
                            `bad point: got length ${i}, expected compressed=${r} or uncompressed=${n}`
                          );
                        },
                      y =
                        ((r = a),
                        (n = e.a),
                        (i = e.b),
                        function (e) {
                          let t = r.sqr(e),
                            o = r.mul(t, e);
                          return r.add(r.add(o, r.mul(e, n)), i);
                        });
                    function g(e, t) {
                      let r = a.sqr(t),
                        n = y(e);
                      return a.eql(r, n);
                    }
                    if (!g(e.Gx, e.Gy))
                      throw Error("bad curve params: generator point");
                    let m = a.mul(a.pow(e.a, ey), eg),
                      w = a.mul(a.sqr(e.b), BigInt(27));
                    if (a.is0(a.add(m, w)))
                      throw Error("bad curve params: a or b");
                    function v(e, t, r = !1) {
                      if (!a.isValid(t) || (r && a.is0(t)))
                        throw Error(`bad point coordinate ${e}`);
                      return t;
                    }
                    function A(e) {
                      if (!(e instanceof I))
                        throw Error("ProjectivePoint expected");
                    }
                    function B(e) {
                      if (!c || !c.basises) throw Error("no endo");
                      return (function (e, t, r) {
                        let [[n, i], [o, a]] = t,
                          s = el(a * e, r),
                          l = el(-i * e, r),
                          f = e - s * n - l * o,
                          u = -s * i - l * a,
                          c = f < eh,
                          h = u < eh;
                        c && (f = -f), h && (u = -u);
                        let d = E(Math.ceil(x(r) / 2)) + ed;
                        if (f < eh || f >= d || u < eh || u >= d)
                          throw Error(
                            "splitScalar (endomorphism): failed, k=" + e
                          );
                        return { k1neg: c, k1: f, k2neg: h, k2: u };
                      })(e, c.basises, s.ORDER);
                    }
                    let k = S((e, t) => {
                        let { X: r, Y: n, Z: i } = e;
                        if (a.eql(i, a.ONE)) return { x: r, y: n };
                        let o = e.is0();
                        null == t && (t = o ? a.ONE : a.inv(i));
                        let s = a.mul(r, t),
                          l = a.mul(n, t),
                          f = a.mul(i, t);
                        if (o) return { x: a.ZERO, y: a.ZERO };
                        if (!a.eql(f, a.ONE)) throw Error("invZ was invalid");
                        return { x: s, y: l };
                      }),
                      O = S((e) => {
                        if (e.is0()) {
                          if (t.allowInfinityPoint && !a.is0(e.Y)) return;
                          throw Error("bad point: ZERO");
                        }
                        let { x: r, y: n } = e.toAffine();
                        if (!a.isValid(r) || !a.isValid(n))
                          throw Error("bad point: x or y not field elements");
                        if (!g(r, n))
                          throw Error("bad point: equation left != right");
                        if (!e.isTorsionFree())
                          throw Error("bad point: not in prime-order subgroup");
                        return !0;
                      });
                    function T(e, t, r, n, i) {
                      return (
                        (r = new I(a.mul(r.X, e), r.Y, r.Z)),
                        (t = X(n, t)),
                        (r = X(i, r)),
                        t.add(r)
                      );
                    }
                    class I {
                      constructor(e, t, r) {
                        (this.X = v("x", e)),
                          (this.Y = v("y", t, !0)),
                          (this.Z = v("z", r)),
                          Object.freeze(this);
                      }
                      static fromAffine(e) {
                        let { x: t, y: r } = e || {};
                        if (!e || !a.isValid(t) || !a.isValid(r))
                          throw Error("invalid affine point");
                        if (e instanceof I)
                          throw Error("projective point not allowed");
                        return a.is0(t) && a.is0(r)
                          ? I.ZERO
                          : new I(t, r, a.ONE);
                      }
                      get x() {
                        return this.toAffine().x;
                      }
                      get y() {
                        return this.toAffine().y;
                      }
                      get px() {
                        return this.X;
                      }
                      get py() {
                        return this.X;
                      }
                      get pz() {
                        return this.Z;
                      }
                      static normalizeZ(e) {
                        return Q(I, e);
                      }
                      static fromBytes(e) {
                        return (0, o.DO)(e), I.fromHex(e);
                      }
                      static fromHex(e) {
                        let t = I.fromAffine(p(b("pointHex", e)));
                        return t.assertValidity(), t;
                      }
                      static fromPrivateKey(e) {
                        return I.BASE.multiply(eb(s, e));
                      }
                      static msm(e, t) {
                        return (function (e, t, r, n) {
                          (function (e, t) {
                            if (!Array.isArray(e))
                              throw Error("array expected");
                            e.forEach((e, r) => {
                              if (!(e instanceof t))
                                throw Error("invalid point at index " + r);
                            });
                          })(r, e),
                            (function (e, t) {
                              if (!Array.isArray(e))
                                throw Error("array of scalars expected");
                              e.forEach((e, r) => {
                                if (!t.isValid(e))
                                  throw Error("invalid scalar at index " + r);
                              });
                            })(n, t);
                          let i = r.length,
                            o = n.length;
                          if (i !== o)
                            throw Error(
                              "arrays of points and scalars must have equal length"
                            );
                          let a = e.ZERO,
                            s = x(BigInt(i)),
                            l = 1;
                          s > 12
                            ? (l = s - 3)
                            : s > 4
                            ? (l = s - 2)
                            : s > 0 && (l = 2);
                          let f = E(l),
                            u = Array(Number(f) + 1).fill(a),
                            c = Math.floor((t.BITS - 1) / l) * l,
                            h = a;
                          for (let e = c; e >= 0; e -= l) {
                            u.fill(a);
                            for (let t = 0; t < o; t++) {
                              let i = Number((n[t] >> BigInt(e)) & f);
                              u[i] = u[i].add(r[t]);
                            }
                            let t = a;
                            for (let e = u.length - 1, r = a; e > 0; e--)
                              (r = r.add(u[e])), (t = t.add(r));
                            if (((h = h.add(t)), 0 !== e))
                              for (let e = 0; e < l; e++) h = h.double();
                          }
                          return h;
                        })(I, s, e, t);
                      }
                      _setWindowSize(e) {
                        this.precompute(e);
                      }
                      precompute(e = 8, t = !0) {
                        return (
                          M.createCache(this, e), t || this.multiply(ey), this
                        );
                      }
                      assertValidity() {
                        O(this);
                      }
                      hasEvenY() {
                        let { y: e } = this.toAffine();
                        if (!a.isOdd)
                          throw Error("Field doesn't support isOdd");
                        return !a.isOdd(e);
                      }
                      equals(e) {
                        A(e);
                        let { X: t, Y: r, Z: n } = this,
                          { X: i, Y: o, Z: s } = e,
                          l = a.eql(a.mul(t, s), a.mul(i, n)),
                          f = a.eql(a.mul(r, s), a.mul(o, n));
                        return l && f;
                      }
                      negate() {
                        return new I(this.X, a.neg(this.Y), this.Z);
                      }
                      double() {
                        let { a: t, b: r } = e,
                          n = a.mul(r, ey),
                          { X: i, Y: o, Z: s } = this,
                          l = a.ZERO,
                          f = a.ZERO,
                          u = a.ZERO,
                          c = a.mul(i, i),
                          h = a.mul(o, o),
                          d = a.mul(s, s),
                          p = a.mul(i, o);
                        return (
                          (p = a.add(p, p)),
                          (u = a.mul(i, s)),
                          (u = a.add(u, u)),
                          (l = a.mul(t, u)),
                          (f = a.mul(n, d)),
                          (f = a.add(l, f)),
                          (l = a.sub(h, f)),
                          (f = a.add(h, f)),
                          (f = a.mul(l, f)),
                          (l = a.mul(p, l)),
                          (u = a.mul(n, u)),
                          (d = a.mul(t, d)),
                          (p = a.sub(c, d)),
                          (p = a.mul(t, p)),
                          (p = a.add(p, u)),
                          (u = a.add(c, c)),
                          (c = a.add(u, c)),
                          (c = a.add(c, d)),
                          (c = a.mul(c, p)),
                          (f = a.add(f, c)),
                          (d = a.mul(o, s)),
                          (d = a.add(d, d)),
                          (c = a.mul(d, p)),
                          (l = a.sub(l, c)),
                          (u = a.mul(d, h)),
                          (u = a.add(u, u)),
                          new I(l, f, (u = a.add(u, u)))
                        );
                      }
                      add(t) {
                        A(t);
                        let { X: r, Y: n, Z: i } = this,
                          { X: o, Y: s, Z: l } = t,
                          f = a.ZERO,
                          u = a.ZERO,
                          c = a.ZERO,
                          h = e.a,
                          d = a.mul(e.b, ey),
                          p = a.mul(r, o),
                          y = a.mul(n, s),
                          g = a.mul(i, l),
                          b = a.add(r, n),
                          m = a.add(o, s);
                        (b = a.mul(b, m)),
                          (m = a.add(p, y)),
                          (b = a.sub(b, m)),
                          (m = a.add(r, i));
                        let w = a.add(o, l);
                        return (
                          (m = a.mul(m, w)),
                          (w = a.add(p, g)),
                          (m = a.sub(m, w)),
                          (w = a.add(n, i)),
                          (f = a.add(s, l)),
                          (w = a.mul(w, f)),
                          (f = a.add(y, g)),
                          (w = a.sub(w, f)),
                          (c = a.mul(h, m)),
                          (f = a.mul(d, g)),
                          (c = a.add(f, c)),
                          (f = a.sub(y, c)),
                          (c = a.add(y, c)),
                          (u = a.mul(f, c)),
                          (y = a.add(p, p)),
                          (y = a.add(y, p)),
                          (g = a.mul(h, g)),
                          (m = a.mul(d, m)),
                          (y = a.add(y, g)),
                          (g = a.sub(p, g)),
                          (g = a.mul(h, g)),
                          (m = a.add(m, g)),
                          (p = a.mul(y, m)),
                          (u = a.add(u, p)),
                          (p = a.mul(w, m)),
                          (f = a.mul(b, f)),
                          (f = a.sub(f, p)),
                          (p = a.mul(b, y)),
                          (c = a.mul(w, c)),
                          new I(f, u, (c = a.add(c, p)))
                        );
                      }
                      subtract(e) {
                        return this.add(e.negate());
                      }
                      is0() {
                        return this.equals(I.ZERO);
                      }
                      multiply(e) {
                        let r, n;
                        let { endo: i } = t;
                        if (!s.isValidNot0(e))
                          throw Error("invalid scalar: out of range");
                        let o = (e) => M.cached(this, e, (e) => Q(I, e));
                        if (i) {
                          let { k1neg: t, k1: a, k2neg: s, k2: l } = B(e),
                            { p: f, f: u } = o(a),
                            { p: c, f: h } = o(l);
                          (n = u.add(h)), (r = T(i.beta, f, c, t, s));
                        } else {
                          let { p: t, f: i } = o(e);
                          (r = t), (n = i);
                        }
                        return Q(I, [r, n])[0];
                      }
                      multiplyUnsafe(e) {
                        let { endo: r } = t;
                        if (!s.isValid(e))
                          throw Error("invalid scalar: out of range");
                        if (e === eh || this.is0()) return I.ZERO;
                        if (e === ed) return this;
                        if (M.hasCache(this)) return this.multiply(e);
                        if (!r) return M.unsafe(this, e);
                        {
                          let { k1neg: t, k1: n, k2neg: i, k2: o } = B(e),
                            { p1: a, p2: s } = (function (e, t, r, n) {
                              let i = t,
                                o = e.ZERO,
                                a = e.ZERO;
                              for (; r > W || n > W; )
                                r & Y && (o = o.add(i)),
                                  n & Y && (a = a.add(i)),
                                  (i = i.double()),
                                  (r >>= Y),
                                  (n >>= Y);
                              return { p1: o, p2: a };
                            })(I, this, n, o);
                          return T(r.beta, a, s, t, i);
                        }
                      }
                      multiplyAndAddUnsafe(e, t, r) {
                        let n = this.multiplyUnsafe(t).add(e.multiplyUnsafe(r));
                        return n.is0() ? void 0 : n;
                      }
                      toAffine(e) {
                        return k(this, e);
                      }
                      isTorsionFree() {
                        let { isTorsionFree: e } = t;
                        return (
                          l === ed || (e ? e(I, this) : M.unsafe(this, f).is0())
                        );
                      }
                      clearCofactor() {
                        let { clearCofactor: e } = t;
                        return l === ed
                          ? this
                          : e
                          ? e(I, this)
                          : this.multiplyUnsafe(l);
                      }
                      isSmallOrder() {
                        return this.multiplyUnsafe(l).is0();
                      }
                      toBytes(e = !0) {
                        return (
                          u("isCompressed", e),
                          this.assertValidity(),
                          d(I, this, e)
                        );
                      }
                      toRawBytes(e = !0) {
                        return this.toBytes(e);
                      }
                      toHex(e = !0) {
                        return (0, o.My)(this.toBytes(e));
                      }
                      toString() {
                        return `<Point ${this.is0() ? "ZERO" : this.toHex()}>`;
                      }
                    }
                    (I.BASE = new I(e.Gx, e.Gy, a.ONE)),
                      (I.ZERO = new I(a.ZERO, a.ONE, a.ZERO)),
                      (I.Fp = a),
                      (I.Fn = s);
                    let R = s.BITS,
                      M = new ea(I, t.endo ? Math.ceil(R / 2) : R);
                    return I;
                  })(t, r),
                  n,
                  i
                );
              return Object.assign({}, a, {
                ProjectivePoint: a.Point,
                CURVE: e,
              });
            })({ ...e, hash: t });
          return { ...r(t), create: r };
        })({ ...ew, Fp: eA, lowS: !0, endo: ev }, i.sc),
        ek = {};
      function eO(e, ...t) {
        let r = ek[e];
        if (void 0 === r) {
          let t = (0, i.sc)(Uint8Array.from(e, (e) => e.charCodeAt(0)));
          (r = (0, o.Id)(t, t)), (ek[e] = r);
        }
        return (0, i.sc)((0, o.Id)(r, ...t));
      }
      let eT = (e) => e.toBytes(!0).slice(1),
        eI = (e) => y(e, 32),
        eR = (e) => U(e, ew.p),
        eM = (e) => U(e, ew.n),
        eP = eB.Point,
        eC = (e) => e % e_ === ex;
      function eU(e) {
        let t = eb(eP.Fn, e),
          r = eP.BASE.multiply(t);
        return { scalar: eC(r.y) ? t : eM(-t), bytes: eT(r) };
      }
      function eL(e) {
        v("x", e, eE, ew.p);
        let t = eR(e * e),
          r = eS(eR(t * e + BigInt(7)));
        eC(r) || (r = eR(-r));
        let n = eP.fromAffine({ x: e, y: r });
        return n.assertValidity(), n;
      }
      function eN(...e) {
        return eM(d(eO("BIP0340/challenge", ...e)));
      }
      function ej(e) {
        return eU(e).bytes;
      }
      function eH(e, t, r = (0, o.po)(32)) {
        let n = b("message", e),
          { bytes: i, scalar: a } = eU(t),
          s = eI(a ^ d(eO("BIP0340/aux", b("auxRand", r, 32)))),
          l = eM(d(eO("BIP0340/nonce", s, i, n)));
        if (l === ex) throw Error("sign failed: k is zero");
        let { bytes: f, scalar: u } = eU(l),
          c = eN(f, i, n),
          h = new Uint8Array(64);
        if ((h.set(f, 0), h.set(eI(eM(u + c * a)), 32), !eD(h, n, i)))
          throw Error("sign: Invalid signature produced");
        return h;
      }
      function eD(e, t, r) {
        let n = b("signature", e, 64),
          i = b("message", t),
          o = b("publicKey", r, 32);
        try {
          let e = eL(d(o)),
            t = d(n.subarray(0, 32));
          if (!w(t, eE, ew.p)) return !1;
          let r = d(n.subarray(32, 64));
          if (!w(r, eE, ew.n)) return !1;
          let a = eN(eI(t), eT(e), i),
            s = eP.BASE.multiplyUnsafe(r).add(e.multiplyUnsafe(eM(-a))),
            { x: l, y: f } = s.toAffine();
          if (s.is0() || !eC(f) || l !== t) return !1;
          return !0;
        } catch (e) {
          return !1;
        }
      }
      let eF = (() => {
        let e = 48,
          t = (t = (0, o.po)(e)) => G(t, ew.n);
        return (
          eB.utils.randomSecretKey,
          {
            keygen: function (e) {
              let r = t(e);
              return { secretKey: r, publicKey: ej(r) };
            },
            getPublicKey: ej,
            sign: eH,
            verify: eD,
            Point: eP,
            utils: {
              randomSecretKey: t,
              randomPrivateKey: t,
              taggedHash: eO,
              lift_x: eL,
              pointToBytes: eT,
              numberToBytesBE: y,
              bytesToNumberBE: d,
              mod: U,
            },
            info: {
              type: "weierstrass",
              publicKeyHasPrefix: !1,
              lengths: { secret: 32, public: 32, signature: 64, seed: e },
            },
          }
        );
      })();
      var e$ = r(52344);
      let eq = Uint32Array.from([
        0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,
      ]);
      e$.ol, e$.ol;
      let ez = Uint8Array.from([
          7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
        ]),
        eK = Uint8Array.from(
          Array(16)
            .fill(0)
            .map((e, t) => t)
        ),
        eZ = eK.map((e) => (9 * e + 5) % 16),
        eV = (() => {
          let e = [[eK], [eZ]];
          for (let t = 0; t < 4; t++)
            for (let r of e) r.push(r[t].map((e) => ez[e]));
          return e;
        })(),
        eG = eV[0],
        eW = eV[1],
        eY = [
          [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
          [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
          [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
          [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
          [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
        ].map((e) => Uint8Array.from(e)),
        eX = eG.map((e, t) => e.map((e) => eY[t][e])),
        eQ = eW.map((e, t) => e.map((e) => eY[t][e])),
        eJ = Uint32Array.from([
          0, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,
        ]),
        e0 = Uint32Array.from([
          0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0,
        ]);
      function e1(e, t, r, n) {
        return 0 === e
          ? t ^ r ^ n
          : 1 === e
          ? (t & r) | (~t & n)
          : 2 === e
          ? (t | ~r) ^ n
          : 3 === e
          ? (t & n) | (r & ~n)
          : t ^ (r | ~n);
      }
      let e2 = new Uint32Array(16);
      class e3 extends e$.ol {
        constructor() {
          super(64, 20, 8, !0),
            (this.h0 = 0x67452301),
            (this.h1 = -0x10325477),
            (this.h2 = -0x67452302),
            (this.h3 = 0x10325476),
            (this.h4 = -0x3c2d1e10);
        }
        get() {
          let { h0: e, h1: t, h2: r, h3: n, h4: i } = this;
          return [e, t, r, n, i];
        }
        set(e, t, r, n, i) {
          (this.h0 = 0 | e),
            (this.h1 = 0 | t),
            (this.h2 = 0 | r),
            (this.h3 = 0 | n),
            (this.h4 = 0 | i);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) e2[r] = e.getUint32(t, !0);
          let r = 0 | this.h0,
            n = r,
            i = 0 | this.h1,
            a = i,
            s = 0 | this.h2,
            l = s,
            f = 0 | this.h3,
            u = f,
            c = 0 | this.h4,
            h = c;
          for (let e = 0; e < 5; e++) {
            let t = 4 - e,
              d = eJ[e],
              p = e0[e],
              y = eG[e],
              g = eW[e],
              b = eX[e],
              m = eQ[e];
            for (let t = 0; t < 16; t++) {
              let n =
                ((0, o.aZ)(r + e1(e, i, s, f) + e2[y[t]] + d, b[t]) + c) | 0;
              (r = c), (c = f), (f = 0 | (0, o.aZ)(s, 10)), (s = i), (i = n);
            }
            for (let e = 0; e < 16; e++) {
              let r =
                ((0, o.aZ)(n + e1(t, a, l, u) + e2[g[e]] + p, m[e]) + h) | 0;
              (n = h), (h = u), (u = 0 | (0, o.aZ)(l, 10)), (l = a), (a = r);
            }
          }
          this.set(
            (this.h1 + s + u) | 0,
            (this.h2 + f + h) | 0,
            (this.h3 + c + n) | 0,
            (this.h4 + r + a) | 0,
            (this.h0 + i + l) | 0
          );
        }
        roundClean() {
          (0, o.uH)(e2);
        }
        destroy() {
          (this.destroyed = !0),
            (0, o.uH)(this.buffer),
            this.set(0, 0, 0, 0, 0);
        }
      }
      let e6 = (0, o.qj)(() => new e3());
      var e8 = r(3098);
      let e5 = eB.ProjectivePoint,
        e4 = eB.CURVE.n,
        e7 = e8.Wp.isBytes,
        e9 = e8.Wp.concatBytes,
        te = e8.Wp.equalBytes,
        tt = (e) => e6((0, i.sc)(e)),
        tr = (...e) => (0, i.sc)((0, i.sc)(e9(...e)));
      eF.utils.randomPrivateKey;
      let tn = eF.getPublicKey,
        ti = eB.getPublicKey,
        to = (e) => e.r < e4 / 2n;
      function ta(e, t, r = !1) {
        let n = eB.sign(e, t);
        if (r && !to(n)) {
          let r = new Uint8Array(32),
            i = 0;
          for (; !to(n); )
            if (
              (r.set(e8.QK.encode(i++)),
              (n = eB.sign(e, t, { extraEntropy: r })),
              i > 0xffffffff)
            )
              throw Error("lowR counter overflow: report the error");
        }
        return n.toDERRawBytes();
      }
      let ts = eF.sign,
        tl = eF.utils.taggedHash;
      function tf(e, t) {
        let r = e.length;
        if (t === n.ecdsa) {
          if (32 === r) throw Error("Expected non-Schnorr key");
          return e5.fromHex(e), e;
        }
        if (t === n.schnorr) {
          if (32 !== r) throw Error("Expected 32-byte Schnorr key");
          return eF.utils.lift_x(eF.utils.bytesToNumberBE(e)), e;
        }
        throw Error("Unknown key type");
      }
      function tu(e, t) {
        let r = eF.utils,
          n = r.taggedHash("TapTweak", e, t),
          i = r.bytesToNumberBE(n);
        if (i >= e4) throw Error("tweak higher than curve order");
        return i;
      }
      function tc(e, t = Uint8Array.of()) {
        let r = eF.utils,
          n = r.bytesToNumberBE(e),
          i = e5.fromPrivateKey(n),
          o = i.hasEvenY() ? n : r.mod(-n, e4),
          a = tu(r.pointToBytes(i), t);
        return r.numberToBytesBE(r.mod(o + a, e4), 32);
      }
      function th(e, t) {
        let r = eF.utils,
          n = tu(e, t),
          i = r.lift_x(r.bytesToNumberBE(e)).add(e5.fromPrivateKey(n)),
          o = +!i.hasEvenY();
        return [r.pointToBytes(i), o];
      }
      !(function (e) {
        (e[(e.ecdsa = 0)] = "ecdsa"), (e[(e.schnorr = 1)] = "schnorr");
      })(n || (n = {}));
      let td = (0, i.sc)(e5.BASE.toRawBytes(!1)),
        tp = { bech32: "bc", pubKeyHash: 0, scriptHash: 5, wif: 128 };
      function ty(e, t) {
        if (!e7(e) || !e7(t))
          throw Error(`cmp: wrong type a=${typeof e} b=${typeof t}`);
        let r = Math.min(e.length, t.length);
        for (let n = 0; n < r; n++)
          if (e[n] != t[n]) return Math.sign(e[n] - t[n]);
        return Math.sign(e.length - t.length);
      }
    },
    34116: (e, t) => {
      "use strict";
      function r(e) {
        if (!Number.isSafeInteger(e) || e < 0)
          throw Error(`positive integer expected, not ${e}`);
      }
      function n(e) {
        if ("boolean" != typeof e) throw Error(`boolean expected, not ${e}`);
      }
      function i(e) {
        return (
          e instanceof Uint8Array ||
          (null != e &&
            "object" == typeof e &&
            "Uint8Array" === e.constructor.name)
        );
      }
      function o(e, ...t) {
        if (!i(e)) throw Error("Uint8Array expected");
        if (t.length > 0 && !t.includes(e.length))
          throw Error(
            `Uint8Array expected of length ${t}, not of length=${e.length}`
          );
      }
      function a(e) {
        if ("function" != typeof e || "function" != typeof e.create)
          throw Error("Hash should be wrapped by utils.wrapConstructor");
        r(e.outputLen), r(e.blockLen);
      }
      function s(e, t = !0) {
        if (e.destroyed) throw Error("Hash instance has been destroyed");
        if (t && e.finished)
          throw Error("Hash#digest() has already been called");
      }
      function l(e, t) {
        o(e);
        let r = t.outputLen;
        if (e.length < r)
          throw Error(
            `digestInto() expects output buffer of length at least ${r}`
          );
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.output =
          t.exists =
          t.hash =
          t.bytes =
          t.bool =
          t.number =
          t.isBytes =
            void 0),
        (t.number = r),
        (t.bool = n),
        (t.isBytes = i),
        (t.bytes = o),
        (t.hash = a),
        (t.exists = s),
        (t.output = l),
        (t.default = {
          number: r,
          bool: n,
          bytes: o,
          hash: a,
          exists: s,
          output: l,
        });
    },
    36100: (e, t, r) => {
      "use strict";
      r.d(t, { Z: () => n });
      let n = (0, r(12644).x)({
        id: 59140,
        name: "Linea Goerli Testnet",
        nativeCurrency: { name: "Linea Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: {
          default: {
            http: ["https://rpc.goerli.linea.build"],
            webSocket: ["wss://rpc.goerli.linea.build"],
          },
        },
        blockExplorers: {
          default: {
            name: "Etherscan",
            url: "https://goerli.lineascan.build",
            apiUrl: "https://goerli.lineascan.build/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 498623,
          },
        },
        testnet: !0,
      });
    },
    39069: function (e, t, r) {
      "use strict";
      e = r.nmd(e);
      var n =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.crypto =
          t.utf8ToBytes =
          t.createView =
          t.concatBytes =
          t.toHex =
          t.bytesToHex =
          t.assertBytes =
          t.assertBool =
            void 0),
        (t.bytesToUtf8 = function (e) {
          if (!(e instanceof Uint8Array))
            throw TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof e}`);
          return new TextDecoder().decode(e);
        }),
        (t.hexToBytes = function (e) {
          let t = e.startsWith("0x") ? e.substring(2) : e;
          return (0, o.hexToBytes)(t);
        }),
        (t.equalsBytes = function (e, t) {
          if (e.length !== t.length) return !1;
          for (let r = 0; r < e.length; r++) if (e[r] !== t[r]) return !1;
          return !0;
        }),
        (t.wrapHash = function (e) {
          return (t) => (i.default.bytes(t), e(t));
        });
      let i = n(r(34116)),
        o = r(15906);
      (t.assertBool = i.default.bool), (t.assertBytes = i.default.bytes);
      var a = r(15906);
      Object.defineProperty(t, "bytesToHex", {
        enumerable: !0,
        get: function () {
          return a.bytesToHex;
        },
      }),
        Object.defineProperty(t, "toHex", {
          enumerable: !0,
          get: function () {
            return a.bytesToHex;
          },
        }),
        Object.defineProperty(t, "concatBytes", {
          enumerable: !0,
          get: function () {
            return a.concatBytes;
          },
        }),
        Object.defineProperty(t, "createView", {
          enumerable: !0,
          get: function () {
            return a.createView;
          },
        }),
        Object.defineProperty(t, "utf8ToBytes", {
          enumerable: !0,
          get: function () {
            return a.utf8ToBytes;
          },
        }),
        (t.crypto = (() => {
          let t =
              "object" == typeof globalThis && "crypto" in globalThis
                ? globalThis.crypto
                : void 0,
            r = "function" == typeof e.require && e.require.bind(e);
          return { node: r && !t ? r("crypto") : void 0, web: t };
        })());
    },
    39726: (e, t, r) => {
      "use strict";
      r.d(t, { F: () => n });
      let n = (0, r(12644).x)({
        id: 42,
        network: "lukso",
        name: "LUKSO",
        nativeCurrency: { name: "LUKSO", symbol: "LYX", decimals: 18 },
        rpcUrls: {
          default: {
            http: ["https://rpc.mainnet.lukso.network"],
            webSocket: ["wss://ws-rpc.mainnet.lukso.network"],
          },
        },
        blockExplorers: {
          default: {
            name: "LUKSO Mainnet Explorer",
            url: "https://explorer.execution.mainnet.lukso.network",
            apiUrl: "https://api.explorer.execution.mainnet.lukso.network/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 468183,
          },
        },
      });
    },
    40252: (e, t, r) => {
      !(function () {
        var t = {
            452: function (e) {
              "use strict";
              e.exports = r(70954);
            },
          },
          n = {};
        function i(e) {
          var r = n[e];
          if (void 0 !== r) return r.exports;
          var o = (n[e] = { exports: {} }),
            a = !0;
          try {
            t[e](o, o.exports, i), (a = !1);
          } finally {
            a && delete n[e];
          }
          return o.exports;
        }
        i.ab = "//";
        var o = {};
        !(function () {
          var e,
            t =
              (e = i(452)) && "object" == typeof e && "default" in e
                ? e.default
                : e,
            r = /https?|ftp|gopher|file/;
          function n(e) {
            "string" == typeof e && (e = b(e));
            var n,
              i,
              o,
              a,
              s,
              l,
              f,
              u,
              c,
              h =
                ((i = (n = e).auth),
                (o = n.hostname),
                (a = n.protocol || ""),
                (s = n.pathname || ""),
                (l = n.hash || ""),
                (f = n.query || ""),
                (u = !1),
                (i = i ? encodeURIComponent(i).replace(/%3A/i, ":") + "@" : ""),
                n.host
                  ? (u = i + n.host)
                  : o &&
                    ((u = i + (~o.indexOf(":") ? "[" + o + "]" : o)),
                    n.port && (u += ":" + n.port)),
                f && "object" == typeof f && (f = t.encode(f)),
                (c = n.search || (f && "?" + f) || ""),
                a && ":" !== a.substr(-1) && (a += ":"),
                n.slashes || ((!a || r.test(a)) && !1 !== u)
                  ? ((u = "//" + (u || "")), s && "/" !== s[0] && (s = "/" + s))
                  : u || (u = ""),
                l && "#" !== l[0] && (l = "#" + l),
                c && "?" !== c[0] && (c = "?" + c),
                {
                  protocol: a,
                  host: u,
                  pathname: (s = s.replace(/[?#]/g, encodeURIComponent)),
                  search: (c = c.replace("#", "%23")),
                  hash: l,
                });
            return "" + h.protocol + h.host + h.pathname + h.search + h.hash;
          }
          var a = "http://",
            s = a + "w.w",
            l = /^([a-z0-9.+-]*:\/\/\/)([a-z0-9.+-]:\/*)?/i,
            f = /https?|ftp|gopher|file/;
          function u(e, t) {
            var r = "string" == typeof e ? b(e) : e;
            e = "object" == typeof e ? n(e) : e;
            var i = b(t),
              o = "";
            r.protocol &&
              !r.slashes &&
              ((o = r.protocol),
              (e = e.replace(r.protocol, "")),
              (o += "/" === t[0] || "/" === e[0] ? "/" : "")),
              o &&
                i.protocol &&
                ((o = ""),
                i.slashes ||
                  ((o = i.protocol), (t = t.replace(i.protocol, ""))));
            var u = e.match(l);
            u &&
              !i.protocol &&
              ((e = e.substr((o = u[1] + (u[2] || "")).length)),
              /^\/\/[^/]/.test(t) && (o = o.slice(0, -1)));
            var c = new URL(e, s + "/"),
              h = new URL(t, c).toString().replace(s, ""),
              d = i.protocol || r.protocol;
            return (
              (d += r.slashes || i.slashes ? "//" : ""),
              !o && d ? (h = h.replace(a, d)) : o && (h = h.replace(a, "")),
              f.test(h) ||
                ~t.indexOf(".") ||
                "/" === e.slice(-1) ||
                "/" === t.slice(-1) ||
                "/" !== h.slice(-1) ||
                (h = h.slice(0, -1)),
              o && (h = o + ("/" === h[0] ? h.substr(1) : h)),
              h
            );
          }
          function c() {}
          (c.prototype.parse = b),
            (c.prototype.format = n),
            (c.prototype.resolve = u),
            (c.prototype.resolveObject = u);
          var h = /^https?|ftp|gopher|file/,
            d = /^(.*?)([#?].*)/,
            p = /^([a-z0-9.+-]*:)(\/{0,3})(.*)/i,
            y = /^([a-z0-9.+-]*:)?\/\/\/*/i,
            g = /^([a-z0-9.+-]*:)(\/{0,2})\[(.*)\]$/i;
          function b(e, r, i) {
            if (
              (void 0 === r && (r = !1),
              void 0 === i && (i = !1),
              e && "object" == typeof e && e instanceof c)
            )
              return e;
            var o = (e = e.trim()).match(d);
            (e = o ? o[1].replace(/\\/g, "/") + o[2] : e.replace(/\\/g, "/")),
              g.test(e) && "/" !== e.slice(-1) && (e += "/");
            var a = !/(^javascript)/.test(e) && e.match(p),
              l = y.test(e),
              f = "";
            a &&
              (h.test(a[1]) ||
                ((f = a[1].toLowerCase()), (e = "" + a[2] + a[3])),
              a[2] ||
                ((l = !1),
                h.test(a[1])
                  ? ((f = a[1]), (e = "" + a[3]))
                  : (e = "//" + a[3])),
              (3 !== a[2].length && 1 !== a[2].length) ||
                ((f = a[1]), (e = "/" + a[3])));
            var u,
              b = (o ? o[1] : e).match(/^https?:\/\/[^/]+(:[0-9]+)(?=\/|$)/),
              m = b && b[1],
              w = new c(),
              v = "",
              x = "";
            try {
              u = new URL(e);
            } catch (t) {
              (v = t),
                f ||
                  i ||
                  !/^\/\//.test(e) ||
                  /^\/\/.+[@.]/.test(e) ||
                  ((x = "/"), (e = e.substr(1)));
              try {
                u = new URL(e, s);
              } catch (e) {
                return (w.protocol = f), (w.href = f), w;
              }
            }
            (w.slashes = l && !x),
              (w.host = "w.w" === u.host ? "" : u.host),
              (w.hostname =
                "w.w" === u.hostname ? "" : u.hostname.replace(/(\[|\])/g, "")),
              (w.protocol = v ? f || null : u.protocol),
              (w.search = u.search.replace(/\\/g, "%5C")),
              (w.hash = u.hash.replace(/\\/g, "%5C"));
            var E = e.split("#");
            !w.search && ~E[0].indexOf("?") && (w.search = "?"),
              w.hash || "" !== E[1] || (w.hash = "#"),
              (w.query = r ? t.decode(u.search.substr(1)) : w.search.substr(1)),
              (w.pathname =
                x +
                (a
                  ? u.pathname
                      .replace(/['^|`]/g, function (e) {
                        return "%" + e.charCodeAt().toString(16).toUpperCase();
                      })
                      .replace(/((?:%[0-9A-F]{2})+)/g, function (e, t) {
                        try {
                          return decodeURIComponent(t)
                            .split("")
                            .map(function (e) {
                              var t = e.charCodeAt();
                              return t > 256 || /^[a-z0-9]$/i.test(e)
                                ? e
                                : "%" + t.toString(16).toUpperCase();
                            })
                            .join("");
                        } catch (e) {
                          return t;
                        }
                      })
                  : u.pathname)),
              "about:" === w.protocol &&
                "blank" === w.pathname &&
                ((w.protocol = ""), (w.pathname = "")),
              v && "/" !== e[0] && (w.pathname = w.pathname.substr(1)),
              f &&
                !h.test(f) &&
                "/" !== e.slice(-1) &&
                "/" === w.pathname &&
                (w.pathname = ""),
              (w.path = w.pathname + w.search),
              (w.auth = [u.username, u.password]
                .map(decodeURIComponent)
                .filter(Boolean)
                .join(":")),
              (w.port = u.port),
              m &&
                !w.host.endsWith(m) &&
                ((w.host += m), (w.port = m.slice(1))),
              (w.href = x ? "" + w.pathname + w.search + w.hash : n(w));
            var _ = /^(file)/.test(w.href) ? ["host", "hostname"] : [];
            return (
              Object.keys(w).forEach(function (e) {
                ~_.indexOf(e) || (w[e] = w[e] || null);
              }),
              w
            );
          }
          (o.parse = b),
            (o.format = n),
            (o.resolve = u),
            (o.resolveObject = function (e, t) {
              return b(u(e, t));
            }),
            (o.Url = c);
        })(),
          (e.exports = o);
      })();
    },
    40851: function (e, t, r) {
      "use strict";
      var n =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, n) {
                void 0 === n && (n = r);
                var i = Object.getOwnPropertyDescriptor(t, r);
                (!i ||
                  ("get" in i
                    ? !t.__esModule
                    : i.writable || i.configurable)) &&
                  (i = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    },
                  }),
                  Object.defineProperty(e, n, i);
              }
            : function (e, t, r, n) {
                void 0 === n && (n = r), (e[n] = t[r]);
              }),
        i =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e)
              "default" === r ||
                Object.prototype.hasOwnProperty.call(t, r) ||
                n(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.normalize = t.concatSig = void 0),
        i(r(29969), t),
        i(r(72608), t),
        i(r(79376), t);
      var o = r(91262);
      Object.defineProperty(t, "concatSig", {
        enumerable: !0,
        get: function () {
          return o.concatSig;
        },
      }),
        Object.defineProperty(t, "normalize", {
          enumerable: !0,
          get: function () {
            return o.normalize;
          },
        });
    },
    42913: (e, t, r) => {
      "use strict";
      r.d(t, { G: () => n });
      let n = (0, r(12644).x)({
        id: 0xaa36a7,
        name: "Sepolia",
        nativeCurrency: { name: "Sepolia Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://sepolia.drpc.org"] } },
        blockExplorers: {
          default: {
            name: "Etherscan",
            url: "https://sepolia.etherscan.io",
            apiUrl: "https://api-sepolia.etherscan.io/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 751532,
          },
          ensRegistry: {
            address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
          },
          ensUniversalResolver: {
            address: "0xc8Af999e38273D658BE1b921b88A9Ddf005769cC",
            blockCreated: 5317080,
          },
        },
        testnet: !0,
      });
    },
    43118: function (e, t, r) {
      "use strict";
      var n =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, n) {
                void 0 === n && (n = r);
                var i = Object.getOwnPropertyDescriptor(t, r);
                (!i ||
                  ("get" in i
                    ? !t.__esModule
                    : i.writable || i.configurable)) &&
                  (i = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    },
                  }),
                  Object.defineProperty(e, n, i);
              }
            : function (e, t, r, n) {
                void 0 === n && (n = r), (e[n] = t[r]);
              }),
        i =
          (this && this.__exportStar) ||
          function (e, t) {
            for (var r in e)
              "default" === r ||
                Object.prototype.hasOwnProperty.call(t, r) ||
                n(t, e, r);
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.toAscii =
          t.stripHexPrefix =
          t.padToEven =
          t.isHexString =
          t.isHexPrefixed =
          t.getKeys =
          t.getBinarySize =
          t.fromUtf8 =
          t.fromAscii =
          t.arrayContainsArray =
            void 0),
        i(r(93263), t),
        i(r(52577), t),
        i(r(81713), t),
        i(r(46066), t),
        i(r(25929), t),
        i(r(81844), t),
        i(r(50797), t),
        i(r(83059), t),
        i(r(71364), t),
        i(r(66020), t);
      var o = r(61363);
      Object.defineProperty(t, "arrayContainsArray", {
        enumerable: !0,
        get: function () {
          return o.arrayContainsArray;
        },
      }),
        Object.defineProperty(t, "fromAscii", {
          enumerable: !0,
          get: function () {
            return o.fromAscii;
          },
        }),
        Object.defineProperty(t, "fromUtf8", {
          enumerable: !0,
          get: function () {
            return o.fromUtf8;
          },
        }),
        Object.defineProperty(t, "getBinarySize", {
          enumerable: !0,
          get: function () {
            return o.getBinarySize;
          },
        }),
        Object.defineProperty(t, "getKeys", {
          enumerable: !0,
          get: function () {
            return o.getKeys;
          },
        }),
        Object.defineProperty(t, "isHexPrefixed", {
          enumerable: !0,
          get: function () {
            return o.isHexPrefixed;
          },
        }),
        Object.defineProperty(t, "isHexString", {
          enumerable: !0,
          get: function () {
            return o.isHexString;
          },
        }),
        Object.defineProperty(t, "padToEven", {
          enumerable: !0,
          get: function () {
            return o.padToEven;
          },
        }),
        Object.defineProperty(t, "stripHexPrefix", {
          enumerable: !0,
          get: function () {
            return o.stripHexPrefix;
          },
        }),
        Object.defineProperty(t, "toAscii", {
          enumerable: !0,
          get: function () {
            return o.toAscii;
          },
        }),
        i(r(98417), t),
        i(r(68599), t);
    },
    44073: (e, t, r) => {
      "use strict";
      r.d(t, { E: () => n });
      let n = (0, r(12644).x)({
        id: 80001,
        name: "Polygon Mumbai",
        nativeCurrency: { name: "MATIC", symbol: "MATIC", decimals: 18 },
        rpcUrls: { default: { http: ["https://80001.rpc.thirdweb.com"] } },
        blockExplorers: {
          default: {
            name: "PolygonScan",
            url: "https://mumbai.polygonscan.com",
            apiUrl: "https://api-testnet.polygonscan.com/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 0x18938b0,
          },
        },
        testnet: !0,
      });
    },
    45949: (e, t, r) => {
      "use strict";
      r.d(t, { m: () => n });
      let n = (0, r(12644).x)({
        id: 43114,
        name: "Avalanche",
        nativeCurrency: { decimals: 18, name: "Avalanche", symbol: "AVAX" },
        rpcUrls: {
          default: { http: ["https://api.avax.network/ext/bc/C/rpc"] },
        },
        blockExplorers: {
          default: {
            name: "SnowTrace",
            url: "https://snowtrace.io",
            apiUrl: "https://api.snowtrace.io",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 0xb5b35e,
          },
        },
      });
    },
    46066: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.Address = void 0);
      let i = r(81713),
        o = r(50797);
      class a {
        constructor(e) {
          if (20 !== e.length) throw Error("Invalid address length");
          this.buf = e;
        }
        static zero() {
          return new a((0, o.zeros)(20));
        }
        static fromString(e) {
          if (!(0, i.isValidAddress)(e)) throw Error("Invalid address");
          return new a((0, o.toBuffer)(e));
        }
        static fromPublicKey(e) {
          if (!n.isBuffer(e)) throw Error("Public key should be Buffer");
          return new a((0, i.pubToAddress)(e));
        }
        static fromPrivateKey(e) {
          if (!n.isBuffer(e)) throw Error("Private key should be Buffer");
          return new a((0, i.privateToAddress)(e));
        }
        static generate(e, t) {
          if ("bigint" != typeof t)
            throw Error("Expected nonce to be a bigint");
          return new a((0, i.generateAddress)(e.buf, (0, o.bigIntToBuffer)(t)));
        }
        static generate2(e, t, r) {
          if (!n.isBuffer(t)) throw Error("Expected salt to be a Buffer");
          if (!n.isBuffer(r)) throw Error("Expected initCode to be a Buffer");
          return new a((0, i.generateAddress2)(e.buf, t, r));
        }
        equals(e) {
          return this.buf.equals(e.buf);
        }
        isZero() {
          return this.equals(a.zero());
        }
        isPrecompileOrSystemAddress() {
          let e = (0, o.bufferToBigInt)(this.buf),
            t = BigInt(0),
            r = BigInt("0xffff");
          return e >= t && e <= r;
        }
        toString() {
          return "0x" + this.buf.toString("hex");
        }
        toBuffer() {
          return n.from(this.buf);
        }
      }
      t.Address = a;
    },
    46616: (e, t, r) => {
      "use strict";
      r.d(t, { p: () => i });
      var n = r(20237);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 44787,
        name: "Alfajores",
        nativeCurrency: { decimals: 18, name: "CELO", symbol: "A-CELO" },
        rpcUrls: {
          default: { http: ["https://alfajores-forno.celo-testnet.org"] },
        },
        blockExplorers: {
          default: {
            name: "Celo Alfajores Explorer",
            url: "https://celo-alfajores.blockscout.com",
            apiUrl: "https://celo-alfajores.blockscout.com/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 0xde4e29,
          },
          portal: {
            17e3: {
              address: "0x82527353927d8D069b3B452904c942dA149BA381",
              blockCreated: 2411324,
            },
          },
          disputeGameFactory: {
            17e3: {
              address: "0xE28AAdcd9883746c0e5068F58f9ea06027b214cb",
              blockCreated: 2411324,
            },
          },
          l2OutputOracle: {
            17e3: {
              address: "0x4a2635e9e4f6e45817b1D402ac4904c1d1752438",
              blockCreated: 2411324,
            },
          },
          l1StandardBridge: {
            17e3: {
              address: "0xD1B0E0581973c9eB7f886967A606b9441A897037",
              blockCreated: 2411324,
            },
          },
        },
        testnet: !0,
      });
    },
    47744: (e, t, r) => {
      var n = r(29143),
        i = r(51642).Buffer;
      !(function () {
        var t = {
            523: function (e) {
              e.exports = {
                100: "Continue",
                101: "Switching Protocols",
                102: "Processing",
                200: "OK",
                201: "Created",
                202: "Accepted",
                203: "Non-Authoritative Information",
                204: "No Content",
                205: "Reset Content",
                206: "Partial Content",
                207: "Multi-Status",
                208: "Already Reported",
                226: "IM Used",
                300: "Multiple Choices",
                301: "Moved Permanently",
                302: "Found",
                303: "See Other",
                304: "Not Modified",
                305: "Use Proxy",
                307: "Temporary Redirect",
                308: "Permanent Redirect",
                400: "Bad Request",
                401: "Unauthorized",
                402: "Payment Required",
                403: "Forbidden",
                404: "Not Found",
                405: "Method Not Allowed",
                406: "Not Acceptable",
                407: "Proxy Authentication Required",
                408: "Request Timeout",
                409: "Conflict",
                410: "Gone",
                411: "Length Required",
                412: "Precondition Failed",
                413: "Payload Too Large",
                414: "URI Too Long",
                415: "Unsupported Media Type",
                416: "Range Not Satisfiable",
                417: "Expectation Failed",
                418: "I'm a teapot",
                421: "Misdirected Request",
                422: "Unprocessable Entity",
                423: "Locked",
                424: "Failed Dependency",
                425: "Unordered Collection",
                426: "Upgrade Required",
                428: "Precondition Required",
                429: "Too Many Requests",
                431: "Request Header Fields Too Large",
                451: "Unavailable For Legal Reasons",
                500: "Internal Server Error",
                501: "Not Implemented",
                502: "Bad Gateway",
                503: "Service Unavailable",
                504: "Gateway Timeout",
                505: "HTTP Version Not Supported",
                506: "Variant Also Negotiates",
                507: "Insufficient Storage",
                508: "Loop Detected",
                509: "Bandwidth Limit Exceeded",
                510: "Not Extended",
                511: "Network Authentication Required",
              };
            },
            782: function (e) {
              "function" == typeof Object.create
                ? (e.exports = function (e, t) {
                    t &&
                      ((e.super_ = t),
                      (e.prototype = Object.create(t.prototype, {
                        constructor: {
                          value: e,
                          enumerable: !1,
                          writable: !0,
                          configurable: !0,
                        },
                      })));
                  })
                : (e.exports = function (e, t) {
                    if (t) {
                      e.super_ = t;
                      var r = function () {};
                      (r.prototype = t.prototype),
                        (e.prototype = new r()),
                        (e.prototype.constructor = e);
                    }
                  });
            },
            646: function (e) {
              "use strict";
              let t = {};
              function r(e, r, n) {
                n || (n = Error);
                class i extends n {
                  constructor(e, t, n) {
                    super("string" == typeof r ? r : r(e, t, n));
                  }
                }
                (i.prototype.name = n.name), (i.prototype.code = e), (t[e] = i);
              }
              function n(e, t) {
                if (!Array.isArray(e)) return `of ${t} ${String(e)}`;
                {
                  let r = e.length;
                  return ((e = e.map((e) => String(e))), r > 2)
                    ? `one of ${t} ${e.slice(0, r - 1).join(", ")}, or ` +
                        e[r - 1]
                    : 2 === r
                    ? `one of ${t} ${e[0]} or ${e[1]}`
                    : `of ${t} ${e[0]}`;
                }
              }
              r(
                "ERR_INVALID_OPT_VALUE",
                function (e, t) {
                  return (
                    'The value "' + t + '" is invalid for option "' + e + '"'
                  );
                },
                TypeError
              ),
                r(
                  "ERR_INVALID_ARG_TYPE",
                  function (e, t, r) {
                    var i, o, a, s;
                    let l, f;
                    if (
                      ("string" == typeof t &&
                      ((i = "not "), t.substr(0, i.length) === i)
                        ? ((l = "must not be"), (t = t.replace(/^not /, "")))
                        : (l = "must be"),
                      (o = " argument"),
                      (void 0 === a || a > e.length) && (a = e.length),
                      e.substring(a - o.length, a) === o)
                    )
                      f = `The ${e} ${l} ${n(t, "type")}`;
                    else {
                      let r = ("number" != typeof s && (s = 0),
                      s + 1 > e.length || -1 === e.indexOf(".", s))
                        ? "argument"
                        : "property";
                      f = `The "${e}" ${r} ${l} ${n(t, "type")}`;
                    }
                    return f + `. Received type ${typeof r}`;
                  },
                  TypeError
                ),
                r("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
                r("ERR_METHOD_NOT_IMPLEMENTED", function (e) {
                  return "The " + e + " method is not implemented";
                }),
                r("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
                r("ERR_STREAM_DESTROYED", function (e) {
                  return "Cannot call " + e + " after a stream was destroyed";
                }),
                r("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
                r("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
                r("ERR_STREAM_WRITE_AFTER_END", "write after end"),
                r(
                  "ERR_STREAM_NULL_VALUES",
                  "May not write null values to stream",
                  TypeError
                ),
                r(
                  "ERR_UNKNOWN_ENCODING",
                  function (e) {
                    return "Unknown encoding: " + e;
                  },
                  TypeError
                ),
                r(
                  "ERR_STREAM_UNSHIFT_AFTER_END_EVENT",
                  "stream.unshift() after end event"
                ),
                (e.exports.q = t);
            },
            403: function (e, t, r) {
              "use strict";
              var i =
                Object.keys ||
                function (e) {
                  var t = [];
                  for (var r in e) t.push(r);
                  return t;
                };
              e.exports = u;
              var o = r(709),
                a = r(337);
              r(782)(u, o);
              for (var s = i(a.prototype), l = 0; l < s.length; l++) {
                var f = s[l];
                u.prototype[f] || (u.prototype[f] = a.prototype[f]);
              }
              function u(e) {
                if (!(this instanceof u)) return new u(e);
                o.call(this, e),
                  a.call(this, e),
                  (this.allowHalfOpen = !0),
                  e &&
                    (!1 === e.readable && (this.readable = !1),
                    !1 === e.writable && (this.writable = !1),
                    !1 === e.allowHalfOpen &&
                      ((this.allowHalfOpen = !1), this.once("end", c)));
              }
              function c() {
                this._writableState.ended || n.nextTick(h, this);
              }
              function h(e) {
                e.end();
              }
              Object.defineProperty(u.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function () {
                  return this._writableState.highWaterMark;
                },
              }),
                Object.defineProperty(u.prototype, "writableBuffer", {
                  enumerable: !1,
                  get: function () {
                    return (
                      this._writableState && this._writableState.getBuffer()
                    );
                  },
                }),
                Object.defineProperty(u.prototype, "writableLength", {
                  enumerable: !1,
                  get: function () {
                    return this._writableState.length;
                  },
                }),
                Object.defineProperty(u.prototype, "destroyed", {
                  enumerable: !1,
                  get: function () {
                    return (
                      void 0 !== this._readableState &&
                      void 0 !== this._writableState &&
                      this._readableState.destroyed &&
                      this._writableState.destroyed
                    );
                  },
                  set: function (e) {
                    void 0 !== this._readableState &&
                      void 0 !== this._writableState &&
                      ((this._readableState.destroyed = e),
                      (this._writableState.destroyed = e));
                  },
                });
            },
            889: function (e, t, r) {
              "use strict";
              e.exports = i;
              var n = r(170);
              function i(e) {
                if (!(this instanceof i)) return new i(e);
                n.call(this, e);
              }
              r(782)(i, n),
                (i.prototype._transform = function (e, t, r) {
                  r(null, e);
                });
            },
            709: function (e, t, i) {
              "use strict";
              (e.exports = B), (B.ReadableState = A), i(361).EventEmitter;
              var o,
                a,
                s,
                l,
                f,
                u = function (e, t) {
                  return e.listeners(t).length;
                },
                c = i(678),
                h = i(300).Buffer,
                d = r.g.Uint8Array || function () {},
                p = i(837);
              a = p && p.debuglog ? p.debuglog("stream") : function () {};
              var y = i(379),
                g = i(25),
                b = i(776).getHighWaterMark,
                m = i(646).q,
                w = m.ERR_INVALID_ARG_TYPE,
                v = m.ERR_STREAM_PUSH_AFTER_EOF,
                x = m.ERR_METHOD_NOT_IMPLEMENTED,
                E = m.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
              i(782)(B, c);
              var _ = g.errorOrDestroy,
                S = ["error", "close", "destroy", "pause", "resume"];
              function A(e, t, r) {
                (o = o || i(403)),
                  (e = e || {}),
                  "boolean" != typeof r && (r = t instanceof o),
                  (this.objectMode = !!e.objectMode),
                  r &&
                    (this.objectMode =
                      this.objectMode || !!e.readableObjectMode),
                  (this.highWaterMark = b(this, e, "readableHighWaterMark", r)),
                  (this.buffer = new y()),
                  (this.length = 0),
                  (this.pipes = null),
                  (this.pipesCount = 0),
                  (this.flowing = null),
                  (this.ended = !1),
                  (this.endEmitted = !1),
                  (this.reading = !1),
                  (this.sync = !0),
                  (this.needReadable = !1),
                  (this.emittedReadable = !1),
                  (this.readableListening = !1),
                  (this.resumeScheduled = !1),
                  (this.paused = !0),
                  (this.emitClose = !1 !== e.emitClose),
                  (this.autoDestroy = !!e.autoDestroy),
                  (this.destroyed = !1),
                  (this.defaultEncoding = e.defaultEncoding || "utf8"),
                  (this.awaitDrain = 0),
                  (this.readingMore = !1),
                  (this.decoder = null),
                  (this.encoding = null),
                  e.encoding &&
                    (s || (s = i(704).s),
                    (this.decoder = new s(e.encoding)),
                    (this.encoding = e.encoding));
              }
              function B(e) {
                if (((o = o || i(403)), !(this instanceof B))) return new B(e);
                var t = this instanceof o;
                (this._readableState = new A(e, this, t)),
                  (this.readable = !0),
                  e &&
                    ("function" == typeof e.read && (this._read = e.read),
                    "function" == typeof e.destroy &&
                      (this._destroy = e.destroy)),
                  c.call(this);
              }
              function k(e, t, r, n, i) {
                a("readableAddChunk", t);
                var o,
                  s,
                  l = e._readableState;
                if (null === t)
                  (l.reading = !1),
                    (function (e, t) {
                      if ((a("onEofChunk"), !t.ended)) {
                        if (t.decoder) {
                          var r = t.decoder.end();
                          r &&
                            r.length &&
                            (t.buffer.push(r),
                            (t.length += t.objectMode ? 1 : r.length));
                        }
                        (t.ended = !0),
                          t.sync
                            ? I(e)
                            : ((t.needReadable = !1),
                              t.emittedReadable ||
                                ((t.emittedReadable = !0), R(e)));
                      }
                    })(e, l);
                else if (
                  (i ||
                    (s = (function (e, t) {
                      var r;
                      return (
                        !h.isBuffer(t) &&
                          !(t instanceof d) &&
                          "string" != typeof t &&
                          void 0 !== t &&
                          !e.objectMode &&
                          (r = new w(
                            "chunk",
                            ["string", "Buffer", "Uint8Array"],
                            t
                          )),
                        r
                      );
                    })(l, t)),
                  s)
                )
                  _(e, s);
                else if (l.objectMode || (t && t.length > 0)) {
                  if (
                    ("string" != typeof t &&
                      !l.objectMode &&
                      Object.getPrototypeOf(t) !== h.prototype &&
                      ((o = t), (t = h.from(o))),
                    n)
                  )
                    l.endEmitted ? _(e, new E()) : O(e, l, t, !0);
                  else if (l.ended) _(e, new v());
                  else {
                    if (l.destroyed) return !1;
                    (l.reading = !1),
                      l.decoder && !r
                        ? ((t = l.decoder.write(t)),
                          l.objectMode || 0 !== t.length
                            ? O(e, l, t, !1)
                            : M(e, l))
                        : O(e, l, t, !1);
                  }
                } else n || ((l.reading = !1), M(e, l));
                return (
                  !l.ended && (l.length < l.highWaterMark || 0 === l.length)
                );
              }
              function O(e, t, r, n) {
                t.flowing && 0 === t.length && !t.sync
                  ? ((t.awaitDrain = 0), e.emit("data", r))
                  : ((t.length += t.objectMode ? 1 : r.length),
                    n ? t.buffer.unshift(r) : t.buffer.push(r),
                    t.needReadable && I(e)),
                  M(e, t);
              }
              function T(e, t) {
                if (e <= 0 || (0 === t.length && t.ended)) return 0;
                if (t.objectMode) return 1;
                if (e != e)
                  return t.flowing && t.length
                    ? t.buffer.head.data.length
                    : t.length;
                if (e > t.highWaterMark) {
                  var r;
                  (r = e) >= 0x40000000
                    ? (r = 0x40000000)
                    : (r--,
                      (r |= r >>> 1),
                      (r |= r >>> 2),
                      (r |= r >>> 4),
                      (r |= r >>> 8),
                      (r |= r >>> 16),
                      r++),
                    (t.highWaterMark = r);
                }
                return e <= t.length
                  ? e
                  : t.ended
                  ? t.length
                  : ((t.needReadable = !0), 0);
              }
              function I(e) {
                var t = e._readableState;
                a("emitReadable", t.needReadable, t.emittedReadable),
                  (t.needReadable = !1),
                  t.emittedReadable ||
                    (a("emitReadable", t.flowing),
                    (t.emittedReadable = !0),
                    n.nextTick(R, e));
              }
              function R(e) {
                var t = e._readableState;
                a("emitReadable_", t.destroyed, t.length, t.ended),
                  !t.destroyed &&
                    (t.length || t.ended) &&
                    (e.emit("readable"), (t.emittedReadable = !1)),
                  (t.needReadable =
                    !t.flowing && !t.ended && t.length <= t.highWaterMark),
                  N(e);
              }
              function M(e, t) {
                t.readingMore || ((t.readingMore = !0), n.nextTick(P, e, t));
              }
              function P(e, t) {
                for (
                  ;
                  !t.reading &&
                  !t.ended &&
                  (t.length < t.highWaterMark || (t.flowing && 0 === t.length));

                ) {
                  var r = t.length;
                  if ((a("maybeReadMore read 0"), e.read(0), r === t.length))
                    break;
                }
                t.readingMore = !1;
              }
              function C(e) {
                var t = e._readableState;
                (t.readableListening = e.listenerCount("readable") > 0),
                  t.resumeScheduled && !t.paused
                    ? (t.flowing = !0)
                    : e.listenerCount("data") > 0 && e.resume();
              }
              function U(e) {
                a("readable nexttick read 0"), e.read(0);
              }
              function L(e, t) {
                a("resume", t.reading),
                  t.reading || e.read(0),
                  (t.resumeScheduled = !1),
                  e.emit("resume"),
                  N(e),
                  t.flowing && !t.reading && e.read(0);
              }
              function N(e) {
                var t = e._readableState;
                for (a("flow", t.flowing); t.flowing && null !== e.read(); );
              }
              function j(e, t) {
                var r;
                return 0 === t.length
                  ? null
                  : (t.objectMode
                      ? (r = t.buffer.shift())
                      : !e || e >= t.length
                      ? ((r = t.decoder
                          ? t.buffer.join("")
                          : 1 === t.buffer.length
                          ? t.buffer.first()
                          : t.buffer.concat(t.length)),
                        t.buffer.clear())
                      : (r = t.buffer.consume(e, t.decoder)),
                    r);
              }
              function H(e) {
                var t = e._readableState;
                a("endReadable", t.endEmitted),
                  t.endEmitted || ((t.ended = !0), n.nextTick(D, t, e));
              }
              function D(e, t) {
                if (
                  (a("endReadableNT", e.endEmitted, e.length),
                  !e.endEmitted &&
                    0 === e.length &&
                    ((e.endEmitted = !0),
                    (t.readable = !1),
                    t.emit("end"),
                    e.autoDestroy))
                ) {
                  var r = t._writableState;
                  (!r || (r.autoDestroy && r.finished)) && t.destroy();
                }
              }
              function F(e, t) {
                for (var r = 0, n = e.length; r < n; r++)
                  if (e[r] === t) return r;
                return -1;
              }
              Object.defineProperty(B.prototype, "destroyed", {
                enumerable: !1,
                get: function () {
                  return (
                    void 0 !== this._readableState &&
                    this._readableState.destroyed
                  );
                },
                set: function (e) {
                  this._readableState && (this._readableState.destroyed = e);
                },
              }),
                (B.prototype.destroy = g.destroy),
                (B.prototype._undestroy = g.undestroy),
                (B.prototype._destroy = function (e, t) {
                  t(e);
                }),
                (B.prototype.push = function (e, t) {
                  var r,
                    n = this._readableState;
                  return (
                    n.objectMode
                      ? (r = !0)
                      : "string" == typeof e &&
                        ((t = t || n.defaultEncoding) !== n.encoding &&
                          ((e = h.from(e, t)), (t = "")),
                        (r = !0)),
                    k(this, e, t, !1, r)
                  );
                }),
                (B.prototype.unshift = function (e) {
                  return k(this, e, null, !0, !1);
                }),
                (B.prototype.isPaused = function () {
                  return !1 === this._readableState.flowing;
                }),
                (B.prototype.setEncoding = function (e) {
                  s || (s = i(704).s);
                  var t = new s(e);
                  (this._readableState.decoder = t),
                    (this._readableState.encoding =
                      this._readableState.decoder.encoding);
                  for (
                    var r = this._readableState.buffer.head, n = "";
                    null !== r;

                  )
                    (n += t.write(r.data)), (r = r.next);
                  return (
                    this._readableState.buffer.clear(),
                    "" !== n && this._readableState.buffer.push(n),
                    (this._readableState.length = n.length),
                    this
                  );
                }),
                (B.prototype.read = function (e) {
                  a("read", e), (e = parseInt(e, 10));
                  var t,
                    r = this._readableState,
                    n = e;
                  if (
                    (0 !== e && (r.emittedReadable = !1),
                    0 === e &&
                      r.needReadable &&
                      ((0 !== r.highWaterMark
                        ? r.length >= r.highWaterMark
                        : r.length > 0) ||
                        r.ended))
                  )
                    return (
                      a("read: emitReadable", r.length, r.ended),
                      0 === r.length && r.ended ? H(this) : I(this),
                      null
                    );
                  if (0 === (e = T(e, r)) && r.ended)
                    return 0 === r.length && H(this), null;
                  var i = r.needReadable;
                  return (
                    a("need readable", i),
                    (0 === r.length || r.length - e < r.highWaterMark) &&
                      a("length less than watermark", (i = !0)),
                    r.ended || r.reading
                      ? a("reading or ended", (i = !1))
                      : i &&
                        (a("do read"),
                        (r.reading = !0),
                        (r.sync = !0),
                        0 === r.length && (r.needReadable = !0),
                        this._read(r.highWaterMark),
                        (r.sync = !1),
                        r.reading || (e = T(n, r))),
                    null === (t = e > 0 ? j(e, r) : null)
                      ? ((r.needReadable = r.length <= r.highWaterMark),
                        (e = 0))
                      : ((r.length -= e), (r.awaitDrain = 0)),
                    0 === r.length &&
                      (r.ended || (r.needReadable = !0),
                      n !== e && r.ended && H(this)),
                    null !== t && this.emit("data", t),
                    t
                  );
                }),
                (B.prototype._read = function (e) {
                  _(this, new x("_read()"));
                }),
                (B.prototype.pipe = function (e, t) {
                  var r,
                    i = this,
                    o = this._readableState;
                  switch (o.pipesCount) {
                    case 0:
                      o.pipes = e;
                      break;
                    case 1:
                      o.pipes = [o.pipes, e];
                      break;
                    default:
                      o.pipes.push(e);
                  }
                  (o.pipesCount += 1),
                    a("pipe count=%d opts=%j", o.pipesCount, t);
                  var s =
                    (t && !1 === t.end) || e === n.stdout || e === n.stderr
                      ? g
                      : l;
                  function l() {
                    a("onend"), e.end();
                  }
                  o.endEmitted ? n.nextTick(s) : i.once("end", s),
                    e.on("unpipe", function t(r, n) {
                      a("onunpipe"),
                        r === i &&
                          n &&
                          !1 === n.hasUnpiped &&
                          ((n.hasUnpiped = !0),
                          a("cleanup"),
                          e.removeListener("close", p),
                          e.removeListener("finish", y),
                          e.removeListener("drain", f),
                          e.removeListener("error", d),
                          e.removeListener("unpipe", t),
                          i.removeListener("end", l),
                          i.removeListener("end", g),
                          i.removeListener("data", h),
                          (c = !0),
                          o.awaitDrain &&
                            (!e._writableState || e._writableState.needDrain) &&
                            f());
                    });
                  var f =
                    ((r = i),
                    function () {
                      var e = r._readableState;
                      a("pipeOnDrain", e.awaitDrain),
                        e.awaitDrain && e.awaitDrain--,
                        0 === e.awaitDrain &&
                          u(r, "data") &&
                          ((e.flowing = !0), N(r));
                    });
                  e.on("drain", f);
                  var c = !1;
                  function h(t) {
                    a("ondata");
                    var r = e.write(t);
                    a("dest.write", r),
                      !1 === r &&
                        (((1 === o.pipesCount && o.pipes === e) ||
                          (o.pipesCount > 1 && -1 !== F(o.pipes, e))) &&
                          !c &&
                          (a("false write response, pause", o.awaitDrain),
                          o.awaitDrain++),
                        i.pause());
                  }
                  function d(t) {
                    a("onerror", t),
                      g(),
                      e.removeListener("error", d),
                      0 === u(e, "error") && _(e, t);
                  }
                  function p() {
                    e.removeListener("finish", y), g();
                  }
                  function y() {
                    a("onfinish"), e.removeListener("close", p), g();
                  }
                  function g() {
                    a("unpipe"), i.unpipe(e);
                  }
                  return (
                    i.on("data", h),
                    (function (e, t, r) {
                      if ("function" == typeof e.prependListener)
                        return e.prependListener(t, r);
                      e._events && e._events[t]
                        ? Array.isArray(e._events[t])
                          ? e._events[t].unshift(r)
                          : (e._events[t] = [r, e._events[t]])
                        : e.on(t, r);
                    })(e, "error", d),
                    e.once("close", p),
                    e.once("finish", y),
                    e.emit("pipe", i),
                    o.flowing || (a("pipe resume"), i.resume()),
                    e
                  );
                }),
                (B.prototype.unpipe = function (e) {
                  var t = this._readableState,
                    r = { hasUnpiped: !1 };
                  if (0 === t.pipesCount) return this;
                  if (1 === t.pipesCount)
                    return (
                      (e && e !== t.pipes) ||
                        (e || (e = t.pipes),
                        (t.pipes = null),
                        (t.pipesCount = 0),
                        (t.flowing = !1),
                        e && e.emit("unpipe", this, r)),
                      this
                    );
                  if (!e) {
                    var n = t.pipes,
                      i = t.pipesCount;
                    (t.pipes = null), (t.pipesCount = 0), (t.flowing = !1);
                    for (var o = 0; o < i; o++)
                      n[o].emit("unpipe", this, { hasUnpiped: !1 });
                    return this;
                  }
                  var a = F(t.pipes, e);
                  return (
                    -1 === a ||
                      (t.pipes.splice(a, 1),
                      (t.pipesCount -= 1),
                      1 === t.pipesCount && (t.pipes = t.pipes[0]),
                      e.emit("unpipe", this, r)),
                    this
                  );
                }),
                (B.prototype.on = function (e, t) {
                  var r = c.prototype.on.call(this, e, t),
                    i = this._readableState;
                  return (
                    "data" === e
                      ? ((i.readableListening =
                          this.listenerCount("readable") > 0),
                        !1 !== i.flowing && this.resume())
                      : "readable" !== e ||
                        i.endEmitted ||
                        i.readableListening ||
                        ((i.readableListening = i.needReadable = !0),
                        (i.flowing = !1),
                        (i.emittedReadable = !1),
                        a("on readable", i.length, i.reading),
                        i.length ? I(this) : i.reading || n.nextTick(U, this)),
                    r
                  );
                }),
                (B.prototype.addListener = B.prototype.on),
                (B.prototype.removeListener = function (e, t) {
                  var r = c.prototype.removeListener.call(this, e, t);
                  return "readable" === e && n.nextTick(C, this), r;
                }),
                (B.prototype.removeAllListeners = function (e) {
                  var t = c.prototype.removeAllListeners.apply(this, arguments);
                  return (
                    ("readable" === e || void 0 === e) && n.nextTick(C, this), t
                  );
                }),
                (B.prototype.resume = function () {
                  var e,
                    t,
                    r = this._readableState;
                  return (
                    r.flowing ||
                      (a("resume"),
                      (r.flowing = !r.readableListening),
                      (e = this),
                      (t = r).resumeScheduled ||
                        ((t.resumeScheduled = !0), n.nextTick(L, e, t))),
                    (r.paused = !1),
                    this
                  );
                }),
                (B.prototype.pause = function () {
                  return (
                    a("call pause flowing=%j", this._readableState.flowing),
                    !1 !== this._readableState.flowing &&
                      (a("pause"),
                      (this._readableState.flowing = !1),
                      this.emit("pause")),
                    (this._readableState.paused = !0),
                    this
                  );
                }),
                (B.prototype.wrap = function (e) {
                  var t = this,
                    r = this._readableState,
                    n = !1;
                  for (var i in (e.on("end", function () {
                    if ((a("wrapped end"), r.decoder && !r.ended)) {
                      var e = r.decoder.end();
                      e && e.length && t.push(e);
                    }
                    t.push(null);
                  }),
                  e.on("data", function (i) {
                    if (
                      (a("wrapped data"),
                      r.decoder && (i = r.decoder.write(i)),
                      !r.objectMode || null != i)
                    )
                      (r.objectMode || (i && i.length)) &&
                        (t.push(i) || ((n = !0), e.pause()));
                  }),
                  e))
                    void 0 === this[i] &&
                      "function" == typeof e[i] &&
                      (this[i] = (function (t) {
                        return function () {
                          return e[t].apply(e, arguments);
                        };
                      })(i));
                  for (var o = 0; o < S.length; o++)
                    e.on(S[o], this.emit.bind(this, S[o]));
                  return (
                    (this._read = function (t) {
                      a("wrapped _read", t), n && ((n = !1), e.resume());
                    }),
                    this
                  );
                }),
                "function" == typeof Symbol &&
                  (B.prototype[Symbol.asyncIterator] = function () {
                    return void 0 === l && (l = i(871)), l(this);
                  }),
                Object.defineProperty(B.prototype, "readableHighWaterMark", {
                  enumerable: !1,
                  get: function () {
                    return this._readableState.highWaterMark;
                  },
                }),
                Object.defineProperty(B.prototype, "readableBuffer", {
                  enumerable: !1,
                  get: function () {
                    return this._readableState && this._readableState.buffer;
                  },
                }),
                Object.defineProperty(B.prototype, "readableFlowing", {
                  enumerable: !1,
                  get: function () {
                    return this._readableState.flowing;
                  },
                  set: function (e) {
                    this._readableState && (this._readableState.flowing = e);
                  },
                }),
                (B._fromList = j),
                Object.defineProperty(B.prototype, "readableLength", {
                  enumerable: !1,
                  get: function () {
                    return this._readableState.length;
                  },
                }),
                "function" == typeof Symbol &&
                  (B.from = function (e, t) {
                    return void 0 === f && (f = i(727)), f(B, e, t);
                  });
            },
            170: function (e, t, r) {
              "use strict";
              e.exports = u;
              var n = r(646).q,
                i = n.ERR_METHOD_NOT_IMPLEMENTED,
                o = n.ERR_MULTIPLE_CALLBACK,
                a = n.ERR_TRANSFORM_ALREADY_TRANSFORMING,
                s = n.ERR_TRANSFORM_WITH_LENGTH_0,
                l = r(403);
              function f(e, t) {
                var r = this._transformState;
                r.transforming = !1;
                var n = r.writecb;
                if (null === n) return this.emit("error", new o());
                (r.writechunk = null),
                  (r.writecb = null),
                  null != t && this.push(t),
                  n(e);
                var i = this._readableState;
                (i.reading = !1),
                  (i.needReadable || i.length < i.highWaterMark) &&
                    this._read(i.highWaterMark);
              }
              function u(e) {
                if (!(this instanceof u)) return new u(e);
                l.call(this, e),
                  (this._transformState = {
                    afterTransform: f.bind(this),
                    needTransform: !1,
                    transforming: !1,
                    writecb: null,
                    writechunk: null,
                    writeencoding: null,
                  }),
                  (this._readableState.needReadable = !0),
                  (this._readableState.sync = !1),
                  e &&
                    ("function" == typeof e.transform &&
                      (this._transform = e.transform),
                    "function" == typeof e.flush && (this._flush = e.flush)),
                  this.on("prefinish", c);
              }
              function c() {
                var e = this;
                "function" != typeof this._flush ||
                this._readableState.destroyed
                  ? h(this, null, null)
                  : this._flush(function (t, r) {
                      h(e, t, r);
                    });
              }
              function h(e, t, r) {
                if (t) return e.emit("error", t);
                if ((null != r && e.push(r), e._writableState.length))
                  throw new s();
                if (e._transformState.transforming) throw new a();
                return e.push(null);
              }
              r(782)(u, l),
                (u.prototype.push = function (e, t) {
                  return (
                    (this._transformState.needTransform = !1),
                    l.prototype.push.call(this, e, t)
                  );
                }),
                (u.prototype._transform = function (e, t, r) {
                  r(new i("_transform()"));
                }),
                (u.prototype._write = function (e, t, r) {
                  var n = this._transformState;
                  if (
                    ((n.writecb = r),
                    (n.writechunk = e),
                    (n.writeencoding = t),
                    !n.transforming)
                  ) {
                    var i = this._readableState;
                    (n.needTransform ||
                      i.needReadable ||
                      i.length < i.highWaterMark) &&
                      this._read(i.highWaterMark);
                  }
                }),
                (u.prototype._read = function (e) {
                  var t = this._transformState;
                  null === t.writechunk || t.transforming
                    ? (t.needTransform = !0)
                    : ((t.transforming = !0),
                      this._transform(
                        t.writechunk,
                        t.writeencoding,
                        t.afterTransform
                      ));
                }),
                (u.prototype._destroy = function (e, t) {
                  l.prototype._destroy.call(this, e, function (e) {
                    t(e);
                  });
                });
            },
            337: function (e, t, i) {
              "use strict";
              function o(e) {
                var t = this;
                (this.next = null),
                  (this.entry = null),
                  (this.finish = function () {
                    (function (e, t, r) {
                      var n = e.entry;
                      for (e.entry = null; n; ) {
                        var i = n.callback;
                        t.pendingcb--, i(void 0), (n = n.next);
                      }
                      t.corkedRequestsFree.next = e;
                    })(t, e);
                  });
              }
              (e.exports = B), (B.WritableState = A);
              var a,
                s,
                l = { deprecate: i(769) },
                f = i(678),
                u = i(300).Buffer,
                c = r.g.Uint8Array || function () {},
                h = i(25),
                d = i(776).getHighWaterMark,
                p = i(646).q,
                y = p.ERR_INVALID_ARG_TYPE,
                g = p.ERR_METHOD_NOT_IMPLEMENTED,
                b = p.ERR_MULTIPLE_CALLBACK,
                m = p.ERR_STREAM_CANNOT_PIPE,
                w = p.ERR_STREAM_DESTROYED,
                v = p.ERR_STREAM_NULL_VALUES,
                x = p.ERR_STREAM_WRITE_AFTER_END,
                E = p.ERR_UNKNOWN_ENCODING,
                _ = h.errorOrDestroy;
              function S() {}
              function A(e, t, r) {
                (a = a || i(403)),
                  (e = e || {}),
                  "boolean" != typeof r && (r = t instanceof a),
                  (this.objectMode = !!e.objectMode),
                  r &&
                    (this.objectMode =
                      this.objectMode || !!e.writableObjectMode),
                  (this.highWaterMark = d(this, e, "writableHighWaterMark", r)),
                  (this.finalCalled = !1),
                  (this.needDrain = !1),
                  (this.ending = !1),
                  (this.ended = !1),
                  (this.finished = !1),
                  (this.destroyed = !1);
                var s = !1 === e.decodeStrings;
                (this.decodeStrings = !s),
                  (this.defaultEncoding = e.defaultEncoding || "utf8"),
                  (this.length = 0),
                  (this.writing = !1),
                  (this.corked = 0),
                  (this.sync = !0),
                  (this.bufferProcessing = !1),
                  (this.onwrite = function (e) {
                    (function (e, t) {
                      var r = e._writableState,
                        i = r.sync,
                        o = r.writecb;
                      if ("function" != typeof o) throw new b();
                      if (
                        ((r.writing = !1),
                        (r.writecb = null),
                        (r.length -= r.writelen),
                        (r.writelen = 0),
                        t)
                      )
                        --r.pendingcb,
                          i
                            ? (n.nextTick(o, t),
                              n.nextTick(M, e, r),
                              (e._writableState.errorEmitted = !0),
                              _(e, t))
                            : (o(t),
                              (e._writableState.errorEmitted = !0),
                              _(e, t),
                              M(e, r));
                      else {
                        var a = I(r) || e.destroyed;
                        a ||
                          r.corked ||
                          r.bufferProcessing ||
                          !r.bufferedRequest ||
                          T(e, r),
                          i ? n.nextTick(O, e, r, a, o) : O(e, r, a, o);
                      }
                    })(t, e);
                  }),
                  (this.writecb = null),
                  (this.writelen = 0),
                  (this.bufferedRequest = null),
                  (this.lastBufferedRequest = null),
                  (this.pendingcb = 0),
                  (this.prefinished = !1),
                  (this.errorEmitted = !1),
                  (this.emitClose = !1 !== e.emitClose),
                  (this.autoDestroy = !!e.autoDestroy),
                  (this.bufferedRequestCount = 0),
                  (this.corkedRequestsFree = new o(this));
              }
              function B(e) {
                var t = this instanceof (a = a || i(403));
                if (!t && !s.call(B, this)) return new B(e);
                (this._writableState = new A(e, this, t)),
                  (this.writable = !0),
                  e &&
                    ("function" == typeof e.write && (this._write = e.write),
                    "function" == typeof e.writev && (this._writev = e.writev),
                    "function" == typeof e.destroy &&
                      (this._destroy = e.destroy),
                    "function" == typeof e.final && (this._final = e.final)),
                  f.call(this);
              }
              function k(e, t, r, n, i, o, a) {
                (t.writelen = n),
                  (t.writecb = a),
                  (t.writing = !0),
                  (t.sync = !0),
                  t.destroyed
                    ? t.onwrite(new w("write"))
                    : r
                    ? e._writev(i, t.onwrite)
                    : e._write(i, o, t.onwrite),
                  (t.sync = !1);
              }
              function O(e, t, r, n) {
                var i, o;
                r ||
                  ((i = e),
                  0 === (o = t).length &&
                    o.needDrain &&
                    ((o.needDrain = !1), i.emit("drain"))),
                  t.pendingcb--,
                  n(),
                  M(e, t);
              }
              function T(e, t) {
                t.bufferProcessing = !0;
                var r = t.bufferedRequest;
                if (e._writev && r && r.next) {
                  var n = Array(t.bufferedRequestCount),
                    i = t.corkedRequestsFree;
                  i.entry = r;
                  for (var a = 0, s = !0; r; )
                    (n[a] = r), r.isBuf || (s = !1), (r = r.next), (a += 1);
                  (n.allBuffers = s),
                    k(e, t, !0, t.length, n, "", i.finish),
                    t.pendingcb++,
                    (t.lastBufferedRequest = null),
                    i.next
                      ? ((t.corkedRequestsFree = i.next), (i.next = null))
                      : (t.corkedRequestsFree = new o(t)),
                    (t.bufferedRequestCount = 0);
                } else {
                  for (; r; ) {
                    var l = r.chunk,
                      f = r.encoding,
                      u = r.callback,
                      c = t.objectMode ? 1 : l.length;
                    if (
                      (k(e, t, !1, c, l, f, u),
                      (r = r.next),
                      t.bufferedRequestCount--,
                      t.writing)
                    )
                      break;
                  }
                  null === r && (t.lastBufferedRequest = null);
                }
                (t.bufferedRequest = r), (t.bufferProcessing = !1);
              }
              function I(e) {
                return (
                  e.ending &&
                  0 === e.length &&
                  null === e.bufferedRequest &&
                  !e.finished &&
                  !e.writing
                );
              }
              function R(e, t) {
                e._final(function (r) {
                  t.pendingcb--,
                    r && _(e, r),
                    (t.prefinished = !0),
                    e.emit("prefinish"),
                    M(e, t);
                });
              }
              function M(e, t) {
                var r = I(t);
                if (
                  r &&
                  (t.prefinished ||
                    t.finalCalled ||
                    ("function" != typeof e._final || t.destroyed
                      ? ((t.prefinished = !0), e.emit("prefinish"))
                      : (t.pendingcb++,
                        (t.finalCalled = !0),
                        n.nextTick(R, e, t))),
                  0 === t.pendingcb &&
                    ((t.finished = !0), e.emit("finish"), t.autoDestroy))
                ) {
                  var i = e._readableState;
                  (!i || (i.autoDestroy && i.endEmitted)) && e.destroy();
                }
                return r;
              }
              i(782)(B, f),
                (A.prototype.getBuffer = function () {
                  for (var e = this.bufferedRequest, t = []; e; )
                    t.push(e), (e = e.next);
                  return t;
                }),
                (function () {
                  try {
                    Object.defineProperty(A.prototype, "buffer", {
                      get: l.deprecate(
                        function () {
                          return this.getBuffer();
                        },
                        "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                        "DEP0003"
                      ),
                    });
                  } catch (e) {}
                })(),
                "function" == typeof Symbol &&
                Symbol.hasInstance &&
                "function" == typeof Function.prototype[Symbol.hasInstance]
                  ? ((s = Function.prototype[Symbol.hasInstance]),
                    Object.defineProperty(B, Symbol.hasInstance, {
                      value: function (e) {
                        return (
                          !!s.call(this, e) ||
                          (this === B && e && e._writableState instanceof A)
                        );
                      },
                    }))
                  : (s = function (e) {
                      return e instanceof this;
                    }),
                (B.prototype.pipe = function () {
                  _(this, new m());
                }),
                (B.prototype.write = function (e, t, r) {
                  var i,
                    o,
                    a,
                    s,
                    l,
                    f,
                    h,
                    d = this._writableState,
                    p = !1,
                    g =
                      !d.objectMode &&
                      ((i = e), u.isBuffer(i) || i instanceof c);
                  return (
                    g && !u.isBuffer(e) && ((o = e), (e = u.from(o))),
                    ("function" == typeof t && ((r = t), (t = null)),
                    g ? (t = "buffer") : t || (t = d.defaultEncoding),
                    "function" != typeof r && (r = S),
                    d.ending)
                      ? ((a = r), _(this, (s = new x())), n.nextTick(a, s))
                      : (g ||
                          ((l = e),
                          (f = r),
                          null === l
                            ? (h = new v())
                            : "string" == typeof l ||
                              d.objectMode ||
                              (h = new y("chunk", ["string", "Buffer"], l)),
                          !h || (_(this, h), n.nextTick(f, h), 0))) &&
                        (d.pendingcb++,
                        (p = (function (e, t, r, n, i, o) {
                          if (!r) {
                            var a,
                              s,
                              l =
                                ((a = n),
                                (s = i),
                                t.objectMode ||
                                  !1 === t.decodeStrings ||
                                  "string" != typeof a ||
                                  (a = u.from(a, s)),
                                a);
                            n !== l && ((r = !0), (i = "buffer"), (n = l));
                          }
                          var f = t.objectMode ? 1 : n.length;
                          t.length += f;
                          var c = t.length < t.highWaterMark;
                          if (
                            (c || (t.needDrain = !0), t.writing || t.corked)
                          ) {
                            var h = t.lastBufferedRequest;
                            (t.lastBufferedRequest = {
                              chunk: n,
                              encoding: i,
                              isBuf: r,
                              callback: o,
                              next: null,
                            }),
                              h
                                ? (h.next = t.lastBufferedRequest)
                                : (t.bufferedRequest = t.lastBufferedRequest),
                              (t.bufferedRequestCount += 1);
                          } else k(e, t, !1, f, n, i, o);
                          return c;
                        })(this, d, g, e, t, r))),
                    p
                  );
                }),
                (B.prototype.cork = function () {
                  this._writableState.corked++;
                }),
                (B.prototype.uncork = function () {
                  var e = this._writableState;
                  !e.corked ||
                    (e.corked--,
                    e.writing ||
                      e.corked ||
                      e.bufferProcessing ||
                      !e.bufferedRequest ||
                      T(this, e));
                }),
                (B.prototype.setDefaultEncoding = function (e) {
                  if (
                    ("string" == typeof e && (e = e.toLowerCase()),
                    !(
                      [
                        "hex",
                        "utf8",
                        "utf-8",
                        "ascii",
                        "binary",
                        "base64",
                        "ucs2",
                        "ucs-2",
                        "utf16le",
                        "utf-16le",
                        "raw",
                      ].indexOf((e + "").toLowerCase()) > -1
                    ))
                  )
                    throw new E(e);
                  return (this._writableState.defaultEncoding = e), this;
                }),
                Object.defineProperty(B.prototype, "writableBuffer", {
                  enumerable: !1,
                  get: function () {
                    return (
                      this._writableState && this._writableState.getBuffer()
                    );
                  },
                }),
                Object.defineProperty(B.prototype, "writableHighWaterMark", {
                  enumerable: !1,
                  get: function () {
                    return this._writableState.highWaterMark;
                  },
                }),
                (B.prototype._write = function (e, t, r) {
                  r(new g("_write()"));
                }),
                (B.prototype._writev = null),
                (B.prototype.end = function (e, t, r) {
                  var i,
                    o,
                    a,
                    s = this._writableState;
                  return (
                    "function" == typeof e
                      ? ((r = e), (e = null), (t = null))
                      : "function" == typeof t && ((r = t), (t = null)),
                    null != e && this.write(e, t),
                    s.corked && ((s.corked = 1), this.uncork()),
                    s.ending ||
                      ((i = this),
                      (o = s),
                      (a = r),
                      (o.ending = !0),
                      M(i, o),
                      a && (o.finished ? n.nextTick(a) : i.once("finish", a)),
                      (o.ended = !0),
                      (i.writable = !1)),
                    this
                  );
                }),
                Object.defineProperty(B.prototype, "writableLength", {
                  enumerable: !1,
                  get: function () {
                    return this._writableState.length;
                  },
                }),
                Object.defineProperty(B.prototype, "destroyed", {
                  enumerable: !1,
                  get: function () {
                    return (
                      void 0 !== this._writableState &&
                      this._writableState.destroyed
                    );
                  },
                  set: function (e) {
                    this._writableState && (this._writableState.destroyed = e);
                  },
                }),
                (B.prototype.destroy = h.destroy),
                (B.prototype._undestroy = h.undestroy),
                (B.prototype._destroy = function (e, t) {
                  t(e);
                });
            },
            871: function (e, t, r) {
              "use strict";
              function i(e, t, r) {
                return (
                  t in e
                    ? Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                      })
                    : (e[t] = r),
                  e
                );
              }
              var o,
                a = r(698),
                s = Symbol("lastResolve"),
                l = Symbol("lastReject"),
                f = Symbol("error"),
                u = Symbol("ended"),
                c = Symbol("lastPromise"),
                h = Symbol("handlePromise"),
                d = Symbol("stream");
              function p(e, t) {
                return { value: e, done: t };
              }
              function y(e) {
                var t = e[s];
                if (null !== t) {
                  var r = e[d].read();
                  null !== r &&
                    ((e[c] = null), (e[s] = null), (e[l] = null), t(p(r, !1)));
                }
              }
              function g(e) {
                n.nextTick(y, e);
              }
              var b = Object.getPrototypeOf(function () {}),
                m = Object.setPrototypeOf(
                  (i(
                    (o = {
                      get stream() {
                        return this[d];
                      },
                      next: function () {
                        var e,
                          t,
                          r = this,
                          i = this[f];
                        if (null !== i) return Promise.reject(i);
                        if (this[u]) return Promise.resolve(p(void 0, !0));
                        if (this[d].destroyed)
                          return new Promise(function (e, t) {
                            n.nextTick(function () {
                              r[f] ? t(r[f]) : e(p(void 0, !0));
                            });
                          });
                        var o = this[c];
                        if (o)
                          t = new Promise(
                            ((e = this),
                            function (t, r) {
                              o.then(function () {
                                if (e[u]) {
                                  t(p(void 0, !0));
                                  return;
                                }
                                e[h](t, r);
                              }, r);
                            })
                          );
                        else {
                          var a = this[d].read();
                          if (null !== a) return Promise.resolve(p(a, !1));
                          t = new Promise(this[h]);
                        }
                        return (this[c] = t), t;
                      },
                    }),
                    Symbol.asyncIterator,
                    function () {
                      return this;
                    }
                  ),
                  i(o, "return", function () {
                    var e = this;
                    return new Promise(function (t, r) {
                      e[d].destroy(null, function (e) {
                        if (e) {
                          r(e);
                          return;
                        }
                        t(p(void 0, !0));
                      });
                    });
                  }),
                  o),
                  b
                );
              e.exports = function (e) {
                var t,
                  r = Object.create(
                    m,
                    (i((t = {}), d, { value: e, writable: !0 }),
                    i(t, s, { value: null, writable: !0 }),
                    i(t, l, { value: null, writable: !0 }),
                    i(t, f, { value: null, writable: !0 }),
                    i(t, u, {
                      value: e._readableState.endEmitted,
                      writable: !0,
                    }),
                    i(t, h, {
                      value: function (e, t) {
                        var n = r[d].read();
                        n
                          ? ((r[c] = null),
                            (r[s] = null),
                            (r[l] = null),
                            e(p(n, !1)))
                          : ((r[s] = e), (r[l] = t));
                      },
                      writable: !0,
                    }),
                    t)
                  );
                return (
                  (r[c] = null),
                  a(e, function (e) {
                    if (e && "ERR_STREAM_PREMATURE_CLOSE" !== e.code) {
                      var t = r[l];
                      null !== t &&
                        ((r[c] = null), (r[s] = null), (r[l] = null), t(e)),
                        (r[f] = e);
                      return;
                    }
                    var n = r[s];
                    null !== n &&
                      ((r[c] = null),
                      (r[s] = null),
                      (r[l] = null),
                      n(p(void 0, !0))),
                      (r[u] = !0);
                  }),
                  e.on("readable", g.bind(null, r)),
                  r
                );
              };
            },
            379: function (e, t, r) {
              "use strict";
              function n(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                  var n = Object.getOwnPropertySymbols(e);
                  t &&
                    (n = n.filter(function (t) {
                      return Object.getOwnPropertyDescriptor(e, t).enumerable;
                    })),
                    r.push.apply(r, n);
                }
                return r;
              }
              var i = r(300).Buffer,
                o = r(837).inspect,
                a = (o && o.custom) || "inspect";
              e.exports = (function () {
                var e;
                function t() {
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw TypeError("Cannot call a class as a function");
                  })(this, t),
                    (this.head = null),
                    (this.tail = null),
                    (this.length = 0);
                }
                return (
                  (e = [
                    {
                      key: "push",
                      value: function (e) {
                        var t = { data: e, next: null };
                        this.length > 0
                          ? (this.tail.next = t)
                          : (this.head = t),
                          (this.tail = t),
                          ++this.length;
                      },
                    },
                    {
                      key: "unshift",
                      value: function (e) {
                        var t = { data: e, next: this.head };
                        0 === this.length && (this.tail = t),
                          (this.head = t),
                          ++this.length;
                      },
                    },
                    {
                      key: "shift",
                      value: function () {
                        if (0 !== this.length) {
                          var e = this.head.data;
                          return (
                            1 === this.length
                              ? (this.head = this.tail = null)
                              : (this.head = this.head.next),
                            --this.length,
                            e
                          );
                        }
                      },
                    },
                    {
                      key: "clear",
                      value: function () {
                        (this.head = this.tail = null), (this.length = 0);
                      },
                    },
                    {
                      key: "join",
                      value: function (e) {
                        if (0 === this.length) return "";
                        for (var t = this.head, r = "" + t.data; (t = t.next); )
                          r += e + t.data;
                        return r;
                      },
                    },
                    {
                      key: "concat",
                      value: function (e) {
                        if (0 === this.length) return i.alloc(0);
                        for (
                          var t,
                            r,
                            n = i.allocUnsafe(e >>> 0),
                            o = this.head,
                            a = 0;
                          o;

                        )
                          (t = o.data),
                            (r = a),
                            i.prototype.copy.call(t, n, r),
                            (a += o.data.length),
                            (o = o.next);
                        return n;
                      },
                    },
                    {
                      key: "consume",
                      value: function (e, t) {
                        var r;
                        return (
                          e < this.head.data.length
                            ? ((r = this.head.data.slice(0, e)),
                              (this.head.data = this.head.data.slice(e)))
                            : (r =
                                e === this.head.data.length
                                  ? this.shift()
                                  : t
                                  ? this._getString(e)
                                  : this._getBuffer(e)),
                          r
                        );
                      },
                    },
                    {
                      key: "first",
                      value: function () {
                        return this.head.data;
                      },
                    },
                    {
                      key: "_getString",
                      value: function (e) {
                        var t = this.head,
                          r = 1,
                          n = t.data;
                        for (e -= n.length; (t = t.next); ) {
                          var i = t.data,
                            o = e > i.length ? i.length : e;
                          if (
                            (o === i.length ? (n += i) : (n += i.slice(0, e)),
                            0 == (e -= o))
                          ) {
                            o === i.length
                              ? (++r,
                                t.next
                                  ? (this.head = t.next)
                                  : (this.head = this.tail = null))
                              : ((this.head = t), (t.data = i.slice(o)));
                            break;
                          }
                          ++r;
                        }
                        return (this.length -= r), n;
                      },
                    },
                    {
                      key: "_getBuffer",
                      value: function (e) {
                        var t = i.allocUnsafe(e),
                          r = this.head,
                          n = 1;
                        for (
                          r.data.copy(t), e -= r.data.length;
                          (r = r.next);

                        ) {
                          var o = r.data,
                            a = e > o.length ? o.length : e;
                          if ((o.copy(t, t.length - e, 0, a), 0 == (e -= a))) {
                            a === o.length
                              ? (++n,
                                r.next
                                  ? (this.head = r.next)
                                  : (this.head = this.tail = null))
                              : ((this.head = r), (r.data = o.slice(a)));
                            break;
                          }
                          ++n;
                        }
                        return (this.length -= n), t;
                      },
                    },
                    {
                      key: a,
                      value: function (e, t) {
                        return o(
                          this,
                          (function (e) {
                            for (var t = 1; t < arguments.length; t++) {
                              var r = null != arguments[t] ? arguments[t] : {};
                              t % 2
                                ? n(Object(r), !0).forEach(function (t) {
                                    var n, i, o;
                                    (n = e),
                                      (i = t),
                                      (o = r[t]),
                                      i in n
                                        ? Object.defineProperty(n, i, {
                                            value: o,
                                            enumerable: !0,
                                            configurable: !0,
                                            writable: !0,
                                          })
                                        : (n[i] = o);
                                  })
                                : Object.getOwnPropertyDescriptors
                                ? Object.defineProperties(
                                    e,
                                    Object.getOwnPropertyDescriptors(r)
                                  )
                                : n(Object(r)).forEach(function (t) {
                                    Object.defineProperty(
                                      e,
                                      t,
                                      Object.getOwnPropertyDescriptor(r, t)
                                    );
                                  });
                            }
                            return e;
                          })({}, t, { depth: 0, customInspect: !1 })
                        );
                      },
                    },
                  ]),
                  (function (e, t) {
                    for (var r = 0; r < t.length; r++) {
                      var n = t[r];
                      (n.enumerable = n.enumerable || !1),
                        (n.configurable = !0),
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n);
                    }
                  })(t.prototype, e),
                  t
                );
              })();
            },
            25: function (e) {
              "use strict";
              function t(e, t) {
                i(e, t), r(e);
              }
              function r(e) {
                (!e._writableState || e._writableState.emitClose) &&
                  (!e._readableState || e._readableState.emitClose) &&
                  e.emit("close");
              }
              function i(e, t) {
                e.emit("error", t);
              }
              e.exports = {
                destroy: function (e, o) {
                  var a = this,
                    s = this._readableState && this._readableState.destroyed,
                    l = this._writableState && this._writableState.destroyed;
                  return (
                    s || l
                      ? o
                        ? o(e)
                        : e &&
                          (this._writableState
                            ? this._writableState.errorEmitted ||
                              ((this._writableState.errorEmitted = !0),
                              n.nextTick(i, this, e))
                            : n.nextTick(i, this, e))
                      : (this._readableState &&
                          (this._readableState.destroyed = !0),
                        this._writableState &&
                          (this._writableState.destroyed = !0),
                        this._destroy(e || null, function (e) {
                          !o && e
                            ? a._writableState
                              ? a._writableState.errorEmitted
                                ? n.nextTick(r, a)
                                : ((a._writableState.errorEmitted = !0),
                                  n.nextTick(t, a, e))
                              : n.nextTick(t, a, e)
                            : o
                            ? (n.nextTick(r, a), o(e))
                            : n.nextTick(r, a);
                        })),
                    this
                  );
                },
                undestroy: function () {
                  this._readableState &&
                    ((this._readableState.destroyed = !1),
                    (this._readableState.reading = !1),
                    (this._readableState.ended = !1),
                    (this._readableState.endEmitted = !1)),
                    this._writableState &&
                      ((this._writableState.destroyed = !1),
                      (this._writableState.ended = !1),
                      (this._writableState.ending = !1),
                      (this._writableState.finalCalled = !1),
                      (this._writableState.prefinished = !1),
                      (this._writableState.finished = !1),
                      (this._writableState.errorEmitted = !1));
                },
                errorOrDestroy: function (e, t) {
                  var r = e._readableState,
                    n = e._writableState;
                  (r && r.autoDestroy) || (n && n.autoDestroy)
                    ? e.destroy(t)
                    : e.emit("error", t);
                },
              };
            },
            698: function (e, t, r) {
              "use strict";
              var n = r(646).q.ERR_STREAM_PREMATURE_CLOSE;
              function i() {}
              e.exports = function e(t, r, o) {
                if ("function" == typeof r) return e(t, null, r);
                r || (r = {}),
                  (a = o || i),
                  (s = !1),
                  (o = function () {
                    if (!s) {
                      s = !0;
                      for (
                        var e = arguments.length, t = Array(e), r = 0;
                        r < e;
                        r++
                      )
                        t[r] = arguments[r];
                      a.apply(this, t);
                    }
                  });
                var a,
                  s,
                  l = r.readable || (!1 !== r.readable && t.readable),
                  f = r.writable || (!1 !== r.writable && t.writable),
                  u = function () {
                    t.writable || h();
                  },
                  c = t._writableState && t._writableState.finished,
                  h = function () {
                    (f = !1), (c = !0), l || o.call(t);
                  },
                  d = t._readableState && t._readableState.endEmitted,
                  p = function () {
                    (l = !1), (d = !0), f || o.call(t);
                  },
                  y = function (e) {
                    o.call(t, e);
                  },
                  g = function () {
                    var e;
                    return l && !d
                      ? ((t._readableState && t._readableState.ended) ||
                          (e = new n()),
                        o.call(t, e))
                      : f && !c
                      ? ((t._writableState && t._writableState.ended) ||
                          (e = new n()),
                        o.call(t, e))
                      : void 0;
                  },
                  b = function () {
                    t.req.on("finish", h);
                  };
                return (
                  t.setHeader && "function" == typeof t.abort
                    ? (t.on("complete", h),
                      t.on("abort", g),
                      t.req ? b() : t.on("request", b))
                    : f &&
                      !t._writableState &&
                      (t.on("end", u), t.on("close", u)),
                  t.on("end", p),
                  t.on("finish", h),
                  !1 !== r.error && t.on("error", y),
                  t.on("close", g),
                  function () {
                    t.removeListener("complete", h),
                      t.removeListener("abort", g),
                      t.removeListener("request", b),
                      t.req && t.req.removeListener("finish", h),
                      t.removeListener("end", u),
                      t.removeListener("close", u),
                      t.removeListener("finish", h),
                      t.removeListener("end", p),
                      t.removeListener("error", y),
                      t.removeListener("close", g);
                  }
                );
              };
            },
            727: function (e, t, r) {
              "use strict";
              function n(e, t, r, n, i, o, a) {
                try {
                  var s = e[o](a),
                    l = s.value;
                } catch (e) {
                  r(e);
                  return;
                }
                s.done ? t(l) : Promise.resolve(l).then(n, i);
              }
              function i(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                  var n = Object.getOwnPropertySymbols(e);
                  t &&
                    (n = n.filter(function (t) {
                      return Object.getOwnPropertyDescriptor(e, t).enumerable;
                    })),
                    r.push.apply(r, n);
                }
                return r;
              }
              var o = r(646).q.ERR_INVALID_ARG_TYPE;
              e.exports = function (e, t, r) {
                if (t && "function" == typeof t.next) a = t;
                else if (t && t[Symbol.asyncIterator])
                  a = t[Symbol.asyncIterator]();
                else if (t && t[Symbol.iterator]) a = t[Symbol.iterator]();
                else throw new o("iterable", ["Iterable"], t);
                var a,
                  s = new e(
                    (function (e) {
                      for (var t = 1; t < arguments.length; t++) {
                        var r = null != arguments[t] ? arguments[t] : {};
                        t % 2
                          ? i(Object(r), !0).forEach(function (t) {
                              var n, i, o;
                              (n = e),
                                (i = t),
                                (o = r[t]),
                                i in n
                                  ? Object.defineProperty(n, i, {
                                      value: o,
                                      enumerable: !0,
                                      configurable: !0,
                                      writable: !0,
                                    })
                                  : (n[i] = o);
                            })
                          : Object.getOwnPropertyDescriptors
                          ? Object.defineProperties(
                              e,
                              Object.getOwnPropertyDescriptors(r)
                            )
                          : i(Object(r)).forEach(function (t) {
                              Object.defineProperty(
                                e,
                                t,
                                Object.getOwnPropertyDescriptor(r, t)
                              );
                            });
                      }
                      return e;
                    })({ objectMode: !0 }, r)
                  ),
                  l = !1;
                function f() {
                  return u.apply(this, arguments);
                }
                function u() {
                  var e;
                  return (
                    (e = function* () {
                      try {
                        var e = yield a.next(),
                          t = e.value;
                        e.done
                          ? s.push(null)
                          : s.push(yield t)
                          ? f()
                          : (l = !1);
                      } catch (e) {
                        s.destroy(e);
                      }
                    }),
                    (u = function () {
                      var t = this,
                        r = arguments;
                      return new Promise(function (i, o) {
                        var a = e.apply(t, r);
                        function s(e) {
                          n(a, i, o, s, l, "next", e);
                        }
                        function l(e) {
                          n(a, i, o, s, l, "throw", e);
                        }
                        s(void 0);
                      });
                    }).apply(this, arguments)
                  );
                }
                return (
                  (s._read = function () {
                    l || ((l = !0), f());
                  }),
                  s
                );
              };
            },
            442: function (e, t, r) {
              "use strict";
              var n,
                i = r(646).q,
                o = i.ERR_MISSING_ARGS,
                a = i.ERR_STREAM_DESTROYED;
              function s(e) {
                if (e) throw e;
              }
              function l(e) {
                e();
              }
              function f(e, t) {
                return e.pipe(t);
              }
              e.exports = function () {
                for (
                  var e, t, i = arguments.length, u = Array(i), c = 0;
                  c < i;
                  c++
                )
                  u[c] = arguments[c];
                var h =
                  (e = u).length && "function" == typeof e[e.length - 1]
                    ? e.pop()
                    : s;
                if ((Array.isArray(u[0]) && (u = u[0]), u.length < 2))
                  throw new o("streams");
                var d = u.map(function (e, i) {
                  var o,
                    s,
                    f,
                    c,
                    p,
                    y = i < u.length - 1;
                  return (
                    (s = o =
                      function (e) {
                        t || (t = e),
                          e && d.forEach(l),
                          y || (d.forEach(l), h(t));
                      }),
                    (f = !1),
                    (o = function () {
                      f || ((f = !0), s.apply(void 0, arguments));
                    }),
                    (c = !1),
                    e.on("close", function () {
                      c = !0;
                    }),
                    void 0 === n && (n = r(698)),
                    n(e, { readable: y, writable: i > 0 }, function (e) {
                      if (e) return o(e);
                      (c = !0), o();
                    }),
                    (p = !1),
                    function (t) {
                      if (!c && !p) {
                        if (
                          ((p = !0),
                          e.setHeader && "function" == typeof e.abort)
                        )
                          return e.abort();
                        if ("function" == typeof e.destroy) return e.destroy();
                        o(t || new a("pipe"));
                      }
                    }
                  );
                });
                return u.reduce(f);
              };
            },
            776: function (e, t, r) {
              "use strict";
              var n = r(646).q.ERR_INVALID_OPT_VALUE;
              e.exports = {
                getHighWaterMark: function (e, t, r, i) {
                  var o =
                    null != t.highWaterMark ? t.highWaterMark : i ? t[r] : null;
                  if (null != o) {
                    if (!(isFinite(o) && Math.floor(o) === o) || o < 0)
                      throw new n(i ? r : "highWaterMark", o);
                    return Math.floor(o);
                  }
                  return e.objectMode ? 16 : 16384;
                },
              };
            },
            678: function (e, t, r) {
              e.exports = r(781);
            },
            726: function (e, t, r) {
              var i = r(781);
              "disable" === n.env.READABLE_STREAM && i
                ? ((e.exports = i.Readable),
                  Object.assign(e.exports, i),
                  (e.exports.Stream = i))
                : (((t = e.exports = r(709)).Stream = i || t),
                  (t.Readable = t),
                  (t.Writable = r(337)),
                  (t.Duplex = r(403)),
                  (t.Transform = r(170)),
                  (t.PassThrough = r(889)),
                  (t.finished = r(698)),
                  (t.pipeline = r(442)));
            },
            55: function (e, t, r) {
              var n = r(300),
                i = n.Buffer;
              function o(e, t) {
                for (var r in e) t[r] = e[r];
              }
              function a(e, t, r) {
                return i(e, t, r);
              }
              i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow
                ? (e.exports = n)
                : (o(n, t), (t.Buffer = a)),
                (a.prototype = Object.create(i.prototype)),
                o(i, a),
                (a.from = function (e, t, r) {
                  if ("number" == typeof e)
                    throw TypeError("Argument must not be a number");
                  return i(e, t, r);
                }),
                (a.alloc = function (e, t, r) {
                  if ("number" != typeof e)
                    throw TypeError("Argument must be a number");
                  var n = i(e);
                  return (
                    void 0 !== t
                      ? "string" == typeof r
                        ? n.fill(t, r)
                        : n.fill(t)
                      : n.fill(0),
                    n
                  );
                }),
                (a.allocUnsafe = function (e) {
                  if ("number" != typeof e)
                    throw TypeError("Argument must be a number");
                  return i(e);
                }),
                (a.allocUnsafeSlow = function (e) {
                  if ("number" != typeof e)
                    throw TypeError("Argument must be a number");
                  return n.SlowBuffer(e);
                });
            },
            813: function (e, t, n) {
              var i = n(450),
                o = n(254),
                a = n(911),
                s = n(523),
                l = n(310);
              (t.request = function (e, t) {
                e = "string" == typeof e ? l.parse(e) : a(e);
                var n =
                    -1 === r.g.location.protocol.search(/^https?:$/)
                      ? "http:"
                      : "",
                  o = e.protocol || n,
                  s = e.hostname || e.host,
                  f = e.port,
                  u = e.path || "/";
                s && -1 !== s.indexOf(":") && (s = "[" + s + "]"),
                  (e.url = (s ? o + "//" + s : "") + (f ? ":" + f : "") + u),
                  (e.method = (e.method || "GET").toUpperCase()),
                  (e.headers = e.headers || {});
                var c = new i(e);
                return t && c.on("response", t), c;
              }),
                (t.get = function (e, r) {
                  var n = t.request(e, r);
                  return n.end(), n;
                }),
                (t.ClientRequest = i),
                (t.IncomingMessage = o.IncomingMessage),
                (t.Agent = function () {}),
                (t.Agent.defaultMaxSockets = 4),
                (t.globalAgent = new t.Agent()),
                (t.STATUS_CODES = s),
                (t.METHODS = [
                  "CHECKOUT",
                  "CONNECT",
                  "COPY",
                  "DELETE",
                  "GET",
                  "HEAD",
                  "LOCK",
                  "M-SEARCH",
                  "MERGE",
                  "MKACTIVITY",
                  "MKCOL",
                  "MOVE",
                  "NOTIFY",
                  "OPTIONS",
                  "PATCH",
                  "POST",
                  "PROPFIND",
                  "PROPPATCH",
                  "PURGE",
                  "PUT",
                  "REPORT",
                  "SEARCH",
                  "SUBSCRIBE",
                  "TRACE",
                  "UNLOCK",
                  "UNSUBSCRIBE",
                ]);
            },
            301: function (e, t) {
              var n;
              function i() {
                if (void 0 !== n) return n;
                if (r.g.XMLHttpRequest) {
                  n = new r.g.XMLHttpRequest();
                  try {
                    n.open(
                      "GET",
                      r.g.XDomainRequest ? "/" : "https://example.com"
                    );
                  } catch (e) {
                    n = null;
                  }
                } else n = null;
                return n;
              }
              function o(e) {
                var t = i();
                if (!t) return !1;
                try {
                  return (t.responseType = e), t.responseType === e;
                } catch (e) {}
                return !1;
              }
              function a(e) {
                return "function" == typeof e;
              }
              (t.fetch = a(r.g.fetch) && a(r.g.ReadableStream)),
                (t.writableStream = a(r.g.WritableStream)),
                (t.abortController = a(r.g.AbortController)),
                (t.arraybuffer = t.fetch || o("arraybuffer")),
                (t.msstream = !t.fetch && o("ms-stream")),
                (t.mozchunkedarraybuffer =
                  !t.fetch && o("moz-chunked-arraybuffer")),
                (t.overrideMimeType =
                  t.fetch || (!!i() && a(i().overrideMimeType))),
                (n = null);
            },
            450: function (e, t, o) {
              var a = o(301),
                s = o(782),
                l = o(254),
                f = o(726),
                u = l.IncomingMessage,
                c = l.readyStates,
                h = (e.exports = function (e) {
                  var t,
                    r,
                    n,
                    o = this;
                  f.Writable.call(o),
                    (o._opts = e),
                    (o._body = []),
                    (o._headers = {}),
                    e.auth &&
                      o.setHeader(
                        "Authorization",
                        "Basic " + i.from(e.auth).toString("base64")
                      ),
                    Object.keys(e.headers).forEach(function (t) {
                      o.setHeader(t, e.headers[t]);
                    });
                  var s = !0;
                  if (
                    "disable-fetch" === e.mode ||
                    ("requestTimeout" in e && !a.abortController)
                  )
                    (s = !1), (n = !0);
                  else if ("prefer-streaming" === e.mode) n = !1;
                  else if ("allow-wrong-content-type" === e.mode)
                    n = !a.overrideMimeType;
                  else if (
                    e.mode &&
                    "default" !== e.mode &&
                    "prefer-fast" !== e.mode
                  )
                    throw Error("Invalid value for opts.mode");
                  else n = !0;
                  (t = n),
                    (r = s),
                    (o._mode =
                      a.fetch && r
                        ? "fetch"
                        : a.mozchunkedarraybuffer
                        ? "moz-chunked-arraybuffer"
                        : a.msstream
                        ? "ms-stream"
                        : a.arraybuffer && t
                        ? "arraybuffer"
                        : "text"),
                    (o._fetchTimer = null),
                    o.on("finish", function () {
                      o._onFinish();
                    });
                });
              s(h, f.Writable),
                (h.prototype.setHeader = function (e, t) {
                  var r = e.toLowerCase();
                  -1 === d.indexOf(r) &&
                    (this._headers[r] = { name: e, value: t });
                }),
                (h.prototype.getHeader = function (e) {
                  var t = this._headers[e.toLowerCase()];
                  return t ? t.value : null;
                }),
                (h.prototype.removeHeader = function (e) {
                  delete this._headers[e.toLowerCase()];
                }),
                (h.prototype._onFinish = function () {
                  var e = this;
                  if (!e._destroyed) {
                    var t = e._opts,
                      i = e._headers,
                      o = null;
                    "GET" !== t.method &&
                      "HEAD" !== t.method &&
                      (o = new Blob(e._body, {
                        type: (i["content-type"] || {}).value || "",
                      }));
                    var s = [];
                    if (
                      (Object.keys(i).forEach(function (e) {
                        var t = i[e].name,
                          r = i[e].value;
                        Array.isArray(r)
                          ? r.forEach(function (e) {
                              s.push([t, e]);
                            })
                          : s.push([t, r]);
                      }),
                      "fetch" === e._mode)
                    ) {
                      var l = null;
                      if (a.abortController) {
                        var f = new AbortController();
                        (l = f.signal),
                          (e._fetchAbortController = f),
                          "requestTimeout" in t &&
                            0 !== t.requestTimeout &&
                            (e._fetchTimer = r.g.setTimeout(function () {
                              e.emit("requestTimeout"),
                                e._fetchAbortController &&
                                  e._fetchAbortController.abort();
                            }, t.requestTimeout));
                      }
                      r.g
                        .fetch(e._opts.url, {
                          method: e._opts.method,
                          headers: s,
                          body: o || void 0,
                          mode: "cors",
                          credentials: t.withCredentials
                            ? "include"
                            : "same-origin",
                          signal: l,
                        })
                        .then(
                          function (t) {
                            (e._fetchResponse = t), e._connect();
                          },
                          function (t) {
                            r.g.clearTimeout(e._fetchTimer),
                              e._destroyed || e.emit("error", t);
                          }
                        );
                    } else {
                      var u = (e._xhr = new r.g.XMLHttpRequest());
                      try {
                        u.open(e._opts.method, e._opts.url, !0);
                      } catch (t) {
                        n.nextTick(function () {
                          e.emit("error", t);
                        });
                        return;
                      }
                      "responseType" in u && (u.responseType = e._mode),
                        "withCredentials" in u &&
                          (u.withCredentials = !!t.withCredentials),
                        "text" === e._mode &&
                          "overrideMimeType" in u &&
                          u.overrideMimeType(
                            "text/plain; charset=x-user-defined"
                          ),
                        "requestTimeout" in t &&
                          ((u.timeout = t.requestTimeout),
                          (u.ontimeout = function () {
                            e.emit("requestTimeout");
                          })),
                        s.forEach(function (e) {
                          u.setRequestHeader(e[0], e[1]);
                        }),
                        (e._response = null),
                        (u.onreadystatechange = function () {
                          switch (u.readyState) {
                            case c.LOADING:
                            case c.DONE:
                              e._onXHRProgress();
                          }
                        }),
                        "moz-chunked-arraybuffer" === e._mode &&
                          (u.onprogress = function () {
                            e._onXHRProgress();
                          }),
                        (u.onerror = function () {
                          e._destroyed || e.emit("error", Error("XHR error"));
                        });
                      try {
                        u.send(o);
                      } catch (t) {
                        n.nextTick(function () {
                          e.emit("error", t);
                        });
                        return;
                      }
                    }
                  }
                }),
                (h.prototype._onXHRProgress = function () {
                  (function (e) {
                    try {
                      var t = e.status;
                      return null !== t && 0 !== t;
                    } catch (e) {
                      return !1;
                    }
                  })(this._xhr) &&
                    !this._destroyed &&
                    (this._response || this._connect(),
                    this._response._onXHRProgress());
                }),
                (h.prototype._connect = function () {
                  var e = this;
                  e._destroyed ||
                    ((e._response = new u(
                      e._xhr,
                      e._fetchResponse,
                      e._mode,
                      e._fetchTimer
                    )),
                    e._response.on("error", function (t) {
                      e.emit("error", t);
                    }),
                    e.emit("response", e._response));
                }),
                (h.prototype._write = function (e, t, r) {
                  this._body.push(e), r();
                }),
                (h.prototype.abort = h.prototype.destroy =
                  function () {
                    (this._destroyed = !0),
                      r.g.clearTimeout(this._fetchTimer),
                      this._response && (this._response._destroyed = !0),
                      this._xhr
                        ? this._xhr.abort()
                        : this._fetchAbortController &&
                          this._fetchAbortController.abort();
                  }),
                (h.prototype.end = function (e, t, r) {
                  "function" == typeof e && ((r = e), (e = void 0)),
                    f.Writable.prototype.end.call(this, e, t, r);
                }),
                (h.prototype.flushHeaders = function () {}),
                (h.prototype.setTimeout = function () {}),
                (h.prototype.setNoDelay = function () {}),
                (h.prototype.setSocketKeepAlive = function () {});
              var d = [
                "accept-charset",
                "accept-encoding",
                "access-control-request-headers",
                "access-control-request-method",
                "connection",
                "content-length",
                "cookie",
                "cookie2",
                "date",
                "dnt",
                "expect",
                "host",
                "keep-alive",
                "origin",
                "referer",
                "te",
                "trailer",
                "transfer-encoding",
                "upgrade",
                "via",
              ];
            },
            254: function (e, t, o) {
              var a = o(301),
                s = o(782),
                l = o(726),
                f = (t.readyStates = {
                  UNSENT: 0,
                  OPENED: 1,
                  HEADERS_RECEIVED: 2,
                  LOADING: 3,
                  DONE: 4,
                }),
                u = (t.IncomingMessage = function (e, t, o, s) {
                  var f = this;
                  if (
                    (l.Readable.call(f),
                    (f._mode = o),
                    (f.headers = {}),
                    (f.rawHeaders = []),
                    (f.trailers = {}),
                    (f.rawTrailers = []),
                    f.on("end", function () {
                      n.nextTick(function () {
                        f.emit("close");
                      });
                    }),
                    "fetch" === o)
                  ) {
                    if (
                      ((f._fetchResponse = t),
                      (f.url = t.url),
                      (f.statusCode = t.status),
                      (f.statusMessage = t.statusText),
                      t.headers.forEach(function (e, t) {
                        (f.headers[t.toLowerCase()] = e),
                          f.rawHeaders.push(t, e);
                      }),
                      a.writableStream)
                    ) {
                      var u = new WritableStream({
                        write: function (e) {
                          return new Promise(function (t, r) {
                            f._destroyed
                              ? r()
                              : f.push(i.from(e))
                              ? t()
                              : (f._resumeFetch = t);
                          });
                        },
                        close: function () {
                          r.g.clearTimeout(s), f._destroyed || f.push(null);
                        },
                        abort: function (e) {
                          f._destroyed || f.emit("error", e);
                        },
                      });
                      try {
                        t.body.pipeTo(u).catch(function (e) {
                          r.g.clearTimeout(s),
                            f._destroyed || f.emit("error", e);
                        });
                        return;
                      } catch (e) {}
                    }
                    var c = t.body.getReader();
                    !(function e() {
                      c.read()
                        .then(function (t) {
                          if (!f._destroyed) {
                            if (t.done) {
                              r.g.clearTimeout(s), f.push(null);
                              return;
                            }
                            f.push(i.from(t.value)), e();
                          }
                        })
                        .catch(function (e) {
                          r.g.clearTimeout(s),
                            f._destroyed || f.emit("error", e);
                        });
                    })();
                  } else if (
                    ((f._xhr = e),
                    (f._pos = 0),
                    (f.url = e.responseURL),
                    (f.statusCode = e.status),
                    (f.statusMessage = e.statusText),
                    e
                      .getAllResponseHeaders()
                      .split(/\r?\n/)
                      .forEach(function (e) {
                        var t = e.match(/^([^:]+):\s*(.*)/);
                        if (t) {
                          var r = t[1].toLowerCase();
                          "set-cookie" === r
                            ? (void 0 === f.headers[r] && (f.headers[r] = []),
                              f.headers[r].push(t[2]))
                            : void 0 !== f.headers[r]
                            ? (f.headers[r] += ", " + t[2])
                            : (f.headers[r] = t[2]),
                            f.rawHeaders.push(t[1], t[2]);
                        }
                      }),
                    (f._charset = "x-user-defined"),
                    !a.overrideMimeType)
                  ) {
                    var h = f.rawHeaders["mime-type"];
                    if (h) {
                      var d = h.match(/;\s*charset=([^;])(;|$)/);
                      d && (f._charset = d[1].toLowerCase());
                    }
                    f._charset || (f._charset = "utf-8");
                  }
                });
              s(u, l.Readable),
                (u.prototype._read = function () {
                  var e = this._resumeFetch;
                  e && ((this._resumeFetch = null), e());
                }),
                (u.prototype._onXHRProgress = function () {
                  var e = this,
                    t = e._xhr,
                    n = null;
                  switch (e._mode) {
                    case "text":
                      if ((n = t.responseText).length > e._pos) {
                        var o = n.substr(e._pos);
                        if ("x-user-defined" === e._charset) {
                          for (
                            var a = i.alloc(o.length), s = 0;
                            s < o.length;
                            s++
                          )
                            a[s] = 255 & o.charCodeAt(s);
                          e.push(a);
                        } else e.push(o, e._charset);
                        e._pos = n.length;
                      }
                      break;
                    case "arraybuffer":
                      if (t.readyState !== f.DONE || !t.response) break;
                      (n = t.response), e.push(i.from(new Uint8Array(n)));
                      break;
                    case "moz-chunked-arraybuffer":
                      if (((n = t.response), t.readyState !== f.LOADING || !n))
                        break;
                      e.push(i.from(new Uint8Array(n)));
                      break;
                    case "ms-stream":
                      if (((n = t.response), t.readyState !== f.LOADING)) break;
                      var l = new r.g.MSStreamReader();
                      (l.onprogress = function () {
                        l.result.byteLength > e._pos &&
                          (e.push(
                            i.from(new Uint8Array(l.result.slice(e._pos)))
                          ),
                          (e._pos = l.result.byteLength));
                      }),
                        (l.onload = function () {
                          e.push(null);
                        }),
                        l.readAsArrayBuffer(n);
                  }
                  e._xhr.readyState === f.DONE &&
                    "ms-stream" !== e._mode &&
                    e.push(null);
                });
            },
            704: function (e, t, r) {
              "use strict";
              var n = r(55).Buffer,
                i =
                  n.isEncoding ||
                  function (e) {
                    switch ((e = "" + e) && e.toLowerCase()) {
                      case "hex":
                      case "utf8":
                      case "utf-8":
                      case "ascii":
                      case "binary":
                      case "base64":
                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                      case "raw":
                        return !0;
                      default:
                        return !1;
                    }
                  };
              function o(e) {
                var t;
                switch (
                  ((this.encoding = (function (e) {
                    var t = (function (e) {
                      var t;
                      if (!e) return "utf8";
                      for (;;)
                        switch (e) {
                          case "utf8":
                          case "utf-8":
                            return "utf8";
                          case "ucs2":
                          case "ucs-2":
                          case "utf16le":
                          case "utf-16le":
                            return "utf16le";
                          case "latin1":
                          case "binary":
                            return "latin1";
                          case "base64":
                          case "ascii":
                          case "hex":
                            return e;
                          default:
                            if (t) return;
                            (e = ("" + e).toLowerCase()), (t = !0);
                        }
                    })(e);
                    if ("string" != typeof t && (n.isEncoding === i || !i(e)))
                      throw Error("Unknown encoding: " + e);
                    return t || e;
                  })(e)),
                  this.encoding)
                ) {
                  case "utf16le":
                    (this.text = l), (this.end = f), (t = 4);
                    break;
                  case "utf8":
                    (this.fillLast = s), (t = 4);
                    break;
                  case "base64":
                    (this.text = u), (this.end = c), (t = 3);
                    break;
                  default:
                    (this.write = h), (this.end = d);
                    return;
                }
                (this.lastNeed = 0),
                  (this.lastTotal = 0),
                  (this.lastChar = n.allocUnsafe(t));
              }
              function a(e) {
                return e <= 127
                  ? 0
                  : e >> 5 == 6
                  ? 2
                  : e >> 4 == 14
                  ? 3
                  : e >> 3 == 30
                  ? 4
                  : e >> 6 == 2
                  ? -1
                  : -2;
              }
              function s(e) {
                var t = this.lastTotal - this.lastNeed,
                  r = (function (e, t, r) {
                    if ((192 & t[0]) != 128) return (e.lastNeed = 0), "�";
                    if (e.lastNeed > 1 && t.length > 1) {
                      if ((192 & t[1]) != 128) return (e.lastNeed = 1), "�";
                      if (e.lastNeed > 2 && t.length > 2 && (192 & t[2]) != 128)
                        return (e.lastNeed = 2), "�";
                    }
                  })(this, e, 0);
                return void 0 !== r
                  ? r
                  : this.lastNeed <= e.length
                  ? (e.copy(this.lastChar, t, 0, this.lastNeed),
                    this.lastChar.toString(this.encoding, 0, this.lastTotal))
                  : void (e.copy(this.lastChar, t, 0, e.length),
                    (this.lastNeed -= e.length));
              }
              function l(e, t) {
                if ((e.length - t) % 2 == 0) {
                  var r = e.toString("utf16le", t);
                  if (r) {
                    var n = r.charCodeAt(r.length - 1);
                    if (n >= 55296 && n <= 56319)
                      return (
                        (this.lastNeed = 2),
                        (this.lastTotal = 4),
                        (this.lastChar[0] = e[e.length - 2]),
                        (this.lastChar[1] = e[e.length - 1]),
                        r.slice(0, -1)
                      );
                  }
                  return r;
                }
                return (
                  (this.lastNeed = 1),
                  (this.lastTotal = 2),
                  (this.lastChar[0] = e[e.length - 1]),
                  e.toString("utf16le", t, e.length - 1)
                );
              }
              function f(e) {
                var t = e && e.length ? this.write(e) : "";
                if (this.lastNeed) {
                  var r = this.lastTotal - this.lastNeed;
                  return t + this.lastChar.toString("utf16le", 0, r);
                }
                return t;
              }
              function u(e, t) {
                var r = (e.length - t) % 3;
                return 0 === r
                  ? e.toString("base64", t)
                  : ((this.lastNeed = 3 - r),
                    (this.lastTotal = 3),
                    1 === r
                      ? (this.lastChar[0] = e[e.length - 1])
                      : ((this.lastChar[0] = e[e.length - 2]),
                        (this.lastChar[1] = e[e.length - 1])),
                    e.toString("base64", t, e.length - r));
              }
              function c(e) {
                var t = e && e.length ? this.write(e) : "";
                return this.lastNeed
                  ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed)
                  : t;
              }
              function h(e) {
                return e.toString(this.encoding);
              }
              function d(e) {
                return e && e.length ? this.write(e) : "";
              }
              (t.s = o),
                (o.prototype.write = function (e) {
                  var t, r;
                  if (0 === e.length) return "";
                  if (this.lastNeed) {
                    if (void 0 === (t = this.fillLast(e))) return "";
                    (r = this.lastNeed), (this.lastNeed = 0);
                  } else r = 0;
                  return r < e.length
                    ? t
                      ? t + this.text(e, r)
                      : this.text(e, r)
                    : t || "";
                }),
                (o.prototype.end = function (e) {
                  var t = e && e.length ? this.write(e) : "";
                  return this.lastNeed ? t + "�" : t;
                }),
                (o.prototype.text = function (e, t) {
                  var r = (function (e, t, r) {
                    var n = t.length - 1;
                    if (n < r) return 0;
                    var i = a(t[n]);
                    return i >= 0
                      ? (i > 0 && (e.lastNeed = i - 1), i)
                      : --n < r || -2 === i
                      ? 0
                      : (i = a(t[n])) >= 0
                      ? (i > 0 && (e.lastNeed = i - 2), i)
                      : --n < r || -2 === i
                      ? 0
                      : (i = a(t[n])) >= 0
                      ? (i > 0 && (2 === i ? (i = 0) : (e.lastNeed = i - 3)), i)
                      : 0;
                  })(this, e, t);
                  if (!this.lastNeed) return e.toString("utf8", t);
                  this.lastTotal = r;
                  var n = e.length - (r - this.lastNeed);
                  return e.copy(this.lastChar, 0, n), e.toString("utf8", t, n);
                }),
                (o.prototype.fillLast = function (e) {
                  if (this.lastNeed <= e.length)
                    return (
                      e.copy(
                        this.lastChar,
                        this.lastTotal - this.lastNeed,
                        0,
                        this.lastNeed
                      ),
                      this.lastChar.toString(this.encoding, 0, this.lastTotal)
                    );
                  e.copy(
                    this.lastChar,
                    this.lastTotal - this.lastNeed,
                    0,
                    e.length
                  ),
                    (this.lastNeed -= e.length);
                });
            },
            769: function (e) {
              e.exports = function (e, r) {
                if (t("noDeprecation")) return e;
                var n = !1;
                return function () {
                  if (!n) {
                    if (t("throwDeprecation")) throw Error(r);
                    t("traceDeprecation") ? console.trace(r) : console.warn(r),
                      (n = !0);
                  }
                  return e.apply(this, arguments);
                };
              };
              function t(e) {
                try {
                  if (!r.g.localStorage) return !1;
                } catch (e) {
                  return !1;
                }
                var t = r.g.localStorage[e];
                return null != t && "true" === String(t).toLowerCase();
              }
            },
            911: function (e) {
              e.exports = function () {
                for (var e = {}, r = 0; r < arguments.length; r++) {
                  var n = arguments[r];
                  for (var i in n) t.call(n, i) && (e[i] = n[i]);
                }
                return e;
              };
              var t = Object.prototype.hasOwnProperty;
            },
            300: function (e) {
              "use strict";
              e.exports = r(51642);
            },
            361: function (e) {
              "use strict";
              e.exports = r(35978);
            },
            781: function (e) {
              "use strict";
              e.exports = r(46994);
            },
            310: function (e) {
              "use strict";
              e.exports = r(40252);
            },
            837: function (e) {
              "use strict";
              e.exports = r(84864);
            },
          },
          o = {};
        function a(e) {
          var r = o[e];
          if (void 0 !== r) return r.exports;
          var n = (o[e] = { exports: {} }),
            i = !0;
          try {
            t[e](n, n.exports, a), (i = !1);
          } finally {
            i && delete o[e];
          }
          return n.exports;
        }
        (a.ab = "//"), (e.exports = a(813));
      })();
    },
    49130: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.hmac = t.HMAC = void 0);
      let n = r(34116),
        i = r(15906);
      class o extends i.Hash {
        constructor(e, t) {
          super(), (this.finished = !1), (this.destroyed = !1), (0, n.hash)(e);
          let r = (0, i.toBytes)(t);
          if (
            ((this.iHash = e.create()), "function" != typeof this.iHash.update)
          )
            throw Error("Expected instance of class which extends utils.Hash");
          (this.blockLen = this.iHash.blockLen),
            (this.outputLen = this.iHash.outputLen);
          let o = this.blockLen,
            a = new Uint8Array(o);
          a.set(r.length > o ? e.create().update(r).digest() : r);
          for (let e = 0; e < a.length; e++) a[e] ^= 54;
          this.iHash.update(a), (this.oHash = e.create());
          for (let e = 0; e < a.length; e++) a[e] ^= 106;
          this.oHash.update(a), a.fill(0);
        }
        update(e) {
          return (0, n.exists)(this), this.iHash.update(e), this;
        }
        digestInto(e) {
          (0, n.exists)(this),
            (0, n.bytes)(e, this.outputLen),
            (this.finished = !0),
            this.iHash.digestInto(e),
            this.oHash.update(e),
            this.oHash.digestInto(e),
            this.destroy();
        }
        digest() {
          let e = new Uint8Array(this.oHash.outputLen);
          return this.digestInto(e), e;
        }
        _cloneInto(e) {
          e || (e = Object.create(Object.getPrototypeOf(this), {}));
          let {
            oHash: t,
            iHash: r,
            finished: n,
            destroyed: i,
            blockLen: o,
            outputLen: a,
          } = this;
          return (
            (e.finished = n),
            (e.destroyed = i),
            (e.blockLen = o),
            (e.outputLen = a),
            (e.oHash = t._cloneInto(e.oHash)),
            (e.iHash = r._cloneInto(e.iHash)),
            e
          );
        }
        destroy() {
          (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
        }
      }
      (t.HMAC = o),
        (t.hmac = (e, t, r) => new o(e, t).update(r).digest()),
        (t.hmac.create = (e, t) => new o(e, t));
    },
    50797: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.intToUnpaddedBuffer =
          t.bigIntToUnpaddedBuffer =
          t.bigIntToHex =
          t.bufArrToArr =
          t.arrToBufArr =
          t.validateNoLeadingZeroes =
          t.baToJSON =
          t.toUtf8 =
          t.short =
          t.addHexPrefix =
          t.toUnsigned =
          t.fromSigned =
          t.bufferToInt =
          t.bigIntToBuffer =
          t.bufferToBigInt =
          t.bufferToHex =
          t.toBuffer =
          t.unpadHexString =
          t.unpadArray =
          t.unpadBuffer =
          t.setLengthRight =
          t.setLengthLeft =
          t.zeros =
          t.intToBuffer =
          t.intToHex =
            void 0);
      let i = r(54403),
        o = r(61363);
      (t.intToHex = function (e) {
        if (!Number.isSafeInteger(e) || e < 0)
          throw Error(`Received an invalid integer type: ${e}`);
        return `0x${e.toString(16)}`;
      }),
        (t.intToBuffer = function (e) {
          let r = (0, t.intToHex)(e);
          return n.from((0, o.padToEven)(r.slice(2)), "hex");
        }),
        (t.zeros = function (e) {
          return n.allocUnsafe(e).fill(0);
        });
      let a = function (e, r, n) {
        let i = (0, t.zeros)(r);
        return n
          ? e.length < r
            ? (e.copy(i), i)
            : e.slice(0, r)
          : e.length < r
          ? (e.copy(i, r - e.length), i)
          : e.slice(-r);
      };
      (t.setLengthLeft = function (e, t) {
        return (0, i.assertIsBuffer)(e), a(e, t, !1);
      }),
        (t.setLengthRight = function (e, t) {
          return (0, i.assertIsBuffer)(e), a(e, t, !0);
        });
      let s = function (e) {
        let t = e[0];
        for (; e.length > 0 && "0" === t.toString(); ) t = (e = e.slice(1))[0];
        return e;
      };
      function l(e) {
        let r = (0, t.bufferToHex)(e);
        return "0x" === r ? BigInt(0) : BigInt(r);
      }
      function f(e) {
        return (0, t.toBuffer)("0x" + e.toString(16));
      }
      (t.unpadBuffer = function (e) {
        return (0, i.assertIsBuffer)(e), s(e);
      }),
        (t.unpadArray = function (e) {
          return (0, i.assertIsArray)(e), s(e);
        }),
        (t.unpadHexString = function (e) {
          return (
            (0, i.assertIsHexString)(e),
            "0x" + s((e = (0, o.stripHexPrefix)(e)))
          );
        }),
        (t.toBuffer = function (e) {
          if (null == e) return n.allocUnsafe(0);
          if (n.isBuffer(e) || Array.isArray(e) || e instanceof Uint8Array)
            return n.from(e);
          if ("string" == typeof e) {
            if (!(0, o.isHexString)(e))
              throw Error(
                `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${e}`
              );
            return n.from((0, o.padToEven)((0, o.stripHexPrefix)(e)), "hex");
          }
          if ("number" == typeof e) return (0, t.intToBuffer)(e);
          if ("bigint" == typeof e) {
            if (e < BigInt(0))
              throw Error(
                `Cannot convert negative bigint to buffer. Given: ${e}`
              );
            let t = e.toString(16);
            return t.length % 2 && (t = "0" + t), n.from(t, "hex");
          }
          if (e.toArray) return n.from(e.toArray());
          if (e.toBuffer) return n.from(e.toBuffer());
          throw Error("invalid type");
        }),
        (t.bufferToHex = function (e) {
          return "0x" + (e = (0, t.toBuffer)(e)).toString("hex");
        }),
        (t.bufferToBigInt = l),
        (t.bigIntToBuffer = f),
        (t.bufferToInt = function (e) {
          let t = Number(l(e));
          if (!Number.isSafeInteger(t)) throw Error("Number exceeds 53 bits");
          return t;
        }),
        (t.fromSigned = function (e) {
          return BigInt.asIntN(256, l(e));
        }),
        (t.toUnsigned = function (e) {
          return f(BigInt.asUintN(256, e));
        }),
        (t.addHexPrefix = function (e) {
          return "string" != typeof e
            ? e
            : (0, o.isHexPrefixed)(e)
            ? e
            : "0x" + e;
        }),
        (t.short = function (e, t = 50) {
          let r = n.isBuffer(e) ? e.toString("hex") : e;
          return r.length <= t ? r : r.slice(0, t) + "…";
        }),
        (t.toUtf8 = function (e) {
          if ((e = (0, o.stripHexPrefix)(e)).length % 2 != 0)
            throw Error(
              "Invalid non-even hex string input for toUtf8() provided"
            );
          return n
            .from(e.replace(/^(00)+|(00)+$/g, ""), "hex")
            .toString("utf8");
        }),
        (t.baToJSON = function (e) {
          if (n.isBuffer(e)) return `0x${e.toString("hex")}`;
          if (e instanceof Array) {
            let r = [];
            for (let n = 0; n < e.length; n++) r.push((0, t.baToJSON)(e[n]));
            return r;
          }
        }),
        (t.validateNoLeadingZeroes = function (e) {
          for (let [t, r] of Object.entries(e))
            if (void 0 !== r && r.length > 0 && 0 === r[0])
              throw Error(
                `${t} cannot have leading zeroes, received: ${r.toString(
                  "hex"
                )}`
              );
        }),
        (t.arrToBufArr = function e(t) {
          return Array.isArray(t) ? t.map((t) => e(t)) : n.from(t);
        }),
        (t.bufArrToArr = function e(t) {
          return Array.isArray(t)
            ? t.map((t) => e(t))
            : Uint8Array.from(t ?? []);
        }),
        (t.bigIntToHex = (e) => "0x" + e.toString(16)),
        (t.bigIntToUnpaddedBuffer = function (e) {
          return (0, t.unpadBuffer)(f(e));
        }),
        (t.intToUnpaddedBuffer = function (e) {
          return (0, t.unpadBuffer)((0, t.intToBuffer)(e));
        });
    },
    51552: (e, t, r) => {
      "use strict";
      r.d(t, {
        Kk: () => d,
        NC: () => m,
        RF: () => u,
        Rg: () => h,
        eF: () => l,
        kW: () => w,
        km: () => c,
        oV: () => g,
        zL: () => s,
      });
      var n,
        i = r(3098),
        o = r(31704);
      function a(e = 6, t = !1) {
        return i.LV({
          encodeStream: (e, t) => {
            if (0n === t) return;
            let r = t < 0,
              n = BigInt(t),
              i = [];
            for (let e = r ? -n : n; e; e >>= 8n) i.push(Number(255n & e));
            i[i.length - 1] >= 128
              ? i.push(128 * !!r)
              : r && (i[i.length - 1] |= 128),
              e.bytes(new Uint8Array(i));
          },
          decodeStream: (r) => {
            let n = r.leftBytes;
            if (n > e)
              throw Error(`ScriptNum: number (${n}) bigger than limit=${e}`);
            if (0 === n) return 0n;
            if (t) {
              let e = r.bytes(n, !0);
              if (
                (127 & e[e.length - 1]) == 0 &&
                (n <= 1 || (128 & e[e.length - 2]) == 0)
              )
                throw Error("Non-minimally encoded ScriptNum");
            }
            let i = 0,
              o = 0n;
            for (let e = 0; e < n; ++e)
              o |= BigInt((i = r.byte())) << (8n * BigInt(e));
            return (
              i >= 128 && ((o &= (2n ** BigInt(8 * n) - 1n) >> 1n), (o = -o)), o
            );
          },
        });
      }
      function s(e, t = 4, r = !0) {
        if ("number" == typeof e) return e;
        if ((0, o.aY)(e))
          try {
            let n = a(t, r).decode(e);
            if (n > Number.MAX_SAFE_INTEGER) return;
            return Number(n);
          } catch (e) {}
      }
      !(function (e) {
        (e[(e.OP_0 = 0)] = "OP_0"),
          (e[(e.PUSHDATA1 = 76)] = "PUSHDATA1"),
          (e[(e.PUSHDATA2 = 77)] = "PUSHDATA2"),
          (e[(e.PUSHDATA4 = 78)] = "PUSHDATA4"),
          (e[(e["1NEGATE"] = 79)] = "1NEGATE"),
          (e[(e.RESERVED = 80)] = "RESERVED"),
          (e[(e.OP_1 = 81)] = "OP_1"),
          (e[(e.OP_2 = 82)] = "OP_2"),
          (e[(e.OP_3 = 83)] = "OP_3"),
          (e[(e.OP_4 = 84)] = "OP_4"),
          (e[(e.OP_5 = 85)] = "OP_5"),
          (e[(e.OP_6 = 86)] = "OP_6"),
          (e[(e.OP_7 = 87)] = "OP_7"),
          (e[(e.OP_8 = 88)] = "OP_8"),
          (e[(e.OP_9 = 89)] = "OP_9"),
          (e[(e.OP_10 = 90)] = "OP_10"),
          (e[(e.OP_11 = 91)] = "OP_11"),
          (e[(e.OP_12 = 92)] = "OP_12"),
          (e[(e.OP_13 = 93)] = "OP_13"),
          (e[(e.OP_14 = 94)] = "OP_14"),
          (e[(e.OP_15 = 95)] = "OP_15"),
          (e[(e.OP_16 = 96)] = "OP_16"),
          (e[(e.NOP = 97)] = "NOP"),
          (e[(e.VER = 98)] = "VER"),
          (e[(e.IF = 99)] = "IF"),
          (e[(e.NOTIF = 100)] = "NOTIF"),
          (e[(e.VERIF = 101)] = "VERIF"),
          (e[(e.VERNOTIF = 102)] = "VERNOTIF"),
          (e[(e.ELSE = 103)] = "ELSE"),
          (e[(e.ENDIF = 104)] = "ENDIF"),
          (e[(e.VERIFY = 105)] = "VERIFY"),
          (e[(e.RETURN = 106)] = "RETURN"),
          (e[(e.TOALTSTACK = 107)] = "TOALTSTACK"),
          (e[(e.FROMALTSTACK = 108)] = "FROMALTSTACK"),
          (e[(e["2DROP"] = 109)] = "2DROP"),
          (e[(e["2DUP"] = 110)] = "2DUP"),
          (e[(e["3DUP"] = 111)] = "3DUP"),
          (e[(e["2OVER"] = 112)] = "2OVER"),
          (e[(e["2ROT"] = 113)] = "2ROT"),
          (e[(e["2SWAP"] = 114)] = "2SWAP"),
          (e[(e.IFDUP = 115)] = "IFDUP"),
          (e[(e.DEPTH = 116)] = "DEPTH"),
          (e[(e.DROP = 117)] = "DROP"),
          (e[(e.DUP = 118)] = "DUP"),
          (e[(e.NIP = 119)] = "NIP"),
          (e[(e.OVER = 120)] = "OVER"),
          (e[(e.PICK = 121)] = "PICK"),
          (e[(e.ROLL = 122)] = "ROLL"),
          (e[(e.ROT = 123)] = "ROT"),
          (e[(e.SWAP = 124)] = "SWAP"),
          (e[(e.TUCK = 125)] = "TUCK"),
          (e[(e.CAT = 126)] = "CAT"),
          (e[(e.SUBSTR = 127)] = "SUBSTR"),
          (e[(e.LEFT = 128)] = "LEFT"),
          (e[(e.RIGHT = 129)] = "RIGHT"),
          (e[(e.SIZE = 130)] = "SIZE"),
          (e[(e.INVERT = 131)] = "INVERT"),
          (e[(e.AND = 132)] = "AND"),
          (e[(e.OR = 133)] = "OR"),
          (e[(e.XOR = 134)] = "XOR"),
          (e[(e.EQUAL = 135)] = "EQUAL"),
          (e[(e.EQUALVERIFY = 136)] = "EQUALVERIFY"),
          (e[(e.RESERVED1 = 137)] = "RESERVED1"),
          (e[(e.RESERVED2 = 138)] = "RESERVED2"),
          (e[(e["1ADD"] = 139)] = "1ADD"),
          (e[(e["1SUB"] = 140)] = "1SUB"),
          (e[(e["2MUL"] = 141)] = "2MUL"),
          (e[(e["2DIV"] = 142)] = "2DIV"),
          (e[(e.NEGATE = 143)] = "NEGATE"),
          (e[(e.ABS = 144)] = "ABS"),
          (e[(e.NOT = 145)] = "NOT"),
          (e[(e["0NOTEQUAL"] = 146)] = "0NOTEQUAL"),
          (e[(e.ADD = 147)] = "ADD"),
          (e[(e.SUB = 148)] = "SUB"),
          (e[(e.MUL = 149)] = "MUL"),
          (e[(e.DIV = 150)] = "DIV"),
          (e[(e.MOD = 151)] = "MOD"),
          (e[(e.LSHIFT = 152)] = "LSHIFT"),
          (e[(e.RSHIFT = 153)] = "RSHIFT"),
          (e[(e.BOOLAND = 154)] = "BOOLAND"),
          (e[(e.BOOLOR = 155)] = "BOOLOR"),
          (e[(e.NUMEQUAL = 156)] = "NUMEQUAL"),
          (e[(e.NUMEQUALVERIFY = 157)] = "NUMEQUALVERIFY"),
          (e[(e.NUMNOTEQUAL = 158)] = "NUMNOTEQUAL"),
          (e[(e.LESSTHAN = 159)] = "LESSTHAN"),
          (e[(e.GREATERTHAN = 160)] = "GREATERTHAN"),
          (e[(e.LESSTHANOREQUAL = 161)] = "LESSTHANOREQUAL"),
          (e[(e.GREATERTHANOREQUAL = 162)] = "GREATERTHANOREQUAL"),
          (e[(e.MIN = 163)] = "MIN"),
          (e[(e.MAX = 164)] = "MAX"),
          (e[(e.WITHIN = 165)] = "WITHIN"),
          (e[(e.RIPEMD160 = 166)] = "RIPEMD160"),
          (e[(e.SHA1 = 167)] = "SHA1"),
          (e[(e.SHA256 = 168)] = "SHA256"),
          (e[(e.HASH160 = 169)] = "HASH160"),
          (e[(e.HASH256 = 170)] = "HASH256"),
          (e[(e.CODESEPARATOR = 171)] = "CODESEPARATOR"),
          (e[(e.CHECKSIG = 172)] = "CHECKSIG"),
          (e[(e.CHECKSIGVERIFY = 173)] = "CHECKSIGVERIFY"),
          (e[(e.CHECKMULTISIG = 174)] = "CHECKMULTISIG"),
          (e[(e.CHECKMULTISIGVERIFY = 175)] = "CHECKMULTISIGVERIFY"),
          (e[(e.NOP1 = 176)] = "NOP1"),
          (e[(e.CHECKLOCKTIMEVERIFY = 177)] = "CHECKLOCKTIMEVERIFY"),
          (e[(e.CHECKSEQUENCEVERIFY = 178)] = "CHECKSEQUENCEVERIFY"),
          (e[(e.NOP4 = 179)] = "NOP4"),
          (e[(e.NOP5 = 180)] = "NOP5"),
          (e[(e.NOP6 = 181)] = "NOP6"),
          (e[(e.NOP7 = 182)] = "NOP7"),
          (e[(e.NOP8 = 183)] = "NOP8"),
          (e[(e.NOP9 = 184)] = "NOP9"),
          (e[(e.NOP10 = 185)] = "NOP10"),
          (e[(e.CHECKSIGADD = 186)] = "CHECKSIGADD"),
          (e[(e.INVALID = 255)] = "INVALID");
      })(n || (n = {}));
      let l = i.LV({
          encodeStream: (e, t) => {
            for (let r of t) {
              if ("string" == typeof r) {
                if (void 0 === n[r]) throw Error(`Unknown opcode=${r}`);
                e.byte(n[r]);
                continue;
              }
              if ("number" == typeof r) {
                if (0 === r) {
                  e.byte(0);
                  continue;
                }
                if (1 <= r && r <= 16) {
                  e.byte(n.OP_1 - 1 + r);
                  continue;
                }
              }
              if (
                ("number" == typeof r && (r = a().encode(BigInt(r))),
                !(0, o.aY)(r))
              )
                throw Error(`Wrong Script OP=${r} (${typeof r})`);
              let t = r.length;
              t < n.PUSHDATA1
                ? e.byte(t)
                : t <= 255
                ? (e.byte(n.PUSHDATA1), e.byte(t))
                : t <= 65535
                ? (e.byte(n.PUSHDATA2), e.bytes(i.MX.encode(t)))
                : (e.byte(n.PUSHDATA4), e.bytes(i.QK.encode(t))),
                e.bytes(r);
            }
          },
          decodeStream: (e) => {
            let t = [];
            for (; !e.isEnd(); ) {
              let r = e.byte();
              if (n.OP_0 < r && r <= n.PUSHDATA4) {
                let o;
                if (r < n.PUSHDATA1) o = r;
                else if (r === n.PUSHDATA1) o = i.U8.decodeStream(e);
                else if (r === n.PUSHDATA2) o = i.MX.decodeStream(e);
                else if (r === n.PUSHDATA4) o = i.QK.decodeStream(e);
                else throw Error("Should be not possible");
                t.push(e.bytes(o));
              } else if (0 === r) t.push(0);
              else if (n.OP_1 <= r && r <= n.OP_16) t.push(r - (n.OP_1 - 1));
              else {
                let e = n[r];
                if (void 0 === e)
                  throw Error(`Unknown opcode=${r.toString(16)}`);
                t.push(e);
              }
            }
            return t;
          },
        }),
        f = {
          253: [253, 2, 253n, 65535n],
          254: [254, 4, 65536n, 4294967295n],
          255: [255, 8, 4294967296n, 0xffffffffffffffffn],
        },
        u = i.LV({
          encodeStream: (e, t) => {
            if (("number" == typeof t && (t = BigInt(t)), 0n <= t && t <= 252n))
              return e.byte(Number(t));
            for (let [r, n, i, o] of Object.values(f))
              if (!(i > t) && !(t > o)) {
                e.byte(r);
                for (let r = 0; r < n; r++)
                  e.byte(Number((t >> (8n * BigInt(r))) & 255n));
                return;
              }
            throw e.err(`VarInt too big: ${t}`);
          },
          decodeStream: (e) => {
            let t = e.byte();
            if (t <= 252) return BigInt(t);
            let [r, n, i] = f[t],
              o = 0n;
            for (let t = 0; t < n; t++)
              o |= BigInt(e.byte()) << (8n * BigInt(t));
            if (o < i) throw e.err(`Wrong CompactSize(${8 * n})`);
            return o;
          },
        }),
        c = i.Bb(u, i.Lo.numberBigint),
        h = i.ee(u),
        d = i.YO(c, h),
        p = (e) => i.YO(u, e),
        y = i.w3({
          txid: i.ee(32, !0),
          index: i.QK,
          finalScriptSig: h,
          sequence: i.QK,
        }),
        g = i.w3({ amount: i.dg, script: h }),
        b = i.w3({
          version: i.eV,
          segwitFlag: i.Jt(new Uint8Array([0, 1])),
          inputs: p(y),
          outputs: p(g),
          witnesses: i.fv("segwitFlag", i.YO("inputs/length", d)),
          lockTime: i.QK,
        }),
        m = i.tf(b, function (e) {
          if (e.segwitFlag && e.witnesses && !e.witnesses.length)
            throw Error("Segwit flag with empty witnesses array");
          return e;
        }),
        w = i.w3({
          version: i.eV,
          inputs: p(y),
          outputs: p(g),
          lockTime: i.QK,
        });
    },
    52344: (e, t, r) => {
      "use strict";
      r.d(t, {
        Az: () => f,
        DM: () => l,
        TQ: () => o,
        ol: () => a,
        r9: () => i,
        tT: () => u,
        yc: () => s,
      });
      var n = r(84080);
      function i(e, t, r) {
        return (e & t) ^ (~e & r);
      }
      function o(e, t, r) {
        return (e & t) ^ (e & r) ^ (t & r);
      }
      class a extends n.Vw {
        constructor(e, t, r, i) {
          super(),
            (this.finished = !1),
            (this.length = 0),
            (this.pos = 0),
            (this.destroyed = !1),
            (this.blockLen = e),
            (this.outputLen = t),
            (this.padOffset = r),
            (this.isLE = i),
            (this.buffer = new Uint8Array(e)),
            (this.view = (0, n.O8)(this.buffer));
        }
        update(e) {
          (0, n.CC)(this), (e = (0, n.ZJ)(e)), (0, n.DO)(e);
          let { view: t, buffer: r, blockLen: i } = this,
            o = e.length;
          for (let a = 0; a < o; ) {
            let s = Math.min(i - this.pos, o - a);
            if (s === i) {
              let t = (0, n.O8)(e);
              for (; i <= o - a; a += i) this.process(t, a);
              continue;
            }
            r.set(e.subarray(a, a + s), this.pos),
              (this.pos += s),
              (a += s),
              this.pos === i && (this.process(t, 0), (this.pos = 0));
          }
          return (this.length += e.length), this.roundClean(), this;
        }
        digestInto(e) {
          (0, n.CC)(this), (0, n.Ht)(e, this), (this.finished = !0);
          let { buffer: t, view: r, blockLen: i, isLE: o } = this,
            { pos: a } = this;
          (t[a++] = 128),
            (0, n.uH)(this.buffer.subarray(a)),
            this.padOffset > i - a && (this.process(r, 0), (a = 0));
          for (let e = a; e < i; e++) t[e] = 0;
          !(function (e, t, r, n) {
            if ("function" == typeof e.setBigUint64)
              return e.setBigUint64(t, r, n);
            let i = BigInt(32),
              o = BigInt(0xffffffff),
              a = Number((r >> i) & o),
              s = Number(r & o),
              l = 4 * !!n,
              f = 4 * !n;
            e.setUint32(t + l, a, n), e.setUint32(t + f, s, n);
          })(r, i - 8, BigInt(8 * this.length), o),
            this.process(r, 0);
          let s = (0, n.O8)(e),
            l = this.outputLen;
          if (l % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
          let f = l / 4,
            u = this.get();
          if (f > u.length) throw Error("_sha2: outputLen bigger than state");
          for (let e = 0; e < f; e++) s.setUint32(4 * e, u[e], o);
        }
        digest() {
          let { buffer: e, outputLen: t } = this;
          this.digestInto(e);
          let r = e.slice(0, t);
          return this.destroy(), r;
        }
        _cloneInto(e) {
          e || (e = new this.constructor()), e.set(...this.get());
          let {
            blockLen: t,
            buffer: r,
            length: n,
            finished: i,
            destroyed: o,
            pos: a,
          } = this;
          return (
            (e.destroyed = o),
            (e.finished = i),
            (e.length = n),
            (e.pos = a),
            n % t && e.buffer.set(r),
            e
          );
        }
        clone() {
          return this._cloneInto();
        }
      }
      let s = Uint32Array.from([
          0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f,
          0x9b05688c, 0x1f83d9ab, 0x5be0cd19,
        ]),
        l = Uint32Array.from([
          0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31,
          0x68581511, 0x64f98fa7, 0xbefa4fa4,
        ]),
        f = Uint32Array.from([
          0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a,
          0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31,
          0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d,
          0xbefa4fa4,
        ]),
        u = Uint32Array.from([
          0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372,
          0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1,
          0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19,
          0x137e2179,
        ]);
    },
    52577: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.GWEI_TO_WEI = void 0),
        (t.GWEI_TO_WEI = BigInt(1e9));
    },
    52659: (e, t, r) => {
      "use strict";
      r.d(t, { Y: () => n });
      let n = (0, r(12644).x)({
        id: 421614,
        name: "Arbitrum Sepolia",
        nativeCurrency: {
          name: "Arbitrum Sepolia Ether",
          symbol: "ETH",
          decimals: 18,
        },
        rpcUrls: {
          default: { http: ["https://sepolia-rollup.arbitrum.io/rpc"] },
        },
        blockExplorers: {
          default: {
            name: "Arbiscan",
            url: "https://sepolia.arbiscan.io",
            apiUrl: "https://api-sepolia.arbiscan.io/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 81930,
          },
        },
        testnet: !0,
      });
    },
    54403: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.assertIsString =
          t.assertIsArray =
          t.assertIsBuffer =
          t.assertIsHexString =
            void 0);
      let i = r(61363);
      (t.assertIsHexString = function (e) {
        if (!(0, i.isHexString)(e))
          throw Error(
            `This method only supports 0x-prefixed hex strings but input was: ${e}`
          );
      }),
        (t.assertIsBuffer = function (e) {
          if (!n.isBuffer(e))
            throw Error(`This method only supports Buffer but input was: ${e}`);
        }),
        (t.assertIsArray = function (e) {
          if (!Array.isArray(e))
            throw Error(
              `This method only supports number arrays but input was: ${e}`
            );
        }),
        (t.assertIsString = function (e) {
          if ("string" != typeof e)
            throw Error(
              `This method only supports strings but input was: ${e}`
            );
        });
    },
    55416: (e, t, r) => {
      "use strict";
      r.d(t, { N: () => n });
      let n = (0, r(12644).x)({
        id: 56,
        name: "BNB Smart Chain",
        nativeCurrency: { decimals: 18, name: "BNB", symbol: "BNB" },
        rpcUrls: { default: { http: ["https://56.rpc.thirdweb.com"] } },
        blockExplorers: {
          default: {
            name: "BscScan",
            url: "https://bscscan.com",
            apiUrl: "https://api.bscscan.com/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 0xf2f12c,
          },
        },
      });
    },
    57488: (e, t, r) => {
      "use strict";
      r.d(t, { t: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 420,
        name: "Optimism Goerli",
        nativeCurrency: { name: "Goerli Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://goerli.optimism.io"] } },
        blockExplorers: {
          default: {
            name: "Etherscan",
            url: "https://goerli-optimism.etherscan.io",
            apiUrl: "https://goerli-optimism.etherscan.io/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          l2OutputOracle: {
            5: { address: "0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0" },
          },
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 49461,
          },
          portal: {
            5: { address: "0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383" },
          },
          l1StandardBridge: {
            5: { address: "0x636Af16bf2f682dD3109e60102b8E1A089FedAa8" },
          },
        },
        testnet: !0,
        sourceId: 5,
      });
    },
    57953: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.bitMask = void 0),
        (t.isBytes = o),
        (t.abytes = a),
        (t.bytesToHex = l),
        (t.numberToHexUnpadded = f),
        (t.hexToNumber = u),
        (t.hexToBytes = d),
        (t.bytesToNumberBE = function (e) {
          return u(l(e));
        }),
        (t.bytesToNumberLE = function (e) {
          return a(e), u(l(Uint8Array.from(e).reverse()));
        }),
        (t.numberToBytesBE = p),
        (t.numberToBytesLE = function (e, t) {
          return p(e, t).reverse();
        }),
        (t.numberToVarBytesBE = function (e) {
          return d(f(e));
        }),
        (t.ensureBytes = function (e, t, r) {
          let n;
          if ("string" == typeof t)
            try {
              n = d(t);
            } catch (r) {
              throw Error(
                `${e} must be valid hex string, got "${t}". Cause: ${r}`
              );
            }
          else if (o(t)) n = Uint8Array.from(t);
          else throw Error(`${e} must be hex string or Uint8Array`);
          let i = n.length;
          if ("number" == typeof r && i !== r)
            throw Error(`${e} expected ${r} bytes, got ${i}`);
          return n;
        }),
        (t.concatBytes = y),
        (t.equalBytes = function (e, t) {
          if (e.length !== t.length) return !1;
          let r = 0;
          for (let n = 0; n < e.length; n++) r |= e[n] ^ t[n];
          return 0 === r;
        }),
        (t.utf8ToBytes = function (e) {
          if ("string" != typeof e)
            throw Error(`utf8ToBytes expected string, got ${typeof e}`);
          return new Uint8Array(new TextEncoder().encode(e));
        }),
        (t.bitLen = function (e) {
          let t;
          for (t = 0; e > r; e >>= n, t += 1);
          return t;
        }),
        (t.bitGet = function (e, t) {
          return (e >> BigInt(t)) & n;
        }),
        (t.bitSet = function (e, t, i) {
          return e | ((i ? n : r) << BigInt(t));
        }),
        (t.createHmacDrbg = function (e, t, r) {
          if ("number" != typeof e || e < 2)
            throw Error("hashLen must be a number");
          if ("number" != typeof t || t < 2)
            throw Error("qByteLen must be a number");
          if ("function" != typeof r) throw Error("hmacFn must be a function");
          let n = g(e),
            i = g(e),
            o = 0,
            a = () => {
              n.fill(1), i.fill(0), (o = 0);
            },
            s = (...e) => r(i, n, ...e),
            l = (e = g()) => {
              (i = s(b([0]), e)),
                (n = s()),
                0 !== e.length && ((i = s(b([1]), e)), (n = s()));
            },
            f = () => {
              if (o++ >= 1e3) throw Error("drbg: tried 1000 values");
              let e = 0,
                r = [];
              for (; e < t; ) {
                let t = (n = s()).slice();
                r.push(t), (e += n.length);
              }
              return y(...r);
            };
          return (e, t) => {
            let r;
            for (a(), l(e); !(r = t(f())); ) l();
            return a(), r;
          };
        }),
        (t.validateObject = function (e, t, r = {}) {
          let n = (t, r, n) => {
            let i = m[r];
            if ("function" != typeof i)
              throw Error(`Invalid validator "${r}", expected function`);
            let o = e[t];
            if ((!n || void 0 !== o) && !i(o, e))
              throw Error(
                `Invalid param ${String(t)}=${o} (${typeof o}), expected ${r}`
              );
          };
          for (let [e, r] of Object.entries(t)) n(e, r, !1);
          for (let [e, t] of Object.entries(r)) n(e, t, !0);
          return e;
        });
      let r = BigInt(0),
        n = BigInt(1),
        i = BigInt(2);
      function o(e) {
        return (
          e instanceof Uint8Array ||
          (null != e &&
            "object" == typeof e &&
            "Uint8Array" === e.constructor.name)
        );
      }
      function a(e) {
        if (!o(e)) throw Error("Uint8Array expected");
      }
      let s = Array.from({ length: 256 }, (e, t) =>
        t.toString(16).padStart(2, "0")
      );
      function l(e) {
        a(e);
        let t = "";
        for (let r = 0; r < e.length; r++) t += s[e[r]];
        return t;
      }
      function f(e) {
        let t = e.toString(16);
        return 1 & t.length ? `0${t}` : t;
      }
      function u(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        return BigInt("" === e ? "0" : `0x${e}`);
      }
      let c = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
      function h(e) {
        return e >= c._0 && e <= c._9
          ? e - c._0
          : e >= c._A && e <= c._F
          ? e - (c._A - 10)
          : e >= c._a && e <= c._f
          ? e - (c._a - 10)
          : void 0;
      }
      function d(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        let t = e.length,
          r = t / 2;
        if (t % 2)
          throw Error(
            "padded hex string expected, got unpadded hex of length " + t
          );
        let n = new Uint8Array(r);
        for (let t = 0, i = 0; t < r; t++, i += 2) {
          let r = h(e.charCodeAt(i)),
            o = h(e.charCodeAt(i + 1));
          if (void 0 === r || void 0 === o)
            throw Error(
              'hex string expected, got non-hex character "' +
                (e[i] + e[i + 1]) +
                '" at index ' +
                i
            );
          n[t] = 16 * r + o;
        }
        return n;
      }
      function p(e, t) {
        return d(e.toString(16).padStart(2 * t, "0"));
      }
      function y(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          a(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      t.bitMask = (e) => (i << BigInt(e - 1)) - n;
      let g = (e) => new Uint8Array(e),
        b = (e) => Uint8Array.from(e),
        m = {
          bigint: (e) => "bigint" == typeof e,
          function: (e) => "function" == typeof e,
          boolean: (e) => "boolean" == typeof e,
          string: (e) => "string" == typeof e,
          stringOrUint8Array: (e) => "string" == typeof e || o(e),
          isSafeInteger: (e) => Number.isSafeInteger(e),
          array: (e) => Array.isArray(e),
          field: (e, t) => t.Fp.isValid(e),
          hash: (e) =>
            "function" == typeof e && Number.isSafeInteger(e.outputLen),
        };
    },
    61363: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer;
      function i(e) {
        if ("string" != typeof e)
          throw Error(
            `[isHexPrefixed] input must be type 'string', received type ${typeof e}`
          );
        return "0" === e[0] && "x" === e[1];
      }
      function o(e) {
        let t = e;
        if ("string" != typeof t)
          throw Error(
            `[padToEven] value must be type 'string', received ${typeof t}`
          );
        return t.length % 2 && (t = `0${t}`), t;
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isHexString =
          t.getKeys =
          t.fromAscii =
          t.fromUtf8 =
          t.toAscii =
          t.arrayContainsArray =
          t.getBinarySize =
          t.padToEven =
          t.stripHexPrefix =
          t.isHexPrefixed =
            void 0),
        (t.isHexPrefixed = i),
        (t.stripHexPrefix = (e) => {
          if ("string" != typeof e)
            throw Error(
              `[stripHexPrefix] input must be type 'string', received ${typeof e}`
            );
          return i(e) ? e.slice(2) : e;
        }),
        (t.padToEven = o),
        (t.getBinarySize = function (e) {
          if ("string" != typeof e)
            throw Error(
              `[getBinarySize] method requires input type 'string', received ${typeof e}`
            );
          return n.byteLength(e, "utf8");
        }),
        (t.arrayContainsArray = function (e, t, r) {
          if (!0 !== Array.isArray(e))
            throw Error(
              `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof e}'`
            );
          if (!0 !== Array.isArray(t))
            throw Error(
              `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof t}'`
            );
          return t[!0 === r ? "some" : "every"]((t) => e.indexOf(t) >= 0);
        }),
        (t.toAscii = function (e) {
          let t = "",
            r = 0,
            n = e.length;
          for ("0x" === e.substring(0, 2) && (r = 2); r < n; r += 2)
            t += String.fromCharCode(parseInt(e.substr(r, 2), 16));
          return t;
        }),
        (t.fromUtf8 = function (e) {
          let t = n.from(e, "utf8");
          return `0x${o(t.toString("hex")).replace(/^0+|0+$/g, "")}`;
        }),
        (t.fromAscii = function (e) {
          let t = "";
          for (let r = 0; r < e.length; r++) {
            let n = e.charCodeAt(r).toString(16);
            t += n.length < 2 ? `0${n}` : n;
          }
          return `0x${t}`;
        }),
        (t.getKeys = function (e, t, r) {
          if (!Array.isArray(e))
            throw Error(
              `[getKeys] method expects input 'params' to be an array, got ${typeof e}`
            );
          if ("string" != typeof t)
            throw Error(
              `[getKeys] method expects input 'key' to be type 'string', got ${typeof e}`
            );
          let n = [];
          for (let i = 0; i < e.length; i++) {
            let o = e[i][t];
            if (!0 !== r || o) {
              if ("string" != typeof o)
                throw Error(
                  `invalid abi - expected type 'string', received ${typeof o}`
                );
            } else o = "";
            n.push(o);
          }
          return n;
        }),
        (t.isHexString = function (e, t) {
          return (
            "string" == typeof e &&
            !!e.match(/^0x[0-9A-Fa-f]*$/) &&
            (void 0 === t || !(t > 0) || e.length === 2 + 2 * t)
          );
        });
    },
    62504: (e, t) => {
      "use strict";
      function r(e) {
        if (Array.isArray(e)) {
          let t = [],
            n = 0;
          for (let i = 0; i < e.length; i++) {
            let o = r(e[i]);
            t.push(o), (n += o.length);
          }
          return c(o(n, 192), ...t);
        }
        let t = y(e);
        return 1 === t.length && t[0] < 128 ? t : c(o(t.length, 128), t);
      }
      function n(e, t, r) {
        if (r > e.length)
          throw Error(
            "invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds"
          );
        return e.slice(t, r);
      }
      function i(e) {
        if (0 === e[0]) throw Error("invalid RLP: extra zeros");
        return f(l(e));
      }
      function o(e, t) {
        if (e < 56) return Uint8Array.from([e + t]);
        let r = d(e),
          n = d(t + 55 + r.length / 2);
        return Uint8Array.from(u(n + r));
      }
      function a(e, t = !1) {
        if (null == e || 0 === e.length) return Uint8Array.from([]);
        let r = (function e(t) {
          let r, o, a, s, l;
          let f = [],
            u = t[0];
          if (u <= 127) return { data: t.slice(0, 1), remainder: t.slice(1) };
          if (u <= 183) {
            if (
              ((r = u - 127),
              (a = 128 === u ? Uint8Array.from([]) : n(t, 1, r)),
              2 === r && a[0] < 128)
            )
              throw Error(
                "invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed"
              );
            return { data: a, remainder: t.slice(r) };
          }
          if (u <= 191) {
            if (((o = u - 182), t.length - 1 < o))
              throw Error("invalid RLP: not enough bytes for string length");
            if ((r = i(n(t, 1, o))) <= 55)
              throw Error(
                "invalid RLP: expected string length to be greater than 55"
              );
            return { data: (a = n(t, o, r + o)), remainder: t.slice(r + o) };
          }
          if (u <= 247) {
            for (s = n(t, 1, (r = u - 191)); s.length; )
              (l = e(s)), f.push(l.data), (s = l.remainder);
            return { data: f, remainder: t.slice(r) };
          }
          {
            if ((r = i(n(t, 1, (o = u - 246)))) < 56)
              throw Error("invalid RLP: encoded list too short");
            let a = o + r;
            if (a > t.length)
              throw Error("invalid RLP: total length is larger than the data");
            for (s = n(t, o, a); s.length; )
              (l = e(s)), f.push(l.data), (s = l.remainder);
            return { data: f, remainder: t.slice(a) };
          }
        })(y(e));
        if (t) return r;
        if (0 !== r.remainder.length)
          throw Error("invalid RLP: remainder must be zero");
        return r.data;
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.RLP = t.utils = t.decode = t.encode = void 0),
        (t.encode = r),
        (t.decode = a);
      let s = Array.from({ length: 256 }, (e, t) =>
        t.toString(16).padStart(2, "0")
      );
      function l(e) {
        let t = "";
        for (let r = 0; r < e.length; r++) t += s[e[r]];
        return t;
      }
      function f(e) {
        let t = Number.parseInt(e, 16);
        if (Number.isNaN(t)) throw Error("Invalid byte sequence");
        return t;
      }
      function u(e) {
        if ("string" != typeof e)
          throw TypeError("hexToBytes: expected string, got " + typeof e);
        if (e.length % 2)
          throw Error("hexToBytes: received invalid unpadded hex");
        let t = new Uint8Array(e.length / 2);
        for (let r = 0; r < t.length; r++) {
          let n = 2 * r;
          t[r] = f(e.slice(n, n + 2));
        }
        return t;
      }
      function c(...e) {
        if (1 === e.length) return e[0];
        let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0));
        for (let r = 0, n = 0; r < e.length; r++) {
          let i = e[r];
          t.set(i, n), (n += i.length);
        }
        return t;
      }
      function h(e) {
        return new TextEncoder().encode(e);
      }
      function d(e) {
        if (e < 0)
          throw Error("Invalid integer as argument, must be unsigned!");
        let t = e.toString(16);
        return t.length % 2 ? `0${t}` : t;
      }
      function p(e) {
        return e.length >= 2 && "0" === e[0] && "x" === e[1];
      }
      function y(e) {
        if (e instanceof Uint8Array) return e;
        if ("string" == typeof e) {
          if (p(e)) {
            var t;
            return u(
              (t = "string" != typeof e ? e : p(e) ? e.slice(2) : e).length % 2
                ? `0${t}`
                : t
            );
          }
          return h(e);
        }
        if ("number" == typeof e || "bigint" == typeof e)
          return e ? u(d(e)) : Uint8Array.from([]);
        if (null == e) return Uint8Array.from([]);
        throw Error("toBytes: received unsupported type " + typeof e);
      }
      (t.utils = {
        bytesToHex: l,
        concatBytes: c,
        hexToBytes: u,
        utf8ToBytes: h,
      }),
        (t.RLP = { encode: r, decode: a });
    },
    64976: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.DER = void 0),
        (t.weierstrassPoints = p),
        (t.weierstrass = function (e) {
          let r = (function (e) {
              let t = (0, n.validateBasic)(e);
              return (
                o.validateObject(
                  t,
                  { hash: "hash", hmac: "function", randomBytes: "function" },
                  {
                    bits2int: "function",
                    bits2int_modN: "function",
                    lowS: "boolean",
                  }
                ),
                Object.freeze({ lowS: !0, ...t })
              );
            })(e),
            { Fp: s, n: l } = r,
            c = s.BYTES + 1,
            h = 2 * s.BYTES + 1;
          function d(e) {
            return i.mod(e, l);
          }
          function y(e) {
            return i.invert(e, l);
          }
          let {
              ProjectivePoint: g,
              normPrivateKeyToScalar: b,
              weierstrassEquation: m,
              isWithinCurveOrder: w,
            } = p({
              ...r,
              toBytes(e, t, r) {
                let n = t.toAffine(),
                  i = s.toBytes(n.x),
                  a = o.concatBytes;
                return r
                  ? a(Uint8Array.from([t.hasEvenY() ? 2 : 3]), i)
                  : a(Uint8Array.from([4]), i, s.toBytes(n.y));
              },
              fromBytes(e) {
                let t = e.length,
                  r = e[0],
                  n = e.subarray(1);
                if (t === c && (2 === r || 3 === r)) {
                  let e;
                  let t = o.bytesToNumberBE(n);
                  if (!(f < t && t < s.ORDER))
                    throw Error("Point is not on curve");
                  let i = m(t);
                  try {
                    e = s.sqrt(i);
                  } catch (e) {
                    throw Error(
                      "Point is not on curve" +
                        (e instanceof Error ? ": " + e.message : "")
                    );
                  }
                  return (
                    ((1 & r) == 1) != ((e & u) === u) && (e = s.neg(e)),
                    { x: t, y: e }
                  );
                }
                if (t === h && 4 === r)
                  return {
                    x: s.fromBytes(n.subarray(0, s.BYTES)),
                    y: s.fromBytes(n.subarray(s.BYTES, 2 * s.BYTES)),
                  };
                throw Error(
                  `Point of length ${t} was invalid. Expected ${c} compressed bytes or ${h} uncompressed bytes`
                );
              },
            }),
            v = (e) => o.bytesToHex(o.numberToBytesBE(e, r.nByteLength)),
            x = (e, t, r) => o.bytesToNumberBE(e.slice(t, r));
          class E {
            constructor(e, t, r) {
              (this.r = e),
                (this.s = t),
                (this.recovery = r),
                this.assertValidity();
            }
            static fromCompact(e) {
              let t = r.nByteLength;
              return new E(
                x((e = (0, a.ensureBytes)("compactSignature", e, 2 * t)), 0, t),
                x(e, t, 2 * t)
              );
            }
            static fromDER(e) {
              let { r, s: n } = t.DER.toSig((0, a.ensureBytes)("DER", e));
              return new E(r, n);
            }
            assertValidity() {
              if (!w(this.r)) throw Error("r must be 0 < r < CURVE.n");
              if (!w(this.s)) throw Error("s must be 0 < s < CURVE.n");
            }
            addRecoveryBit(e) {
              return new E(this.r, this.s, e);
            }
            recoverPublicKey(e) {
              let { r: t, s: n, recovery: i } = this,
                o = A((0, a.ensureBytes)("msgHash", e));
              if (null == i || ![0, 1, 2, 3].includes(i))
                throw Error("recovery id invalid");
              let l = 2 === i || 3 === i ? t + r.n : t;
              if (l >= s.ORDER) throw Error("recovery id 2 or 3 invalid");
              let f = (1 & i) == 0 ? "02" : "03",
                u = g.fromHex(f + v(l)),
                c = y(l),
                h = d(-o * c),
                p = d(n * c),
                b = g.BASE.multiplyAndAddUnsafe(u, h, p);
              if (!b) throw Error("point at infinify");
              return b.assertValidity(), b;
            }
            hasHighS() {
              return this.s > l >> u;
            }
            normalizeS() {
              return this.hasHighS()
                ? new E(this.r, d(-this.s), this.recovery)
                : this;
            }
            toDERRawBytes() {
              return o.hexToBytes(this.toDERHex());
            }
            toDERHex() {
              return t.DER.hexFromSig({ r: this.r, s: this.s });
            }
            toCompactRawBytes() {
              return o.hexToBytes(this.toCompactHex());
            }
            toCompactHex() {
              return v(this.r) + v(this.s);
            }
          }
          function _(e) {
            let t = o.isBytes(e),
              r = "string" == typeof e,
              n = (t || r) && e.length;
            return t
              ? n === c || n === h
              : r
              ? n === 2 * c || n === 2 * h
              : e instanceof g;
          }
          let S =
              r.bits2int ||
              function (e) {
                let t = o.bytesToNumberBE(e),
                  n = 8 * e.length - r.nBitLength;
                return n > 0 ? t >> BigInt(n) : t;
              },
            A =
              r.bits2int_modN ||
              function (e) {
                return d(S(e));
              },
            B = o.bitMask(r.nBitLength);
          function k(e) {
            if ("bigint" != typeof e) throw Error("bigint expected");
            if (!(f <= e && e < B))
              throw Error(`bigint expected < 2^${r.nBitLength}`);
            return o.numberToBytesBE(e, r.nByteLength);
          }
          let O = { lowS: r.lowS, prehash: !1 },
            T = { lowS: r.lowS, prehash: !1 };
          return (
            g.BASE._setWindowSize(8),
            {
              CURVE: r,
              getPublicKey: function (e, t = !0) {
                return g.fromPrivateKey(e).toRawBytes(t);
              },
              getSharedSecret: function (e, t, r = !0) {
                if (_(e)) throw Error("first arg must be private key");
                if (!_(t)) throw Error("second arg must be public key");
                return g.fromHex(t).multiply(b(e)).toRawBytes(r);
              },
              sign: function (e, t, n = O) {
                let { seed: i, k2sig: c } = (function (e, t, n = O) {
                  if (["recovered", "canonical"].some((e) => e in n))
                    throw Error("sign() legacy options not supported");
                  let { hash: i, randomBytes: c } = r,
                    { lowS: h, prehash: p, extraEntropy: m } = n;
                  null == h && (h = !0),
                    (e = (0, a.ensureBytes)("msgHash", e)),
                    p && (e = (0, a.ensureBytes)("prehashed msgHash", i(e)));
                  let v = A(e),
                    x = b(t),
                    _ = [k(x), k(v)];
                  if (null != m && !1 !== m) {
                    let e = !0 === m ? c(s.BYTES) : m;
                    _.push((0, a.ensureBytes)("extraEntropy", e));
                  }
                  return {
                    seed: o.concatBytes(..._),
                    k2sig: function (e) {
                      let t = S(e);
                      if (!w(t)) return;
                      let r = y(t),
                        n = g.BASE.multiply(t).toAffine(),
                        i = d(n.x);
                      if (i === f) return;
                      let o = d(r * d(v + i * x));
                      if (o === f) return;
                      let a = (2 * (n.x !== i)) | Number(n.y & u),
                        s = o;
                      if (h && o > l >> u) {
                        var c;
                        (s = (c = o) > l >> u ? d(-c) : c), (a ^= 1);
                      }
                      return new E(i, s, a);
                    },
                  };
                })(e, t, n);
                return o.createHmacDrbg(
                  r.hash.outputLen,
                  r.nByteLength,
                  r.hmac
                )(i, c);
              },
              verify: function (e, n, i, s = T) {
                let l, f;
                if (
                  ((n = (0, a.ensureBytes)("msgHash", n)),
                  (i = (0, a.ensureBytes)("publicKey", i)),
                  "strict" in s)
                )
                  throw Error("options.strict was renamed to lowS");
                let { lowS: u, prehash: c } = s;
                try {
                  if ("string" == typeof e || o.isBytes(e))
                    try {
                      f = E.fromDER(e);
                    } catch (r) {
                      if (!(r instanceof t.DER.Err)) throw r;
                      f = E.fromCompact(e);
                    }
                  else if (
                    "object" == typeof e &&
                    "bigint" == typeof e.r &&
                    "bigint" == typeof e.s
                  ) {
                    let { r: t, s: r } = e;
                    f = new E(t, r);
                  } else throw Error("PARSE");
                  l = g.fromHex(i);
                } catch (e) {
                  if ("PARSE" === e.message)
                    throw Error(
                      "signature must be Signature instance, Uint8Array or hex string"
                    );
                  return !1;
                }
                if (u && f.hasHighS()) return !1;
                c && (n = r.hash(n));
                let { r: h, s: p } = f,
                  b = A(n),
                  m = y(p),
                  w = d(b * m),
                  v = d(h * m),
                  x = g.BASE.multiplyAndAddUnsafe(l, w, v)?.toAffine();
                return !!x && d(x.x) === h;
              },
              ProjectivePoint: g,
              Signature: E,
              utils: {
                isValidPrivateKey(e) {
                  try {
                    return b(e), !0;
                  } catch (e) {
                    return !1;
                  }
                },
                normPrivateKeyToScalar: b,
                randomPrivateKey: () => {
                  let e = i.getMinHashLength(r.n);
                  return i.mapHashToField(r.randomBytes(e), r.n);
                },
                precompute: (e = 8, t = g.BASE) => (
                  t._setWindowSize(e), t.multiply(BigInt(3)), t
                ),
              },
            }
          );
        }),
        (t.SWUFpSqrtRatio = y),
        (t.mapToCurveSimpleSWU = function (e, t) {
          if (
            (i.validateField(e),
            !e.isValid(t.A) || !e.isValid(t.B) || !e.isValid(t.Z))
          )
            throw Error("mapToCurveSimpleSWU: invalid opts");
          let r = y(e, t.Z);
          if (!e.isOdd) throw Error("Fp.isOdd is not implemented!");
          return (n) => {
            let i, o, a, s, l, f, u, c;
            (i = e.sqr(n)),
              (i = e.mul(i, t.Z)),
              (o = e.sqr(i)),
              (o = e.add(o, i)),
              (a = e.add(o, e.ONE)),
              (a = e.mul(a, t.B)),
              (s = e.cmov(t.Z, e.neg(o), !e.eql(o, e.ZERO))),
              (s = e.mul(s, t.A)),
              (o = e.sqr(a)),
              (f = e.sqr(s)),
              (l = e.mul(f, t.A)),
              (o = e.add(o, l)),
              (o = e.mul(o, a)),
              (f = e.mul(f, s)),
              (l = e.mul(f, t.B)),
              (o = e.add(o, l)),
              (u = e.mul(i, a));
            let { isValid: h, value: d } = r(o, f);
            (c = e.mul(i, n)),
              (c = e.mul(c, d)),
              (u = e.cmov(u, a, h)),
              (c = e.cmov(c, d, h));
            let p = e.isOdd(n) === e.isOdd(c);
            return (c = e.cmov(e.neg(c), c, p)), { x: (u = e.div(u, s)), y: c };
          };
        });
      let n = r(10519),
        i = r(24738),
        o = r(57953),
        a = r(57953),
        { bytesToNumberBE: s, hexToBytes: l } = o;
      t.DER = {
        Err: class extends Error {
          constructor(e = "") {
            super(e);
          }
        },
        _parseInt(e) {
          let { Err: r } = t.DER;
          if (e.length < 2 || 2 !== e[0])
            throw new r("Invalid signature integer tag");
          let n = e[1],
            i = e.subarray(2, n + 2);
          if (!n || i.length !== n)
            throw new r("Invalid signature integer: wrong length");
          if (128 & i[0]) throw new r("Invalid signature integer: negative");
          if (0 === i[0] && !(128 & i[1]))
            throw new r("Invalid signature integer: unnecessary leading zero");
          return { d: s(i), l: e.subarray(n + 2) };
        },
        toSig(e) {
          let { Err: r } = t.DER,
            n = "string" == typeof e ? l(e) : e;
          o.abytes(n);
          let i = n.length;
          if (i < 2 || 48 != n[0]) throw new r("Invalid signature tag");
          if (n[1] !== i - 2)
            throw new r("Invalid signature: incorrect length");
          let { d: a, l: s } = t.DER._parseInt(n.subarray(2)),
            { d: f, l: u } = t.DER._parseInt(s);
          if (u.length)
            throw new r("Invalid signature: left bytes after parsing");
          return { r: a, s: f };
        },
        hexFromSig(e) {
          let t = (e) => (8 & Number.parseInt(e[0], 16) ? "00" + e : e),
            r = (e) => {
              let t = e.toString(16);
              return 1 & t.length ? `0${t}` : t;
            },
            n = t(r(e.s)),
            i = t(r(e.r)),
            o = n.length / 2,
            a = i.length / 2,
            s = r(o),
            l = r(a);
          return `30${r(a + o + 4)}02${l}${i}02${s}${n}`;
        },
      };
      let f = BigInt(0),
        u = BigInt(1),
        c = BigInt(2),
        h = BigInt(3),
        d = BigInt(4);
      function p(e) {
        let t = (function (e) {
            let t = (0, n.validateBasic)(e);
            o.validateObject(
              t,
              { a: "field", b: "field" },
              {
                allowedPrivateKeyLengths: "array",
                wrapPrivateKey: "boolean",
                isTorsionFree: "function",
                clearCofactor: "function",
                allowInfinityPoint: "boolean",
                fromBytes: "function",
                toBytes: "function",
              }
            );
            let { endo: r, Fp: i, a } = t;
            if (r) {
              if (!i.eql(a, i.ZERO))
                throw Error(
                  "Endomorphism can only be defined for Koblitz curves that have a=0"
                );
              if (
                "object" != typeof r ||
                "bigint" != typeof r.beta ||
                "function" != typeof r.splitScalar
              )
                throw Error(
                  "Expected endomorphism with beta: bigint and splitScalar: function"
                );
            }
            return Object.freeze({ ...t });
          })(e),
          { Fp: r } = t,
          s =
            t.toBytes ||
            ((e, t, n) => {
              let i = t.toAffine();
              return o.concatBytes(
                Uint8Array.from([4]),
                r.toBytes(i.x),
                r.toBytes(i.y)
              );
            }),
          l =
            t.fromBytes ||
            ((e) => {
              let t = e.subarray(1);
              return {
                x: r.fromBytes(t.subarray(0, r.BYTES)),
                y: r.fromBytes(t.subarray(r.BYTES, 2 * r.BYTES)),
              };
            });
        function c(e) {
          let { a: n, b: i } = t,
            o = r.sqr(e),
            a = r.mul(o, e);
          return r.add(r.add(a, r.mul(e, n)), i);
        }
        if (!r.eql(r.sqr(t.Gy), c(t.Gx)))
          throw Error("bad generator point: equation left != right");
        function d(e) {
          return "bigint" == typeof e && f < e && e < t.n;
        }
        function p(e) {
          if (!d(e)) throw Error("Expected valid bigint: 0 < bigint < curve.n");
        }
        function y(e) {
          let r;
          let {
            allowedPrivateKeyLengths: n,
            nByteLength: s,
            wrapPrivateKey: l,
            n: f,
          } = t;
          if (n && "bigint" != typeof e) {
            if (
              (o.isBytes(e) && (e = o.bytesToHex(e)),
              "string" != typeof e || !n.includes(e.length))
            )
              throw Error("Invalid key");
            e = e.padStart(2 * s, "0");
          }
          try {
            r =
              "bigint" == typeof e
                ? e
                : o.bytesToNumberBE((0, a.ensureBytes)("private key", e, s));
          } catch (t) {
            throw Error(
              `private key must be ${s} bytes, hex or bigint, not ${typeof e}`
            );
          }
          return l && (r = i.mod(r, f)), p(r), r;
        }
        let g = new Map();
        function b(e) {
          if (!(e instanceof m)) throw Error("ProjectivePoint expected");
        }
        class m {
          constructor(e, t, n) {
            if (
              ((this.px = e),
              (this.py = t),
              (this.pz = n),
              null == e || !r.isValid(e))
            )
              throw Error("x required");
            if (null == t || !r.isValid(t)) throw Error("y required");
            if (null == n || !r.isValid(n)) throw Error("z required");
          }
          static fromAffine(e) {
            let { x: t, y: n } = e || {};
            if (!e || !r.isValid(t) || !r.isValid(n))
              throw Error("invalid affine point");
            if (e instanceof m) throw Error("projective point not allowed");
            let i = (e) => r.eql(e, r.ZERO);
            return i(t) && i(n) ? m.ZERO : new m(t, n, r.ONE);
          }
          get x() {
            return this.toAffine().x;
          }
          get y() {
            return this.toAffine().y;
          }
          static normalizeZ(e) {
            let t = r.invertBatch(e.map((e) => e.pz));
            return e.map((e, r) => e.toAffine(t[r])).map(m.fromAffine);
          }
          static fromHex(e) {
            let t = m.fromAffine(l((0, a.ensureBytes)("pointHex", e)));
            return t.assertValidity(), t;
          }
          static fromPrivateKey(e) {
            return m.BASE.multiply(y(e));
          }
          _setWindowSize(e) {
            (this._WINDOW_SIZE = e), g.delete(this);
          }
          assertValidity() {
            if (this.is0()) {
              if (t.allowInfinityPoint && !r.is0(this.py)) return;
              throw Error("bad point: ZERO");
            }
            let { x: e, y: n } = this.toAffine();
            if (!r.isValid(e) || !r.isValid(n))
              throw Error("bad point: x or y not FE");
            let i = r.sqr(n),
              o = c(e);
            if (!r.eql(i, o)) throw Error("bad point: equation left != right");
            if (!this.isTorsionFree())
              throw Error("bad point: not in prime-order subgroup");
          }
          hasEvenY() {
            let { y: e } = this.toAffine();
            if (r.isOdd) return !r.isOdd(e);
            throw Error("Field doesn't support isOdd");
          }
          equals(e) {
            b(e);
            let { px: t, py: n, pz: i } = this,
              { px: o, py: a, pz: s } = e,
              l = r.eql(r.mul(t, s), r.mul(o, i)),
              f = r.eql(r.mul(n, s), r.mul(a, i));
            return l && f;
          }
          negate() {
            return new m(this.px, r.neg(this.py), this.pz);
          }
          double() {
            let { a: e, b: n } = t,
              i = r.mul(n, h),
              { px: o, py: a, pz: s } = this,
              l = r.ZERO,
              f = r.ZERO,
              u = r.ZERO,
              c = r.mul(o, o),
              d = r.mul(a, a),
              p = r.mul(s, s),
              y = r.mul(o, a);
            return (
              (y = r.add(y, y)),
              (u = r.mul(o, s)),
              (u = r.add(u, u)),
              (l = r.mul(e, u)),
              (f = r.mul(i, p)),
              (f = r.add(l, f)),
              (l = r.sub(d, f)),
              (f = r.add(d, f)),
              (f = r.mul(l, f)),
              (l = r.mul(y, l)),
              (u = r.mul(i, u)),
              (p = r.mul(e, p)),
              (y = r.sub(c, p)),
              (y = r.mul(e, y)),
              (y = r.add(y, u)),
              (u = r.add(c, c)),
              (c = r.add(u, c)),
              (c = r.add(c, p)),
              (c = r.mul(c, y)),
              (f = r.add(f, c)),
              (p = r.mul(a, s)),
              (p = r.add(p, p)),
              (c = r.mul(p, y)),
              (l = r.sub(l, c)),
              (u = r.mul(p, d)),
              (u = r.add(u, u)),
              new m(l, f, (u = r.add(u, u)))
            );
          }
          add(e) {
            b(e);
            let { px: n, py: i, pz: o } = this,
              { px: a, py: s, pz: l } = e,
              f = r.ZERO,
              u = r.ZERO,
              c = r.ZERO,
              d = t.a,
              p = r.mul(t.b, h),
              y = r.mul(n, a),
              g = r.mul(i, s),
              w = r.mul(o, l),
              v = r.add(n, i),
              x = r.add(a, s);
            (v = r.mul(v, x)),
              (x = r.add(y, g)),
              (v = r.sub(v, x)),
              (x = r.add(n, o));
            let E = r.add(a, l);
            return (
              (x = r.mul(x, E)),
              (E = r.add(y, w)),
              (x = r.sub(x, E)),
              (E = r.add(i, o)),
              (f = r.add(s, l)),
              (E = r.mul(E, f)),
              (f = r.add(g, w)),
              (E = r.sub(E, f)),
              (c = r.mul(d, x)),
              (f = r.mul(p, w)),
              (c = r.add(f, c)),
              (f = r.sub(g, c)),
              (c = r.add(g, c)),
              (u = r.mul(f, c)),
              (g = r.add(y, y)),
              (g = r.add(g, y)),
              (w = r.mul(d, w)),
              (x = r.mul(p, x)),
              (g = r.add(g, w)),
              (w = r.sub(y, w)),
              (w = r.mul(d, w)),
              (x = r.add(x, w)),
              (y = r.mul(g, x)),
              (u = r.add(u, y)),
              (y = r.mul(E, x)),
              (f = r.mul(v, f)),
              (f = r.sub(f, y)),
              (y = r.mul(v, g)),
              (c = r.mul(E, c)),
              new m(f, u, (c = r.add(c, y)))
            );
          }
          subtract(e) {
            return this.add(e.negate());
          }
          is0() {
            return this.equals(m.ZERO);
          }
          wNAF(e) {
            return v.wNAFCached(this, g, e, (e) => {
              let t = r.invertBatch(e.map((e) => e.pz));
              return e.map((e, r) => e.toAffine(t[r])).map(m.fromAffine);
            });
          }
          multiplyUnsafe(e) {
            let n = m.ZERO;
            if (e === f) return n;
            if ((p(e), e === u)) return this;
            let { endo: i } = t;
            if (!i) return v.unsafeLadder(this, e);
            let { k1neg: o, k1: a, k2neg: s, k2: l } = i.splitScalar(e),
              c = n,
              h = n,
              d = this;
            for (; a > f || l > f; )
              a & u && (c = c.add(d)),
                l & u && (h = h.add(d)),
                (d = d.double()),
                (a >>= u),
                (l >>= u);
            return (
              o && (c = c.negate()),
              s && (h = h.negate()),
              (h = new m(r.mul(h.px, i.beta), h.py, h.pz)),
              c.add(h)
            );
          }
          multiply(e) {
            let n, i;
            p(e);
            let { endo: o } = t;
            if (o) {
              let { k1neg: t, k1: a, k2neg: s, k2: l } = o.splitScalar(e),
                { p: f, f: u } = this.wNAF(a),
                { p: c, f: h } = this.wNAF(l);
              (f = v.constTimeNegate(t, f)),
                (c = v.constTimeNegate(s, c)),
                (c = new m(r.mul(c.px, o.beta), c.py, c.pz)),
                (n = f.add(c)),
                (i = u.add(h));
            } else {
              let { p: t, f: r } = this.wNAF(e);
              (n = t), (i = r);
            }
            return m.normalizeZ([n, i])[0];
          }
          multiplyAndAddUnsafe(e, t, r) {
            let n = m.BASE,
              i = (e, t) =>
                t !== f && t !== u && e.equals(n)
                  ? e.multiply(t)
                  : e.multiplyUnsafe(t),
              o = i(this, t).add(i(e, r));
            return o.is0() ? void 0 : o;
          }
          toAffine(e) {
            let { px: t, py: n, pz: i } = this,
              o = this.is0();
            null == e && (e = o ? r.ONE : r.inv(i));
            let a = r.mul(t, e),
              s = r.mul(n, e),
              l = r.mul(i, e);
            if (o) return { x: r.ZERO, y: r.ZERO };
            if (!r.eql(l, r.ONE)) throw Error("invZ was invalid");
            return { x: a, y: s };
          }
          isTorsionFree() {
            let { h: e, isTorsionFree: r } = t;
            if (e === u) return !0;
            if (r) return r(m, this);
            throw Error(
              "isTorsionFree() has not been declared for the elliptic curve"
            );
          }
          clearCofactor() {
            let { h: e, clearCofactor: r } = t;
            return e === u ? this : r ? r(m, this) : this.multiplyUnsafe(t.h);
          }
          toRawBytes(e = !0) {
            return this.assertValidity(), s(m, this, e);
          }
          toHex(e = !0) {
            return o.bytesToHex(this.toRawBytes(e));
          }
        }
        (m.BASE = new m(t.Gx, t.Gy, r.ONE)),
          (m.ZERO = new m(r.ZERO, r.ONE, r.ZERO));
        let w = t.nBitLength,
          v = (0, n.wNAF)(m, t.endo ? Math.ceil(w / 2) : w);
        return {
          CURVE: t,
          ProjectivePoint: m,
          normPrivateKeyToScalar: y,
          weierstrassEquation: c,
          isWithinCurveOrder: d,
        };
      }
      function y(e, t) {
        let r = e.ORDER,
          n = f;
        for (let e = r - u; e % c === f; e /= c) n += u;
        let i = n,
          o = c << (i - u - u),
          a = o * c,
          s = (r - u) / a,
          l = (s - u) / c,
          p = a - u,
          y = e.pow(t, s),
          g = e.pow(t, (s + u) / c),
          b = (t, r) => {
            let n = y,
              a = e.pow(r, p),
              s = e.sqr(a);
            s = e.mul(s, r);
            let f = e.mul(t, s);
            (f = e.pow(f, l)),
              (f = e.mul(f, a)),
              (a = e.mul(f, r)),
              (s = e.mul(f, t));
            let h = e.mul(s, a);
            f = e.pow(h, o);
            let d = e.eql(f, e.ONE);
            (a = e.mul(s, g)),
              (f = e.mul(h, n)),
              (s = e.cmov(a, s, d)),
              (h = e.cmov(f, h, d));
            for (let t = i; t > u; t--) {
              let r = t - c;
              r = c << (r - u);
              let i = e.pow(h, r),
                o = e.eql(i, e.ONE);
              (a = e.mul(s, n)),
                (n = e.mul(n, n)),
                (i = e.mul(h, n)),
                (s = e.cmov(a, s, o)),
                (h = e.cmov(i, h, o));
            }
            return { isValid: d, value: s };
          };
        if (e.ORDER % d === h) {
          let r = (e.ORDER - h) / d,
            n = e.sqrt(e.neg(t));
          b = (t, i) => {
            let o = e.sqr(i),
              a = e.mul(t, i);
            o = e.mul(o, a);
            let s = e.pow(o, r);
            s = e.mul(s, a);
            let l = e.mul(s, n),
              f = e.mul(e.sqr(s), i),
              u = e.eql(f, t),
              c = e.cmov(l, s, u);
            return { isValid: u, value: c };
          };
        }
        return b;
      }
    },
    66020: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.AsyncEventEmitter = void 0);
      let n = r(35978);
      async function i(e, t, r) {
        let n;
        for await (let i of t)
          try {
            i.length < 2
              ? i.call(e, r)
              : await new Promise((t, n) => {
                  i.call(e, r, (e) => {
                    e ? n(e) : t();
                  });
                });
          } catch (e) {
            n = e;
          }
        if (n) throw n;
      }
      class o extends n.EventEmitter {
        emit(e, ...t) {
          let [r, n] = t,
            o = this._events[e] ?? [];
          return (
            void 0 === n && "function" == typeof r && ((n = r), (r = void 0)),
            ("newListener" === e || "removeListener" === e) &&
              ((r = { event: r, fn: n }), (n = void 0)),
            i(this, (o = Array.isArray(o) ? o : [o]).slice(), r)
              .then(n)
              .catch(n),
            this.listenerCount(e) > 0
          );
        }
        once(e, t) {
          let r;
          let n = this;
          if ("function" != typeof t)
            throw TypeError("listener must be a function");
          return (
            (r =
              t.length >= 2
                ? function (i, o) {
                    n.removeListener(e, r), t(i, o);
                  }
                : function (i) {
                    n.removeListener(e, r), t(i, r);
                  }),
            n.on(e, r),
            n
          );
        }
        first(e, t) {
          let r = this._events[e] ?? [];
          if ("function" != typeof t)
            throw TypeError("listener must be a function");
          return (
            Array.isArray(r) || (this._events[e] = r = [r]), r.unshift(t), this
          );
        }
        before(e, t, r) {
          return this.beforeOrAfter(e, t, r);
        }
        after(e, t, r) {
          return this.beforeOrAfter(e, t, r, "after");
        }
        beforeOrAfter(e, t, r, n) {
          let i,
            o,
            a = this._events[e] ?? [],
            s = +("after" === n);
          if ("function" != typeof r)
            throw TypeError("listener must be a function");
          if ("function" != typeof t)
            throw TypeError("target must be a function");
          for (
            Array.isArray(a) || (this._events[e] = a = [a]),
              o = a.length,
              i = a.length;
            i--;

          )
            if (a[i] === t) {
              o = i + s;
              break;
            }
          return a.splice(o, 0, r), this;
        }
        on(e, t) {
          return super.on(e, t);
        }
        addListener(e, t) {
          return super.addListener(e, t);
        }
        prependListener(e, t) {
          return super.prependListener(e, t);
        }
        prependOnceListener(e, t) {
          return super.prependOnceListener(e, t);
        }
        removeAllListeners(e) {
          return super.removeAllListeners(e);
        }
        removeListener(e, t) {
          return super.removeListener(e, t);
        }
        eventNames() {
          return super.eventNames();
        }
        listeners(e) {
          return super.listeners(e);
        }
        listenerCount(e) {
          return super.listenerCount(e);
        }
        getMaxListeners() {
          return super.getMaxListeners();
        }
        setMaxListeners(e) {
          return super.setMaxListeners(e);
        }
      }
      t.AsyncEventEmitter = o;
    },
    67049: (e, t, r) => {
      "use strict";
      r.d(t, { A: () => i });
      var n = r(20237);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 42220,
        name: "Celo",
        nativeCurrency: { decimals: 18, name: "CELO", symbol: "CELO" },
        rpcUrls: { default: { http: ["https://forno.celo.org"] } },
        blockExplorers: {
          default: {
            name: "Celo Explorer",
            url: "https://celoscan.io",
            apiUrl: "https://api.celoscan.io/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 0xc81517,
          },
        },
        testnet: !1,
      });
    },
    67551: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer,
        i = r(16953),
        o = r(91408);
      function a(e) {
        var t = e;
        if ("string" != typeof t)
          throw Error(
            "[ethjs-util] while padding to even, value must be string, is currently " +
              typeof t +
              ", while padToEven."
          );
        return t.length % 2 && (t = "0" + t), t;
      }
      function s(e) {
        return "0x" + e.toString(16);
      }
      e.exports = {
        arrayContainsArray: function (e, t, r) {
          if (!0 !== Array.isArray(e))
            throw Error(
              "[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '" +
                typeof e +
                "'"
            );
          if (!0 !== Array.isArray(t))
            throw Error(
              "[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '" +
                typeof t +
                "'"
            );
          return t[(!!r && "some") || "every"](function (t) {
            return e.indexOf(t) >= 0;
          });
        },
        intToBuffer: function (e) {
          return new n(a(s(e).slice(2)), "hex");
        },
        getBinarySize: function (e) {
          if ("string" != typeof e)
            throw Error(
              "[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '" +
                typeof e +
                "'."
            );
          return n.byteLength(e, "utf8");
        },
        isHexPrefixed: i,
        stripHexPrefix: o,
        padToEven: a,
        intToHex: s,
        fromAscii: function (e) {
          for (var t = "", r = 0; r < e.length; r++) {
            var n = e.charCodeAt(r).toString(16);
            t += n.length < 2 ? "0" + n : n;
          }
          return "0x" + t;
        },
        fromUtf8: function (e) {
          return (
            "0x" + a(new n(e, "utf8").toString("hex")).replace(/^0+|0+$/g, "")
          );
        },
        toAscii: function (e) {
          var t = "",
            r = 0,
            n = e.length;
          for ("0x" === e.substring(0, 2) && (r = 2); r < n; r += 2)
            t += String.fromCharCode(parseInt(e.substr(r, 2), 16));
          return t;
        },
        toUtf8: function (e) {
          return new n(a(o(e).replace(/^0+|0+$/g, "")), "hex").toString("utf8");
        },
        getKeys: function (e, t, r) {
          if (!Array.isArray(e))
            throw Error(
              "[ethjs-util] method getKeys expecting type Array as 'params' input, got '" +
                typeof e +
                "'"
            );
          if ("string" != typeof t)
            throw Error(
              "[ethjs-util] method getKeys expecting type String for input 'key' got '" +
                typeof t +
                "'."
            );
          for (var n = [], i = 0; i < e.length; i++) {
            var o = e[i][t];
            if (r && !o) o = "";
            else if ("string" != typeof o) throw Error("invalid abi");
            n.push(o);
          }
          return n;
        },
        isHexString: function (e, t) {
          return (
            "string" == typeof e &&
            !!e.match(/^0x[0-9A-Fa-f]*$/) &&
            (!t || e.length === 2 + 2 * t)
          );
        },
      };
    },
    68599: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getProvider = t.fetchFromProvider = void 0);
      let n = r(6226);
      (t.fetchFromProvider = async (e, t) =>
        (
          await (0, n.default)(e, {
            headers: { "content-type": "application/json" },
            type: "json",
            data: { method: t.method, params: t.params, jsonrpc: "2.0", id: 1 },
          })
        ).result),
        (t.getProvider = (e) => {
          if ("string" == typeof e) return e;
          if (e?.connection?.url !== void 0) return e.connection.url;
          throw Error("Must provide valid provider URL or Web3Provider");
        });
    },
    69855: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.add5L =
          t.add5H =
          t.add4H =
          t.add4L =
          t.add3H =
          t.add3L =
          t.add =
          t.rotlBL =
          t.rotlBH =
          t.rotlSL =
          t.rotlSH =
          t.rotr32L =
          t.rotr32H =
          t.rotrBL =
          t.rotrBH =
          t.rotrSL =
          t.rotrSH =
          t.shrSL =
          t.shrSH =
          t.toBig =
          t.split =
          t.fromBig =
            void 0);
      let r = BigInt(0x100000000 - 1),
        n = BigInt(32);
      function i(e, t = !1) {
        return t
          ? { h: Number(e & r), l: Number((e >> n) & r) }
          : { h: 0 | Number((e >> n) & r), l: 0 | Number(e & r) };
      }
      function o(e, t = !1) {
        let r = new Uint32Array(e.length),
          n = new Uint32Array(e.length);
        for (let o = 0; o < e.length; o++) {
          let { h: a, l: s } = i(e[o], t);
          [r[o], n[o]] = [a, s];
        }
        return [r, n];
      }
      (t.fromBig = i), (t.split = o);
      let a = (e, t) => (BigInt(e >>> 0) << n) | BigInt(t >>> 0);
      t.toBig = a;
      let s = (e, t, r) => e >>> r;
      t.shrSH = s;
      let l = (e, t, r) => (e << (32 - r)) | (t >>> r);
      t.shrSL = l;
      let f = (e, t, r) => (e >>> r) | (t << (32 - r));
      t.rotrSH = f;
      let u = (e, t, r) => (e << (32 - r)) | (t >>> r);
      t.rotrSL = u;
      let c = (e, t, r) => (e << (64 - r)) | (t >>> (r - 32));
      t.rotrBH = c;
      let h = (e, t, r) => (e >>> (r - 32)) | (t << (64 - r));
      t.rotrBL = h;
      let d = (e, t) => t;
      t.rotr32H = d;
      let p = (e, t) => e;
      t.rotr32L = p;
      let y = (e, t, r) => (e << r) | (t >>> (32 - r));
      t.rotlSH = y;
      let g = (e, t, r) => (t << r) | (e >>> (32 - r));
      t.rotlSL = g;
      let b = (e, t, r) => (t << (r - 32)) | (e >>> (64 - r));
      t.rotlBH = b;
      let m = (e, t, r) => (e << (r - 32)) | (t >>> (64 - r));
      function w(e, t, r, n) {
        let i = (t >>> 0) + (n >>> 0);
        return { h: (e + r + ((i / 0x100000000) | 0)) | 0, l: 0 | i };
      }
      (t.rotlBL = m), (t.add = w);
      let v = (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0);
      t.add3L = v;
      let x = (e, t, r, n) => (t + r + n + ((e / 0x100000000) | 0)) | 0;
      t.add3H = x;
      let E = (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0);
      t.add4L = E;
      let _ = (e, t, r, n, i) => (t + r + n + i + ((e / 0x100000000) | 0)) | 0;
      t.add4H = _;
      let S = (e, t, r, n, i) =>
        (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0);
      t.add5L = S;
      let A = (e, t, r, n, i, o) =>
        (t + r + n + i + o + ((e / 0x100000000) | 0)) | 0;
      (t.add5H = A),
        (t.default = {
          fromBig: i,
          split: o,
          toBig: a,
          shrSH: s,
          shrSL: l,
          rotrSH: f,
          rotrSL: u,
          rotrBH: c,
          rotrBL: h,
          rotr32H: d,
          rotr32L: p,
          rotlSH: y,
          rotlSL: g,
          rotlBH: b,
          rotlBL: m,
          add: w,
          add3L: v,
          add3H: x,
          add4L: E,
          add4H: _,
          add5H: A,
          add5L: S,
        });
    },
    70201: (e, t, r) => {
      "use strict";
      r.d(t, { C: () => n });
      let n = (0, r(12644).x)({
        id: 43113,
        name: "Avalanche Fuji",
        nativeCurrency: {
          decimals: 18,
          name: "Avalanche Fuji",
          symbol: "AVAX",
        },
        rpcUrls: {
          default: { http: ["https://api.avax-test.network/ext/bc/C/rpc"] },
        },
        blockExplorers: {
          default: {
            name: "SnowTrace",
            url: "https://testnet.snowtrace.io",
            apiUrl: "https://api-testnet.snowtrace.io",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 7096959,
          },
        },
        testnet: !0,
      });
    },
    70954: (e) => {
      !(function () {
        "use strict";
        var t = {
            815: function (e) {
              e.exports = function (e, r, n, i) {
                (r = r || "&"), (n = n || "=");
                var o = {};
                if ("string" != typeof e || 0 === e.length) return o;
                var a = /\+/g;
                e = e.split(r);
                var s = 1e3;
                i && "number" == typeof i.maxKeys && (s = i.maxKeys);
                var l = e.length;
                s > 0 && l > s && (l = s);
                for (var f = 0; f < l; ++f) {
                  var u,
                    c,
                    h,
                    d,
                    p = e[f].replace(a, "%20"),
                    y = p.indexOf(n);
                  (y >= 0
                    ? ((u = p.substr(0, y)), (c = p.substr(y + 1)))
                    : ((u = p), (c = "")),
                  (h = decodeURIComponent(u)),
                  (d = decodeURIComponent(c)),
                  Object.prototype.hasOwnProperty.call(o, h))
                    ? t(o[h])
                      ? o[h].push(d)
                      : (o[h] = [o[h], d])
                    : (o[h] = d);
                }
                return o;
              };
              var t =
                Array.isArray ||
                function (e) {
                  return "[object Array]" === Object.prototype.toString.call(e);
                };
            },
            577: function (e) {
              var t = function (e) {
                switch (typeof e) {
                  case "string":
                    return e;
                  case "boolean":
                    return e ? "true" : "false";
                  case "number":
                    return isFinite(e) ? e : "";
                  default:
                    return "";
                }
              };
              e.exports = function (e, o, a, s) {
                return ((o = o || "&"),
                (a = a || "="),
                null === e && (e = void 0),
                "object" == typeof e)
                  ? n(i(e), function (i) {
                      var s = encodeURIComponent(t(i)) + a;
                      return r(e[i])
                        ? n(e[i], function (e) {
                            return s + encodeURIComponent(t(e));
                          }).join(o)
                        : s + encodeURIComponent(t(e[i]));
                    }).join(o)
                  : s
                  ? encodeURIComponent(t(s)) + a + encodeURIComponent(t(e))
                  : "";
              };
              var r =
                Array.isArray ||
                function (e) {
                  return "[object Array]" === Object.prototype.toString.call(e);
                };
              function n(e, t) {
                if (e.map) return e.map(t);
                for (var r = [], n = 0; n < e.length; n++) r.push(t(e[n], n));
                return r;
              }
              var i =
                Object.keys ||
                function (e) {
                  var t = [];
                  for (var r in e)
                    Object.prototype.hasOwnProperty.call(e, r) && t.push(r);
                  return t;
                };
            },
          },
          r = {};
        function n(e) {
          var i = r[e];
          if (void 0 !== i) return i.exports;
          var o = (r[e] = { exports: {} }),
            a = !0;
          try {
            t[e](o, o.exports, n), (a = !1);
          } finally {
            a && delete r[e];
          }
          return o.exports;
        }
        n.ab = "//";
        var i = {};
        (i.decode = i.parse = n(815)),
          (i.encode = i.stringify = n(577)),
          (e.exports = i);
      })();
    },
    71023: (e, t, r) => {
      "use strict";
      r.d(t, { a: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 0x3b9ac9ff,
        name: "Zora Sepolia",
        network: "zora-sepolia",
        nativeCurrency: { decimals: 18, name: "Zora Sepolia", symbol: "ETH" },
        rpcUrls: {
          default: {
            http: ["https://sepolia.rpc.zora.energy"],
            webSocket: ["wss://sepolia.rpc.zora.energy"],
          },
        },
        blockExplorers: {
          default: {
            name: "Zora Sepolia Explorer",
            url: "https://sepolia.explorer.zora.energy/",
            apiUrl: "https://sepolia.explorer.zora.energy/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          l2OutputOracle: {
            0xaa36a7: { address: "0x2615B481Bd3E5A1C0C7Ca3Da1bdc663E8615Ade9" },
          },
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 83160,
          },
          portal: {
            0xaa36a7: { address: "0xeffE2C6cA9Ab797D418f0D91eA60807713f3536f" },
          },
          l1StandardBridge: {
            0xaa36a7: { address: "0x5376f1D543dcbB5BD416c56C189e4cB7399fCcCB" },
          },
        },
        sourceId: 0xaa36a7,
        testnet: !0,
      });
    },
    71239: (e, t, r) => {
      "use strict";
      r.d(t, { y: () => n });
      let n = (0, r(12644).x)({
        id: 17e3,
        name: "Holesky",
        nativeCurrency: { name: "Holesky Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: {
          default: { http: ["https://ethereum-holesky-rpc.publicnode.com"] },
        },
        blockExplorers: {
          default: {
            name: "Etherscan",
            url: "https://holesky.etherscan.io",
            apiUrl: "https://api-holesky.etherscan.io/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 77,
          },
          ensRegistry: {
            address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
            blockCreated: 801613,
          },
          ensUniversalResolver: {
            address: "0xa6AC935D4971E3CD133b950aE053bECD16fE7f3b",
            blockCreated: 973484,
          },
        },
        testnet: !0,
      });
    },
    71364: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.compactBytesToNibbles =
          t.bytesToNibbles =
          t.nibblesToCompactBytes =
          t.nibblesToBytes =
          t.hasTerminator =
            void 0),
        (t.hasTerminator = (e) => e.length > 0 && 16 === e[e.length - 1]),
        (t.nibblesToBytes = (e, t) => {
          for (let r = 0, n = 0; n < e.length; r += 1, n += 2)
            t[r] = (e[n] << 4) | e[n + 1];
        }),
        (t.nibblesToCompactBytes = (e) => {
          let r = 0;
          (0, t.hasTerminator)(e) &&
            ((r = 1), (e = e.subarray(0, e.length - 1)));
          let n = new Uint8Array(e.length / 2 + 1);
          return (
            (n[0] = r << 5),
            (1 & e.length) == 1 &&
              ((n[0] |= 16), (n[0] |= e[0]), (e = e.subarray(1))),
            (0, t.nibblesToBytes)(e, n.subarray(1)),
            n
          );
        }),
        (t.bytesToNibbles = (e) => {
          let t = 2 * e.length + 1,
            r = new Uint8Array(t);
          for (let t = 0; t < e.length; t++) {
            let n = e[t];
            (r[2 * t] = n / 16), (r[2 * t + 1] = n % 16);
          }
          return (r[t - 1] = 16), r;
        }),
        (t.compactBytesToNibbles = (e) => {
          if (0 === e.length) return e;
          let r = (0, t.bytesToNibbles)(e);
          r[0] < 2 && (r = r.subarray(0, r.length - 1));
          let n = 2 - (1 & r[0]);
          return r.subarray(n);
        });
    },
    72289: function (e, t, r) {
      !(function (e, t) {
        "use strict";
        function n(e, t) {
          if (!e) throw Error(t || "Assertion failed");
        }
        function i(e, t) {
          e.super_ = t;
          var r = function () {};
          (r.prototype = t.prototype),
            (e.prototype = new r()),
            (e.prototype.constructor = e);
        }
        function o(e, t, r) {
          if (o.isBN(e)) return e;
          (this.negative = 0),
            (this.words = null),
            (this.length = 0),
            (this.red = null),
            null !== e &&
              (("le" === t || "be" === t) && ((r = t), (t = 10)),
              this._init(e || 0, t || 10, r || "be"));
        }
        "object" == typeof e ? (e.exports = o) : (t.BN = o),
          (o.BN = o),
          (o.wordSize = 26);
        try {
          f =
            "undefined" != typeof window && void 0 !== window.Buffer
              ? window.Buffer
              : r(8379).Buffer;
        } catch (e) {}
        function a(e, t) {
          var r = e.charCodeAt(t);
          return r >= 65 && r <= 70
            ? r - 55
            : r >= 97 && r <= 102
            ? r - 87
            : (r - 48) & 15;
        }
        function s(e, t, r) {
          var n = a(e, r);
          return r - 1 >= t && (n |= a(e, r - 1) << 4), n;
        }
        function l(e, t, r, n) {
          for (var i = 0, o = Math.min(e.length, r), a = t; a < o; a++) {
            var s = e.charCodeAt(a) - 48;
            (i *= n),
              s >= 49
                ? (i += s - 49 + 10)
                : s >= 17
                ? (i += s - 17 + 10)
                : (i += s);
          }
          return i;
        }
        (o.isBN = function (e) {
          return (
            e instanceof o ||
            (null !== e &&
              "object" == typeof e &&
              e.constructor.wordSize === o.wordSize &&
              Array.isArray(e.words))
          );
        }),
          (o.max = function (e, t) {
            return e.cmp(t) > 0 ? e : t;
          }),
          (o.min = function (e, t) {
            return 0 > e.cmp(t) ? e : t;
          }),
          (o.prototype._init = function (e, t, r) {
            if ("number" == typeof e) return this._initNumber(e, t, r);
            if ("object" == typeof e) return this._initArray(e, t, r);
            "hex" === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
            var i = 0;
            "-" === (e = e.toString().replace(/\s+/g, ""))[0] &&
              (i++, (this.negative = 1)),
              i < e.length &&
                (16 === t
                  ? this._parseHex(e, i, r)
                  : (this._parseBase(e, t, i),
                    "le" === r && this._initArray(this.toArray(), t, r)));
          }),
          (o.prototype._initNumber = function (e, t, r) {
            e < 0 && ((this.negative = 1), (e = -e)),
              e < 0x4000000
                ? ((this.words = [0x3ffffff & e]), (this.length = 1))
                : e < 0x10000000000000
                ? ((this.words = [0x3ffffff & e, (e / 0x4000000) & 0x3ffffff]),
                  (this.length = 2))
                : (n(e < 0x20000000000000),
                  (this.words = [
                    0x3ffffff & e,
                    (e / 0x4000000) & 0x3ffffff,
                    1,
                  ]),
                  (this.length = 3)),
              "le" === r && this._initArray(this.toArray(), t, r);
          }),
          (o.prototype._initArray = function (e, t, r) {
            if ((n("number" == typeof e.length), e.length <= 0))
              return (this.words = [0]), (this.length = 1), this;
            (this.length = Math.ceil(e.length / 3)),
              (this.words = Array(this.length));
            for (var i, o, a = 0; a < this.length; a++) this.words[a] = 0;
            var s = 0;
            if ("be" === r)
              for (a = e.length - 1, i = 0; a >= 0; a -= 3)
                (o = e[a] | (e[a - 1] << 8) | (e[a - 2] << 16)),
                  (this.words[i] |= (o << s) & 0x3ffffff),
                  (this.words[i + 1] = (o >>> (26 - s)) & 0x3ffffff),
                  (s += 24) >= 26 && ((s -= 26), i++);
            else if ("le" === r)
              for (a = 0, i = 0; a < e.length; a += 3)
                (o = e[a] | (e[a + 1] << 8) | (e[a + 2] << 16)),
                  (this.words[i] |= (o << s) & 0x3ffffff),
                  (this.words[i + 1] = (o >>> (26 - s)) & 0x3ffffff),
                  (s += 24) >= 26 && ((s -= 26), i++);
            return this.strip();
          }),
          (o.prototype._parseHex = function (e, t, r) {
            (this.length = Math.ceil((e.length - t) / 6)),
              (this.words = Array(this.length));
            for (var n, i = 0; i < this.length; i++) this.words[i] = 0;
            var o = 0,
              a = 0;
            if ("be" === r)
              for (i = e.length - 1; i >= t; i -= 2)
                (n = s(e, t, i) << o),
                  (this.words[a] |= 0x3ffffff & n),
                  o >= 18
                    ? ((o -= 18), (a += 1), (this.words[a] |= n >>> 26))
                    : (o += 8);
            else
              for (
                i = (e.length - t) % 2 == 0 ? t + 1 : t;
                i < e.length;
                i += 2
              )
                (n = s(e, t, i) << o),
                  (this.words[a] |= 0x3ffffff & n),
                  o >= 18
                    ? ((o -= 18), (a += 1), (this.words[a] |= n >>> 26))
                    : (o += 8);
            this.strip();
          }),
          (o.prototype._parseBase = function (e, t, r) {
            (this.words = [0]), (this.length = 1);
            for (var n = 0, i = 1; i <= 0x3ffffff; i *= t) n++;
            n--, (i = (i / t) | 0);
            for (
              var o = e.length - r,
                a = o % n,
                s = Math.min(o, o - a) + r,
                f = 0,
                u = r;
              u < s;
              u += n
            )
              (f = l(e, u, u + n, t)),
                this.imuln(i),
                this.words[0] + f < 0x4000000
                  ? (this.words[0] += f)
                  : this._iaddn(f);
            if (0 !== a) {
              var c = 1;
              for (f = l(e, u, e.length, t), u = 0; u < a; u++) c *= t;
              this.imuln(c),
                this.words[0] + f < 0x4000000
                  ? (this.words[0] += f)
                  : this._iaddn(f);
            }
            this.strip();
          }),
          (o.prototype.copy = function (e) {
            e.words = Array(this.length);
            for (var t = 0; t < this.length; t++) e.words[t] = this.words[t];
            (e.length = this.length),
              (e.negative = this.negative),
              (e.red = this.red);
          }),
          (o.prototype.clone = function () {
            var e = new o(null);
            return this.copy(e), e;
          }),
          (o.prototype._expand = function (e) {
            for (; this.length < e; ) this.words[this.length++] = 0;
            return this;
          }),
          (o.prototype.strip = function () {
            for (; this.length > 1 && 0 === this.words[this.length - 1]; )
              this.length--;
            return this._normSign();
          }),
          (o.prototype._normSign = function () {
            return (
              1 === this.length && 0 === this.words[0] && (this.negative = 0),
              this
            );
          }),
          (o.prototype.inspect = function () {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          });
        var f,
          u = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000",
          ],
          c = [
            0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6,
            5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
          ],
          h = [
            0, 0, 0x2000000, 0x290d741, 0x1000000, 0x2e90edd, 0x39aa400,
            0x267bf47, 0x1000000, 0x290d741, 1e7, 0x12959c3, 0x222c000,
            0x3bd7765, 7529536, 0xadcea1, 0x1000000, 0x1704f61, 0x206fc40,
            0x2cddcf9, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625,
            0xb54ba0, 0xdaf26b, 0x1069c00, 0x138f9ad, 243e5, 0x1b4d89f,
            0x2000000, 0x25528a1, 0x2b54a20, 0x3216b93, 0x39aa400,
          ];
        function d(e, t, r) {
          r.negative = t.negative ^ e.negative;
          var n = (e.length + t.length) | 0;
          (r.length = n), (n = (n - 1) | 0);
          var i = 0 | e.words[0],
            o = 0 | t.words[0],
            a = i * o,
            s = 0x3ffffff & a,
            l = (a / 0x4000000) | 0;
          r.words[0] = s;
          for (var f = 1; f < n; f++) {
            for (
              var u = l >>> 26,
                c = 0x3ffffff & l,
                h = Math.min(f, t.length - 1),
                d = Math.max(0, f - e.length + 1);
              d <= h;
              d++
            ) {
              var p = (f - d) | 0;
              (u +=
                ((a = (i = 0 | e.words[p]) * (o = 0 | t.words[d]) + c) /
                  0x4000000) |
                0),
                (c = 0x3ffffff & a);
            }
            (r.words[f] = 0 | c), (l = 0 | u);
          }
          return 0 !== l ? (r.words[f] = 0 | l) : r.length--, r.strip();
        }
        (o.prototype.toString = function (e, t) {
          if (((t = 0 | t || 1), 16 === (e = e || 10) || "hex" === e)) {
            for (var r = "", i = 0, o = 0, a = 0; a < this.length; a++) {
              var s = this.words[a],
                l = (((s << i) | o) & 0xffffff).toString(16);
              (r =
                0 != (o = (s >>> (24 - i)) & 0xffffff) || a !== this.length - 1
                  ? u[6 - l.length] + l + r
                  : l + r),
                (i += 2) >= 26 && ((i -= 26), a--);
            }
            for (0 !== o && (r = o.toString(16) + r); r.length % t != 0; )
              r = "0" + r;
            return 0 !== this.negative && (r = "-" + r), r;
          }
          if (e === (0 | e) && e >= 2 && e <= 36) {
            var f = c[e],
              d = h[e];
            r = "";
            var p = this.clone();
            for (p.negative = 0; !p.isZero(); ) {
              var y = p.modn(d).toString(e);
              r = (p = p.idivn(d)).isZero() ? y + r : u[f - y.length] + y + r;
            }
            for (this.isZero() && (r = "0" + r); r.length % t != 0; )
              r = "0" + r;
            return 0 !== this.negative && (r = "-" + r), r;
          }
          n(!1, "Base should be between 2 and 36");
        }),
          (o.prototype.toNumber = function () {
            var e = this.words[0];
            return (
              2 === this.length
                ? (e += 0x4000000 * this.words[1])
                : 3 === this.length && 1 === this.words[2]
                ? (e += 0x10000000000000 + 0x4000000 * this.words[1])
                : this.length > 2 &&
                  n(!1, "Number can only safely store up to 53 bits"),
              0 !== this.negative ? -e : e
            );
          }),
          (o.prototype.toJSON = function () {
            return this.toString(16);
          }),
          (o.prototype.toBuffer = function (e, t) {
            return n(void 0 !== f), this.toArrayLike(f, e, t);
          }),
          (o.prototype.toArray = function (e, t) {
            return this.toArrayLike(Array, e, t);
          }),
          (o.prototype.toArrayLike = function (e, t, r) {
            var i,
              o,
              a = this.byteLength(),
              s = r || Math.max(1, a);
            n(a <= s, "byte array longer than desired length"),
              n(s > 0, "Requested array length <= 0"),
              this.strip();
            var l = new e(s),
              f = this.clone();
            if ("le" === t) {
              for (o = 0; !f.isZero(); o++)
                (i = f.andln(255)), f.iushrn(8), (l[o] = i);
              for (; o < s; o++) l[o] = 0;
            } else {
              for (o = 0; o < s - a; o++) l[o] = 0;
              for (o = 0; !f.isZero(); o++)
                (i = f.andln(255)), f.iushrn(8), (l[s - o - 1] = i);
            }
            return l;
          }),
          Math.clz32
            ? (o.prototype._countBits = function (e) {
                return 32 - Math.clz32(e);
              })
            : (o.prototype._countBits = function (e) {
                var t = e,
                  r = 0;
                return (
                  t >= 4096 && ((r += 13), (t >>>= 13)),
                  t >= 64 && ((r += 7), (t >>>= 7)),
                  t >= 8 && ((r += 4), (t >>>= 4)),
                  t >= 2 && ((r += 2), (t >>>= 2)),
                  r + t
                );
              }),
          (o.prototype._zeroBits = function (e) {
            if (0 === e) return 26;
            var t = e,
              r = 0;
            return (
              (8191 & t) == 0 && ((r += 13), (t >>>= 13)),
              (127 & t) == 0 && ((r += 7), (t >>>= 7)),
              (15 & t) == 0 && ((r += 4), (t >>>= 4)),
              (3 & t) == 0 && ((r += 2), (t >>>= 2)),
              (1 & t) == 0 && r++,
              r
            );
          }),
          (o.prototype.bitLength = function () {
            var e = this.words[this.length - 1],
              t = this._countBits(e);
            return (this.length - 1) * 26 + t;
          }),
          (o.prototype.zeroBits = function () {
            if (this.isZero()) return 0;
            for (var e = 0, t = 0; t < this.length; t++) {
              var r = this._zeroBits(this.words[t]);
              if (((e += r), 26 !== r)) break;
            }
            return e;
          }),
          (o.prototype.byteLength = function () {
            return Math.ceil(this.bitLength() / 8);
          }),
          (o.prototype.toTwos = function (e) {
            return 0 !== this.negative
              ? this.abs().inotn(e).iaddn(1)
              : this.clone();
          }),
          (o.prototype.fromTwos = function (e) {
            return this.testn(e - 1)
              ? this.notn(e).iaddn(1).ineg()
              : this.clone();
          }),
          (o.prototype.isNeg = function () {
            return 0 !== this.negative;
          }),
          (o.prototype.neg = function () {
            return this.clone().ineg();
          }),
          (o.prototype.ineg = function () {
            return this.isZero() || (this.negative ^= 1), this;
          }),
          (o.prototype.iuor = function (e) {
            for (; this.length < e.length; ) this.words[this.length++] = 0;
            for (var t = 0; t < e.length; t++)
              this.words[t] = this.words[t] | e.words[t];
            return this.strip();
          }),
          (o.prototype.ior = function (e) {
            return n((this.negative | e.negative) == 0), this.iuor(e);
          }),
          (o.prototype.or = function (e) {
            return this.length > e.length
              ? this.clone().ior(e)
              : e.clone().ior(this);
          }),
          (o.prototype.uor = function (e) {
            return this.length > e.length
              ? this.clone().iuor(e)
              : e.clone().iuor(this);
          }),
          (o.prototype.iuand = function (e) {
            var t;
            t = this.length > e.length ? e : this;
            for (var r = 0; r < t.length; r++)
              this.words[r] = this.words[r] & e.words[r];
            return (this.length = t.length), this.strip();
          }),
          (o.prototype.iand = function (e) {
            return n((this.negative | e.negative) == 0), this.iuand(e);
          }),
          (o.prototype.and = function (e) {
            return this.length > e.length
              ? this.clone().iand(e)
              : e.clone().iand(this);
          }),
          (o.prototype.uand = function (e) {
            return this.length > e.length
              ? this.clone().iuand(e)
              : e.clone().iuand(this);
          }),
          (o.prototype.iuxor = function (e) {
            this.length > e.length
              ? ((t = this), (r = e))
              : ((t = e), (r = this));
            for (var t, r, n = 0; n < r.length; n++)
              this.words[n] = t.words[n] ^ r.words[n];
            if (this !== t)
              for (; n < t.length; n++) this.words[n] = t.words[n];
            return (this.length = t.length), this.strip();
          }),
          (o.prototype.ixor = function (e) {
            return n((this.negative | e.negative) == 0), this.iuxor(e);
          }),
          (o.prototype.xor = function (e) {
            return this.length > e.length
              ? this.clone().ixor(e)
              : e.clone().ixor(this);
          }),
          (o.prototype.uxor = function (e) {
            return this.length > e.length
              ? this.clone().iuxor(e)
              : e.clone().iuxor(this);
          }),
          (o.prototype.inotn = function (e) {
            n("number" == typeof e && e >= 0);
            var t = 0 | Math.ceil(e / 26),
              r = e % 26;
            this._expand(t), r > 0 && t--;
            for (var i = 0; i < t; i++)
              this.words[i] = 0x3ffffff & ~this.words[i];
            return (
              r > 0 &&
                (this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - r))),
              this.strip()
            );
          }),
          (o.prototype.notn = function (e) {
            return this.clone().inotn(e);
          }),
          (o.prototype.setn = function (e, t) {
            n("number" == typeof e && e >= 0);
            var r = (e / 26) | 0,
              i = e % 26;
            return (
              this._expand(r + 1),
              t
                ? (this.words[r] = this.words[r] | (1 << i))
                : (this.words[r] = this.words[r] & ~(1 << i)),
              this.strip()
            );
          }),
          (o.prototype.iadd = function (e) {
            if (0 !== this.negative && 0 === e.negative)
              return (
                (this.negative = 0),
                (t = this.isub(e)),
                (this.negative ^= 1),
                this._normSign()
              );
            if (0 === this.negative && 0 !== e.negative)
              return (
                (e.negative = 0),
                (t = this.isub(e)),
                (e.negative = 1),
                t._normSign()
              );
            this.length > e.length
              ? ((r = this), (n = e))
              : ((r = e), (n = this));
            for (var t, r, n, i = 0, o = 0; o < n.length; o++)
              (t = (0 | r.words[o]) + (0 | n.words[o]) + i),
                (this.words[o] = 0x3ffffff & t),
                (i = t >>> 26);
            for (; 0 !== i && o < r.length; o++)
              (t = (0 | r.words[o]) + i),
                (this.words[o] = 0x3ffffff & t),
                (i = t >>> 26);
            if (((this.length = r.length), 0 !== i))
              (this.words[this.length] = i), this.length++;
            else if (r !== this)
              for (; o < r.length; o++) this.words[o] = r.words[o];
            return this;
          }),
          (o.prototype.add = function (e) {
            var t;
            return 0 !== e.negative && 0 === this.negative
              ? ((e.negative = 0), (t = this.sub(e)), (e.negative ^= 1), t)
              : 0 === e.negative && 0 !== this.negative
              ? ((this.negative = 0), (t = e.sub(this)), (this.negative = 1), t)
              : this.length > e.length
              ? this.clone().iadd(e)
              : e.clone().iadd(this);
          }),
          (o.prototype.isub = function (e) {
            if (0 !== e.negative) {
              e.negative = 0;
              var t,
                r,
                n = this.iadd(e);
              return (e.negative = 1), n._normSign();
            }
            if (0 !== this.negative)
              return (
                (this.negative = 0),
                this.iadd(e),
                (this.negative = 1),
                this._normSign()
              );
            var i = this.cmp(e);
            if (0 === i)
              return (
                (this.negative = 0),
                (this.length = 1),
                (this.words[0] = 0),
                this
              );
            i > 0 ? ((t = this), (r = e)) : ((t = e), (r = this));
            for (var o = 0, a = 0; a < r.length; a++)
              (o = (n = (0 | t.words[a]) - (0 | r.words[a]) + o) >> 26),
                (this.words[a] = 0x3ffffff & n);
            for (; 0 !== o && a < t.length; a++)
              (o = (n = (0 | t.words[a]) + o) >> 26),
                (this.words[a] = 0x3ffffff & n);
            if (0 === o && a < t.length && t !== this)
              for (; a < t.length; a++) this.words[a] = t.words[a];
            return (
              (this.length = Math.max(this.length, a)),
              t !== this && (this.negative = 1),
              this.strip()
            );
          }),
          (o.prototype.sub = function (e) {
            return this.clone().isub(e);
          });
        var p = function (e, t, r) {
          var n,
            i,
            o,
            a = e.words,
            s = t.words,
            l = r.words,
            f = 0,
            u = 0 | a[0],
            c = 8191 & u,
            h = u >>> 13,
            d = 0 | a[1],
            p = 8191 & d,
            y = d >>> 13,
            g = 0 | a[2],
            b = 8191 & g,
            m = g >>> 13,
            w = 0 | a[3],
            v = 8191 & w,
            x = w >>> 13,
            E = 0 | a[4],
            _ = 8191 & E,
            S = E >>> 13,
            A = 0 | a[5],
            B = 8191 & A,
            k = A >>> 13,
            O = 0 | a[6],
            T = 8191 & O,
            I = O >>> 13,
            R = 0 | a[7],
            M = 8191 & R,
            P = R >>> 13,
            C = 0 | a[8],
            U = 8191 & C,
            L = C >>> 13,
            N = 0 | a[9],
            j = 8191 & N,
            H = N >>> 13,
            D = 0 | s[0],
            F = 8191 & D,
            $ = D >>> 13,
            q = 0 | s[1],
            z = 8191 & q,
            K = q >>> 13,
            Z = 0 | s[2],
            V = 8191 & Z,
            G = Z >>> 13,
            W = 0 | s[3],
            Y = 8191 & W,
            X = W >>> 13,
            Q = 0 | s[4],
            J = 8191 & Q,
            ee = Q >>> 13,
            et = 0 | s[5],
            er = 8191 & et,
            en = et >>> 13,
            ei = 0 | s[6],
            eo = 8191 & ei,
            ea = ei >>> 13,
            es = 0 | s[7],
            el = 8191 & es,
            ef = es >>> 13,
            eu = 0 | s[8],
            ec = 8191 & eu,
            eh = eu >>> 13,
            ed = 0 | s[9],
            ep = 8191 & ed,
            ey = ed >>> 13;
          (r.negative = e.negative ^ t.negative),
            (r.length = 19),
            (n = Math.imul(c, F));
          var eg =
            (((f + n) | 0) +
              ((8191 & (i = ((i = Math.imul(c, $)) + Math.imul(h, F)) | 0)) <<
                13)) |
            0;
          (f = ((((o = Math.imul(h, $)) + (i >>> 13)) | 0) + (eg >>> 26)) | 0),
            (eg &= 0x3ffffff),
            (n = Math.imul(p, F)),
            (i = ((i = Math.imul(p, $)) + Math.imul(y, F)) | 0),
            (o = Math.imul(y, $)),
            (n = (n + Math.imul(c, z)) | 0);
          var eb =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, K)) | 0) + Math.imul(h, z)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, K)) | 0) + (i >>> 13)) | 0) +
              (eb >>> 26)) |
            0),
            (eb &= 0x3ffffff),
            (n = Math.imul(b, F)),
            (i = ((i = Math.imul(b, $)) + Math.imul(m, F)) | 0),
            (o = Math.imul(m, $)),
            (n = (n + Math.imul(p, z)) | 0),
            (i = ((i = (i + Math.imul(p, K)) | 0) + Math.imul(y, z)) | 0),
            (o = (o + Math.imul(y, K)) | 0),
            (n = (n + Math.imul(c, V)) | 0);
          var em =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, G)) | 0) + Math.imul(h, V)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, G)) | 0) + (i >>> 13)) | 0) +
              (em >>> 26)) |
            0),
            (em &= 0x3ffffff),
            (n = Math.imul(v, F)),
            (i = ((i = Math.imul(v, $)) + Math.imul(x, F)) | 0),
            (o = Math.imul(x, $)),
            (n = (n + Math.imul(b, z)) | 0),
            (i = ((i = (i + Math.imul(b, K)) | 0) + Math.imul(m, z)) | 0),
            (o = (o + Math.imul(m, K)) | 0),
            (n = (n + Math.imul(p, V)) | 0),
            (i = ((i = (i + Math.imul(p, G)) | 0) + Math.imul(y, V)) | 0),
            (o = (o + Math.imul(y, G)) | 0),
            (n = (n + Math.imul(c, Y)) | 0);
          var ew =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, X)) | 0) + Math.imul(h, Y)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, X)) | 0) + (i >>> 13)) | 0) +
              (ew >>> 26)) |
            0),
            (ew &= 0x3ffffff),
            (n = Math.imul(_, F)),
            (i = ((i = Math.imul(_, $)) + Math.imul(S, F)) | 0),
            (o = Math.imul(S, $)),
            (n = (n + Math.imul(v, z)) | 0),
            (i = ((i = (i + Math.imul(v, K)) | 0) + Math.imul(x, z)) | 0),
            (o = (o + Math.imul(x, K)) | 0),
            (n = (n + Math.imul(b, V)) | 0),
            (i = ((i = (i + Math.imul(b, G)) | 0) + Math.imul(m, V)) | 0),
            (o = (o + Math.imul(m, G)) | 0),
            (n = (n + Math.imul(p, Y)) | 0),
            (i = ((i = (i + Math.imul(p, X)) | 0) + Math.imul(y, Y)) | 0),
            (o = (o + Math.imul(y, X)) | 0),
            (n = (n + Math.imul(c, J)) | 0);
          var ev =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, ee)) | 0) + Math.imul(h, J)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, ee)) | 0) + (i >>> 13)) | 0) +
              (ev >>> 26)) |
            0),
            (ev &= 0x3ffffff),
            (n = Math.imul(B, F)),
            (i = ((i = Math.imul(B, $)) + Math.imul(k, F)) | 0),
            (o = Math.imul(k, $)),
            (n = (n + Math.imul(_, z)) | 0),
            (i = ((i = (i + Math.imul(_, K)) | 0) + Math.imul(S, z)) | 0),
            (o = (o + Math.imul(S, K)) | 0),
            (n = (n + Math.imul(v, V)) | 0),
            (i = ((i = (i + Math.imul(v, G)) | 0) + Math.imul(x, V)) | 0),
            (o = (o + Math.imul(x, G)) | 0),
            (n = (n + Math.imul(b, Y)) | 0),
            (i = ((i = (i + Math.imul(b, X)) | 0) + Math.imul(m, Y)) | 0),
            (o = (o + Math.imul(m, X)) | 0),
            (n = (n + Math.imul(p, J)) | 0),
            (i = ((i = (i + Math.imul(p, ee)) | 0) + Math.imul(y, J)) | 0),
            (o = (o + Math.imul(y, ee)) | 0),
            (n = (n + Math.imul(c, er)) | 0);
          var ex =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, en)) | 0) + Math.imul(h, er)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, en)) | 0) + (i >>> 13)) | 0) +
              (ex >>> 26)) |
            0),
            (ex &= 0x3ffffff),
            (n = Math.imul(T, F)),
            (i = ((i = Math.imul(T, $)) + Math.imul(I, F)) | 0),
            (o = Math.imul(I, $)),
            (n = (n + Math.imul(B, z)) | 0),
            (i = ((i = (i + Math.imul(B, K)) | 0) + Math.imul(k, z)) | 0),
            (o = (o + Math.imul(k, K)) | 0),
            (n = (n + Math.imul(_, V)) | 0),
            (i = ((i = (i + Math.imul(_, G)) | 0) + Math.imul(S, V)) | 0),
            (o = (o + Math.imul(S, G)) | 0),
            (n = (n + Math.imul(v, Y)) | 0),
            (i = ((i = (i + Math.imul(v, X)) | 0) + Math.imul(x, Y)) | 0),
            (o = (o + Math.imul(x, X)) | 0),
            (n = (n + Math.imul(b, J)) | 0),
            (i = ((i = (i + Math.imul(b, ee)) | 0) + Math.imul(m, J)) | 0),
            (o = (o + Math.imul(m, ee)) | 0),
            (n = (n + Math.imul(p, er)) | 0),
            (i = ((i = (i + Math.imul(p, en)) | 0) + Math.imul(y, er)) | 0),
            (o = (o + Math.imul(y, en)) | 0),
            (n = (n + Math.imul(c, eo)) | 0);
          var eE =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, ea)) | 0) + Math.imul(h, eo)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, ea)) | 0) + (i >>> 13)) | 0) +
              (eE >>> 26)) |
            0),
            (eE &= 0x3ffffff),
            (n = Math.imul(M, F)),
            (i = ((i = Math.imul(M, $)) + Math.imul(P, F)) | 0),
            (o = Math.imul(P, $)),
            (n = (n + Math.imul(T, z)) | 0),
            (i = ((i = (i + Math.imul(T, K)) | 0) + Math.imul(I, z)) | 0),
            (o = (o + Math.imul(I, K)) | 0),
            (n = (n + Math.imul(B, V)) | 0),
            (i = ((i = (i + Math.imul(B, G)) | 0) + Math.imul(k, V)) | 0),
            (o = (o + Math.imul(k, G)) | 0),
            (n = (n + Math.imul(_, Y)) | 0),
            (i = ((i = (i + Math.imul(_, X)) | 0) + Math.imul(S, Y)) | 0),
            (o = (o + Math.imul(S, X)) | 0),
            (n = (n + Math.imul(v, J)) | 0),
            (i = ((i = (i + Math.imul(v, ee)) | 0) + Math.imul(x, J)) | 0),
            (o = (o + Math.imul(x, ee)) | 0),
            (n = (n + Math.imul(b, er)) | 0),
            (i = ((i = (i + Math.imul(b, en)) | 0) + Math.imul(m, er)) | 0),
            (o = (o + Math.imul(m, en)) | 0),
            (n = (n + Math.imul(p, eo)) | 0),
            (i = ((i = (i + Math.imul(p, ea)) | 0) + Math.imul(y, eo)) | 0),
            (o = (o + Math.imul(y, ea)) | 0),
            (n = (n + Math.imul(c, el)) | 0);
          var e_ =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, ef)) | 0) + Math.imul(h, el)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, ef)) | 0) + (i >>> 13)) | 0) +
              (e_ >>> 26)) |
            0),
            (e_ &= 0x3ffffff),
            (n = Math.imul(U, F)),
            (i = ((i = Math.imul(U, $)) + Math.imul(L, F)) | 0),
            (o = Math.imul(L, $)),
            (n = (n + Math.imul(M, z)) | 0),
            (i = ((i = (i + Math.imul(M, K)) | 0) + Math.imul(P, z)) | 0),
            (o = (o + Math.imul(P, K)) | 0),
            (n = (n + Math.imul(T, V)) | 0),
            (i = ((i = (i + Math.imul(T, G)) | 0) + Math.imul(I, V)) | 0),
            (o = (o + Math.imul(I, G)) | 0),
            (n = (n + Math.imul(B, Y)) | 0),
            (i = ((i = (i + Math.imul(B, X)) | 0) + Math.imul(k, Y)) | 0),
            (o = (o + Math.imul(k, X)) | 0),
            (n = (n + Math.imul(_, J)) | 0),
            (i = ((i = (i + Math.imul(_, ee)) | 0) + Math.imul(S, J)) | 0),
            (o = (o + Math.imul(S, ee)) | 0),
            (n = (n + Math.imul(v, er)) | 0),
            (i = ((i = (i + Math.imul(v, en)) | 0) + Math.imul(x, er)) | 0),
            (o = (o + Math.imul(x, en)) | 0),
            (n = (n + Math.imul(b, eo)) | 0),
            (i = ((i = (i + Math.imul(b, ea)) | 0) + Math.imul(m, eo)) | 0),
            (o = (o + Math.imul(m, ea)) | 0),
            (n = (n + Math.imul(p, el)) | 0),
            (i = ((i = (i + Math.imul(p, ef)) | 0) + Math.imul(y, el)) | 0),
            (o = (o + Math.imul(y, ef)) | 0),
            (n = (n + Math.imul(c, ec)) | 0);
          var eS =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, eh)) | 0) + Math.imul(h, ec)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, eh)) | 0) + (i >>> 13)) | 0) +
              (eS >>> 26)) |
            0),
            (eS &= 0x3ffffff),
            (n = Math.imul(j, F)),
            (i = ((i = Math.imul(j, $)) + Math.imul(H, F)) | 0),
            (o = Math.imul(H, $)),
            (n = (n + Math.imul(U, z)) | 0),
            (i = ((i = (i + Math.imul(U, K)) | 0) + Math.imul(L, z)) | 0),
            (o = (o + Math.imul(L, K)) | 0),
            (n = (n + Math.imul(M, V)) | 0),
            (i = ((i = (i + Math.imul(M, G)) | 0) + Math.imul(P, V)) | 0),
            (o = (o + Math.imul(P, G)) | 0),
            (n = (n + Math.imul(T, Y)) | 0),
            (i = ((i = (i + Math.imul(T, X)) | 0) + Math.imul(I, Y)) | 0),
            (o = (o + Math.imul(I, X)) | 0),
            (n = (n + Math.imul(B, J)) | 0),
            (i = ((i = (i + Math.imul(B, ee)) | 0) + Math.imul(k, J)) | 0),
            (o = (o + Math.imul(k, ee)) | 0),
            (n = (n + Math.imul(_, er)) | 0),
            (i = ((i = (i + Math.imul(_, en)) | 0) + Math.imul(S, er)) | 0),
            (o = (o + Math.imul(S, en)) | 0),
            (n = (n + Math.imul(v, eo)) | 0),
            (i = ((i = (i + Math.imul(v, ea)) | 0) + Math.imul(x, eo)) | 0),
            (o = (o + Math.imul(x, ea)) | 0),
            (n = (n + Math.imul(b, el)) | 0),
            (i = ((i = (i + Math.imul(b, ef)) | 0) + Math.imul(m, el)) | 0),
            (o = (o + Math.imul(m, ef)) | 0),
            (n = (n + Math.imul(p, ec)) | 0),
            (i = ((i = (i + Math.imul(p, eh)) | 0) + Math.imul(y, ec)) | 0),
            (o = (o + Math.imul(y, eh)) | 0),
            (n = (n + Math.imul(c, ep)) | 0);
          var eA =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(c, ey)) | 0) + Math.imul(h, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(h, ey)) | 0) + (i >>> 13)) | 0) +
              (eA >>> 26)) |
            0),
            (eA &= 0x3ffffff),
            (n = Math.imul(j, z)),
            (i = ((i = Math.imul(j, K)) + Math.imul(H, z)) | 0),
            (o = Math.imul(H, K)),
            (n = (n + Math.imul(U, V)) | 0),
            (i = ((i = (i + Math.imul(U, G)) | 0) + Math.imul(L, V)) | 0),
            (o = (o + Math.imul(L, G)) | 0),
            (n = (n + Math.imul(M, Y)) | 0),
            (i = ((i = (i + Math.imul(M, X)) | 0) + Math.imul(P, Y)) | 0),
            (o = (o + Math.imul(P, X)) | 0),
            (n = (n + Math.imul(T, J)) | 0),
            (i = ((i = (i + Math.imul(T, ee)) | 0) + Math.imul(I, J)) | 0),
            (o = (o + Math.imul(I, ee)) | 0),
            (n = (n + Math.imul(B, er)) | 0),
            (i = ((i = (i + Math.imul(B, en)) | 0) + Math.imul(k, er)) | 0),
            (o = (o + Math.imul(k, en)) | 0),
            (n = (n + Math.imul(_, eo)) | 0),
            (i = ((i = (i + Math.imul(_, ea)) | 0) + Math.imul(S, eo)) | 0),
            (o = (o + Math.imul(S, ea)) | 0),
            (n = (n + Math.imul(v, el)) | 0),
            (i = ((i = (i + Math.imul(v, ef)) | 0) + Math.imul(x, el)) | 0),
            (o = (o + Math.imul(x, ef)) | 0),
            (n = (n + Math.imul(b, ec)) | 0),
            (i = ((i = (i + Math.imul(b, eh)) | 0) + Math.imul(m, ec)) | 0),
            (o = (o + Math.imul(m, eh)) | 0),
            (n = (n + Math.imul(p, ep)) | 0);
          var eB =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(p, ey)) | 0) + Math.imul(y, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(y, ey)) | 0) + (i >>> 13)) | 0) +
              (eB >>> 26)) |
            0),
            (eB &= 0x3ffffff),
            (n = Math.imul(j, V)),
            (i = ((i = Math.imul(j, G)) + Math.imul(H, V)) | 0),
            (o = Math.imul(H, G)),
            (n = (n + Math.imul(U, Y)) | 0),
            (i = ((i = (i + Math.imul(U, X)) | 0) + Math.imul(L, Y)) | 0),
            (o = (o + Math.imul(L, X)) | 0),
            (n = (n + Math.imul(M, J)) | 0),
            (i = ((i = (i + Math.imul(M, ee)) | 0) + Math.imul(P, J)) | 0),
            (o = (o + Math.imul(P, ee)) | 0),
            (n = (n + Math.imul(T, er)) | 0),
            (i = ((i = (i + Math.imul(T, en)) | 0) + Math.imul(I, er)) | 0),
            (o = (o + Math.imul(I, en)) | 0),
            (n = (n + Math.imul(B, eo)) | 0),
            (i = ((i = (i + Math.imul(B, ea)) | 0) + Math.imul(k, eo)) | 0),
            (o = (o + Math.imul(k, ea)) | 0),
            (n = (n + Math.imul(_, el)) | 0),
            (i = ((i = (i + Math.imul(_, ef)) | 0) + Math.imul(S, el)) | 0),
            (o = (o + Math.imul(S, ef)) | 0),
            (n = (n + Math.imul(v, ec)) | 0),
            (i = ((i = (i + Math.imul(v, eh)) | 0) + Math.imul(x, ec)) | 0),
            (o = (o + Math.imul(x, eh)) | 0),
            (n = (n + Math.imul(b, ep)) | 0);
          var ek =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(b, ey)) | 0) + Math.imul(m, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(m, ey)) | 0) + (i >>> 13)) | 0) +
              (ek >>> 26)) |
            0),
            (ek &= 0x3ffffff),
            (n = Math.imul(j, Y)),
            (i = ((i = Math.imul(j, X)) + Math.imul(H, Y)) | 0),
            (o = Math.imul(H, X)),
            (n = (n + Math.imul(U, J)) | 0),
            (i = ((i = (i + Math.imul(U, ee)) | 0) + Math.imul(L, J)) | 0),
            (o = (o + Math.imul(L, ee)) | 0),
            (n = (n + Math.imul(M, er)) | 0),
            (i = ((i = (i + Math.imul(M, en)) | 0) + Math.imul(P, er)) | 0),
            (o = (o + Math.imul(P, en)) | 0),
            (n = (n + Math.imul(T, eo)) | 0),
            (i = ((i = (i + Math.imul(T, ea)) | 0) + Math.imul(I, eo)) | 0),
            (o = (o + Math.imul(I, ea)) | 0),
            (n = (n + Math.imul(B, el)) | 0),
            (i = ((i = (i + Math.imul(B, ef)) | 0) + Math.imul(k, el)) | 0),
            (o = (o + Math.imul(k, ef)) | 0),
            (n = (n + Math.imul(_, ec)) | 0),
            (i = ((i = (i + Math.imul(_, eh)) | 0) + Math.imul(S, ec)) | 0),
            (o = (o + Math.imul(S, eh)) | 0),
            (n = (n + Math.imul(v, ep)) | 0);
          var eO =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(v, ey)) | 0) + Math.imul(x, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(x, ey)) | 0) + (i >>> 13)) | 0) +
              (eO >>> 26)) |
            0),
            (eO &= 0x3ffffff),
            (n = Math.imul(j, J)),
            (i = ((i = Math.imul(j, ee)) + Math.imul(H, J)) | 0),
            (o = Math.imul(H, ee)),
            (n = (n + Math.imul(U, er)) | 0),
            (i = ((i = (i + Math.imul(U, en)) | 0) + Math.imul(L, er)) | 0),
            (o = (o + Math.imul(L, en)) | 0),
            (n = (n + Math.imul(M, eo)) | 0),
            (i = ((i = (i + Math.imul(M, ea)) | 0) + Math.imul(P, eo)) | 0),
            (o = (o + Math.imul(P, ea)) | 0),
            (n = (n + Math.imul(T, el)) | 0),
            (i = ((i = (i + Math.imul(T, ef)) | 0) + Math.imul(I, el)) | 0),
            (o = (o + Math.imul(I, ef)) | 0),
            (n = (n + Math.imul(B, ec)) | 0),
            (i = ((i = (i + Math.imul(B, eh)) | 0) + Math.imul(k, ec)) | 0),
            (o = (o + Math.imul(k, eh)) | 0),
            (n = (n + Math.imul(_, ep)) | 0);
          var eT =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(_, ey)) | 0) + Math.imul(S, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(S, ey)) | 0) + (i >>> 13)) | 0) +
              (eT >>> 26)) |
            0),
            (eT &= 0x3ffffff),
            (n = Math.imul(j, er)),
            (i = ((i = Math.imul(j, en)) + Math.imul(H, er)) | 0),
            (o = Math.imul(H, en)),
            (n = (n + Math.imul(U, eo)) | 0),
            (i = ((i = (i + Math.imul(U, ea)) | 0) + Math.imul(L, eo)) | 0),
            (o = (o + Math.imul(L, ea)) | 0),
            (n = (n + Math.imul(M, el)) | 0),
            (i = ((i = (i + Math.imul(M, ef)) | 0) + Math.imul(P, el)) | 0),
            (o = (o + Math.imul(P, ef)) | 0),
            (n = (n + Math.imul(T, ec)) | 0),
            (i = ((i = (i + Math.imul(T, eh)) | 0) + Math.imul(I, ec)) | 0),
            (o = (o + Math.imul(I, eh)) | 0),
            (n = (n + Math.imul(B, ep)) | 0);
          var eI =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(B, ey)) | 0) + Math.imul(k, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(k, ey)) | 0) + (i >>> 13)) | 0) +
              (eI >>> 26)) |
            0),
            (eI &= 0x3ffffff),
            (n = Math.imul(j, eo)),
            (i = ((i = Math.imul(j, ea)) + Math.imul(H, eo)) | 0),
            (o = Math.imul(H, ea)),
            (n = (n + Math.imul(U, el)) | 0),
            (i = ((i = (i + Math.imul(U, ef)) | 0) + Math.imul(L, el)) | 0),
            (o = (o + Math.imul(L, ef)) | 0),
            (n = (n + Math.imul(M, ec)) | 0),
            (i = ((i = (i + Math.imul(M, eh)) | 0) + Math.imul(P, ec)) | 0),
            (o = (o + Math.imul(P, eh)) | 0),
            (n = (n + Math.imul(T, ep)) | 0);
          var eR =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(T, ey)) | 0) + Math.imul(I, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(I, ey)) | 0) + (i >>> 13)) | 0) +
              (eR >>> 26)) |
            0),
            (eR &= 0x3ffffff),
            (n = Math.imul(j, el)),
            (i = ((i = Math.imul(j, ef)) + Math.imul(H, el)) | 0),
            (o = Math.imul(H, ef)),
            (n = (n + Math.imul(U, ec)) | 0),
            (i = ((i = (i + Math.imul(U, eh)) | 0) + Math.imul(L, ec)) | 0),
            (o = (o + Math.imul(L, eh)) | 0),
            (n = (n + Math.imul(M, ep)) | 0);
          var eM =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(M, ey)) | 0) + Math.imul(P, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(P, ey)) | 0) + (i >>> 13)) | 0) +
              (eM >>> 26)) |
            0),
            (eM &= 0x3ffffff),
            (n = Math.imul(j, ec)),
            (i = ((i = Math.imul(j, eh)) + Math.imul(H, ec)) | 0),
            (o = Math.imul(H, eh)),
            (n = (n + Math.imul(U, ep)) | 0);
          var eP =
            (((f + n) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(U, ey)) | 0) + Math.imul(L, ep)) | 0)) <<
                13)) |
            0;
          (f =
            ((((o = (o + Math.imul(L, ey)) | 0) + (i >>> 13)) | 0) +
              (eP >>> 26)) |
            0),
            (eP &= 0x3ffffff),
            (n = Math.imul(j, ep));
          var eC =
            (((f + n) | 0) +
              ((8191 & (i = ((i = Math.imul(j, ey)) + Math.imul(H, ep)) | 0)) <<
                13)) |
            0;
          return (
            (f =
              ((((o = Math.imul(H, ey)) + (i >>> 13)) | 0) + (eC >>> 26)) | 0),
            (eC &= 0x3ffffff),
            (l[0] = eg),
            (l[1] = eb),
            (l[2] = em),
            (l[3] = ew),
            (l[4] = ev),
            (l[5] = ex),
            (l[6] = eE),
            (l[7] = e_),
            (l[8] = eS),
            (l[9] = eA),
            (l[10] = eB),
            (l[11] = ek),
            (l[12] = eO),
            (l[13] = eT),
            (l[14] = eI),
            (l[15] = eR),
            (l[16] = eM),
            (l[17] = eP),
            (l[18] = eC),
            0 !== f && ((l[19] = f), r.length++),
            r
          );
        };
        function y(e, t, r) {
          return new g().mulp(e, t, r);
        }
        function g(e, t) {
          (this.x = e), (this.y = t);
        }
        Math.imul || (p = d),
          (o.prototype.mulTo = function (e, t) {
            var r,
              n = this.length + e.length;
            return 10 === this.length && 10 === e.length
              ? p(this, e, t)
              : n < 63
              ? d(this, e, t)
              : n < 1024
              ? (function (e, t, r) {
                  (r.negative = t.negative ^ e.negative),
                    (r.length = e.length + t.length);
                  for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                    var a = i;
                    i = 0;
                    for (
                      var s = 0x3ffffff & n,
                        l = Math.min(o, t.length - 1),
                        f = Math.max(0, o - e.length + 1);
                      f <= l;
                      f++
                    ) {
                      var u = o - f,
                        c = (0 | e.words[u]) * (0 | t.words[f]),
                        h = 0x3ffffff & c;
                      (a = (a + ((c / 0x4000000) | 0)) | 0),
                        (s = 0x3ffffff & (h = (h + s) | 0)),
                        (i += (a = (a + (h >>> 26)) | 0) >>> 26),
                        (a &= 0x3ffffff);
                    }
                    (r.words[o] = s), (n = a), (a = i);
                  }
                  return 0 !== n ? (r.words[o] = n) : r.length--, r.strip();
                })(this, e, t)
              : y(this, e, t);
          }),
          (g.prototype.makeRBT = function (e) {
            for (
              var t = Array(e), r = o.prototype._countBits(e) - 1, n = 0;
              n < e;
              n++
            )
              t[n] = this.revBin(n, r, e);
            return t;
          }),
          (g.prototype.revBin = function (e, t, r) {
            if (0 === e || e === r - 1) return e;
            for (var n = 0, i = 0; i < t; i++)
              (n |= (1 & e) << (t - i - 1)), (e >>= 1);
            return n;
          }),
          (g.prototype.permute = function (e, t, r, n, i, o) {
            for (var a = 0; a < o; a++) (n[a] = t[e[a]]), (i[a] = r[e[a]]);
          }),
          (g.prototype.transform = function (e, t, r, n, i, o) {
            this.permute(o, e, t, r, n, i);
            for (var a = 1; a < i; a <<= 1)
              for (
                var s = a << 1,
                  l = Math.cos((2 * Math.PI) / s),
                  f = Math.sin((2 * Math.PI) / s),
                  u = 0;
                u < i;
                u += s
              )
                for (var c = l, h = f, d = 0; d < a; d++) {
                  var p = r[u + d],
                    y = n[u + d],
                    g = r[u + d + a],
                    b = n[u + d + a],
                    m = c * g - h * b;
                  (b = c * b + h * g),
                    (g = m),
                    (r[u + d] = p + g),
                    (n[u + d] = y + b),
                    (r[u + d + a] = p - g),
                    (n[u + d + a] = y - b),
                    d !== s &&
                      ((m = l * c - f * h), (h = l * h + f * c), (c = m));
                }
          }),
          (g.prototype.guessLen13b = function (e, t) {
            var r = 1 | Math.max(t, e),
              n = 1 & r,
              i = 0;
            for (r = (r / 2) | 0; r; r >>>= 1) i++;
            return 1 << (i + 1 + n);
          }),
          (g.prototype.conjugate = function (e, t, r) {
            if (!(r <= 1))
              for (var n = 0; n < r / 2; n++) {
                var i = e[n];
                (e[n] = e[r - n - 1]),
                  (e[r - n - 1] = i),
                  (i = t[n]),
                  (t[n] = -t[r - n - 1]),
                  (t[r - n - 1] = -i);
              }
          }),
          (g.prototype.normalize13b = function (e, t) {
            for (var r = 0, n = 0; n < t / 2; n++) {
              var i =
                8192 * Math.round(e[2 * n + 1] / t) +
                Math.round(e[2 * n] / t) +
                r;
              (e[n] = 0x3ffffff & i),
                (r = i < 0x4000000 ? 0 : (i / 0x4000000) | 0);
            }
            return e;
          }),
          (g.prototype.convert13b = function (e, t, r, i) {
            for (var o = 0, a = 0; a < t; a++)
              (o += 0 | e[a]),
                (r[2 * a] = 8191 & o),
                (o >>>= 13),
                (r[2 * a + 1] = 8191 & o),
                (o >>>= 13);
            for (a = 2 * t; a < i; ++a) r[a] = 0;
            n(0 === o), n((-8192 & o) == 0);
          }),
          (g.prototype.stub = function (e) {
            for (var t = Array(e), r = 0; r < e; r++) t[r] = 0;
            return t;
          }),
          (g.prototype.mulp = function (e, t, r) {
            var n = 2 * this.guessLen13b(e.length, t.length),
              i = this.makeRBT(n),
              o = this.stub(n),
              a = Array(n),
              s = Array(n),
              l = Array(n),
              f = Array(n),
              u = Array(n),
              c = Array(n),
              h = r.words;
            (h.length = n),
              this.convert13b(e.words, e.length, a, n),
              this.convert13b(t.words, t.length, f, n),
              this.transform(a, o, s, l, n, i),
              this.transform(f, o, u, c, n, i);
            for (var d = 0; d < n; d++) {
              var p = s[d] * u[d] - l[d] * c[d];
              (l[d] = s[d] * c[d] + l[d] * u[d]), (s[d] = p);
            }
            return (
              this.conjugate(s, l, n),
              this.transform(s, l, h, o, n, i),
              this.conjugate(h, o, n),
              this.normalize13b(h, n),
              (r.negative = e.negative ^ t.negative),
              (r.length = e.length + t.length),
              r.strip()
            );
          }),
          (o.prototype.mul = function (e) {
            var t = new o(null);
            return (t.words = Array(this.length + e.length)), this.mulTo(e, t);
          }),
          (o.prototype.mulf = function (e) {
            var t = new o(null);
            return (t.words = Array(this.length + e.length)), y(this, e, t);
          }),
          (o.prototype.imul = function (e) {
            return this.clone().mulTo(e, this);
          }),
          (o.prototype.imuln = function (e) {
            n("number" == typeof e), n(e < 0x4000000);
            for (var t = 0, r = 0; r < this.length; r++) {
              var i = (0 | this.words[r]) * e,
                o = (0x3ffffff & i) + (0x3ffffff & t);
              (t >>= 26),
                (t += ((i / 0x4000000) | 0) + (o >>> 26)),
                (this.words[r] = 0x3ffffff & o);
            }
            return 0 !== t && ((this.words[r] = t), this.length++), this;
          }),
          (o.prototype.muln = function (e) {
            return this.clone().imuln(e);
          }),
          (o.prototype.sqr = function () {
            return this.mul(this);
          }),
          (o.prototype.isqr = function () {
            return this.imul(this.clone());
          }),
          (o.prototype.pow = function (e) {
            var t = (function (e) {
              for (var t = Array(e.bitLength()), r = 0; r < t.length; r++) {
                var n = (r / 26) | 0,
                  i = r % 26;
                t[r] = (e.words[n] & (1 << i)) >>> i;
              }
              return t;
            })(e);
            if (0 === t.length) return new o(1);
            for (
              var r = this, n = 0;
              n < t.length && 0 === t[n];
              n++, r = r.sqr()
            );
            if (++n < t.length)
              for (var i = r.sqr(); n < t.length; n++, i = i.sqr())
                0 !== t[n] && (r = r.mul(i));
            return r;
          }),
          (o.prototype.iushln = function (e) {
            n("number" == typeof e && e >= 0);
            var t,
              r = e % 26,
              i = (e - r) / 26,
              o = (0x3ffffff >>> (26 - r)) << (26 - r);
            if (0 !== r) {
              var a = 0;
              for (t = 0; t < this.length; t++) {
                var s = this.words[t] & o,
                  l = ((0 | this.words[t]) - s) << r;
                (this.words[t] = l | a), (a = s >>> (26 - r));
              }
              a && ((this.words[t] = a), this.length++);
            }
            if (0 !== i) {
              for (t = this.length - 1; t >= 0; t--)
                this.words[t + i] = this.words[t];
              for (t = 0; t < i; t++) this.words[t] = 0;
              this.length += i;
            }
            return this.strip();
          }),
          (o.prototype.ishln = function (e) {
            return n(0 === this.negative), this.iushln(e);
          }),
          (o.prototype.iushrn = function (e, t, r) {
            n("number" == typeof e && e >= 0);
            var i = t ? (t - (t % 26)) / 26 : 0,
              o = e % 26,
              a = Math.min((e - o) / 26, this.length),
              s = 0x3ffffff ^ ((0x3ffffff >>> o) << o);
            if (((i -= a), (i = Math.max(0, i)), r)) {
              for (var l = 0; l < a; l++) r.words[l] = this.words[l];
              r.length = a;
            }
            if (0 === a);
            else if (this.length > a)
              for (this.length -= a, l = 0; l < this.length; l++)
                this.words[l] = this.words[l + a];
            else (this.words[0] = 0), (this.length = 1);
            var f = 0;
            for (l = this.length - 1; l >= 0 && (0 !== f || l >= i); l--) {
              var u = 0 | this.words[l];
              (this.words[l] = (f << (26 - o)) | (u >>> o)), (f = u & s);
            }
            return (
              r && 0 !== f && (r.words[r.length++] = f),
              0 === this.length && ((this.words[0] = 0), (this.length = 1)),
              this.strip()
            );
          }),
          (o.prototype.ishrn = function (e, t, r) {
            return n(0 === this.negative), this.iushrn(e, t, r);
          }),
          (o.prototype.shln = function (e) {
            return this.clone().ishln(e);
          }),
          (o.prototype.ushln = function (e) {
            return this.clone().iushln(e);
          }),
          (o.prototype.shrn = function (e) {
            return this.clone().ishrn(e);
          }),
          (o.prototype.ushrn = function (e) {
            return this.clone().iushrn(e);
          }),
          (o.prototype.testn = function (e) {
            n("number" == typeof e && e >= 0);
            var t = e % 26,
              r = (e - t) / 26;
            return !(this.length <= r) && !!(this.words[r] & (1 << t));
          }),
          (o.prototype.imaskn = function (e) {
            n("number" == typeof e && e >= 0);
            var t = e % 26,
              r = (e - t) / 26;
            return (n(
              0 === this.negative,
              "imaskn works only with positive numbers"
            ),
            this.length <= r)
              ? this
              : (0 !== t && r++,
                (this.length = Math.min(r, this.length)),
                0 !== t &&
                  (this.words[this.length - 1] &=
                    0x3ffffff ^ ((0x3ffffff >>> t) << t)),
                this.strip());
          }),
          (o.prototype.maskn = function (e) {
            return this.clone().imaskn(e);
          }),
          (o.prototype.iaddn = function (e) {
            return (n("number" == typeof e), n(e < 0x4000000), e < 0)
              ? this.isubn(-e)
              : 0 !== this.negative
              ? (1 === this.length && (0 | this.words[0]) < e
                  ? ((this.words[0] = e - (0 | this.words[0])),
                    (this.negative = 0))
                  : ((this.negative = 0), this.isubn(e), (this.negative = 1)),
                this)
              : this._iaddn(e);
          }),
          (o.prototype._iaddn = function (e) {
            this.words[0] += e;
            for (var t = 0; t < this.length && this.words[t] >= 0x4000000; t++)
              (this.words[t] -= 0x4000000),
                t === this.length - 1
                  ? (this.words[t + 1] = 1)
                  : this.words[t + 1]++;
            return (this.length = Math.max(this.length, t + 1)), this;
          }),
          (o.prototype.isubn = function (e) {
            if ((n("number" == typeof e), n(e < 0x4000000), e < 0))
              return this.iaddn(-e);
            if (0 !== this.negative)
              return (
                (this.negative = 0), this.iaddn(e), (this.negative = 1), this
              );
            if (((this.words[0] -= e), 1 === this.length && this.words[0] < 0))
              (this.words[0] = -this.words[0]), (this.negative = 1);
            else
              for (var t = 0; t < this.length && this.words[t] < 0; t++)
                (this.words[t] += 0x4000000), (this.words[t + 1] -= 1);
            return this.strip();
          }),
          (o.prototype.addn = function (e) {
            return this.clone().iaddn(e);
          }),
          (o.prototype.subn = function (e) {
            return this.clone().isubn(e);
          }),
          (o.prototype.iabs = function () {
            return (this.negative = 0), this;
          }),
          (o.prototype.abs = function () {
            return this.clone().iabs();
          }),
          (o.prototype._ishlnsubmul = function (e, t, r) {
            var i,
              o,
              a = e.length + r;
            this._expand(a);
            var s = 0;
            for (i = 0; i < e.length; i++) {
              o = (0 | this.words[i + r]) + s;
              var l = (0 | e.words[i]) * t;
              (o -= 0x3ffffff & l),
                (s = (o >> 26) - ((l / 0x4000000) | 0)),
                (this.words[i + r] = 0x3ffffff & o);
            }
            for (; i < this.length - r; i++)
              (s = (o = (0 | this.words[i + r]) + s) >> 26),
                (this.words[i + r] = 0x3ffffff & o);
            if (0 === s) return this.strip();
            for (n(-1 === s), s = 0, i = 0; i < this.length; i++)
              (s = (o = -(0 | this.words[i]) + s) >> 26),
                (this.words[i] = 0x3ffffff & o);
            return (this.negative = 1), this.strip();
          }),
          (o.prototype._wordDiv = function (e, t) {
            var r,
              n = this.length - e.length,
              i = this.clone(),
              a = e,
              s = 0 | a.words[a.length - 1];
            0 != (n = 26 - this._countBits(s)) &&
              ((a = a.ushln(n)), i.iushln(n), (s = 0 | a.words[a.length - 1]));
            var l = i.length - a.length;
            if ("mod" !== t) {
              ((r = new o(null)).length = l + 1), (r.words = Array(r.length));
              for (var f = 0; f < r.length; f++) r.words[f] = 0;
            }
            var u = i.clone()._ishlnsubmul(a, 1, l);
            0 === u.negative && ((i = u), r && (r.words[l] = 1));
            for (var c = l - 1; c >= 0; c--) {
              var h =
                (0 | i.words[a.length + c]) * 0x4000000 +
                (0 | i.words[a.length + c - 1]);
              for (
                h = Math.min((h / s) | 0, 0x3ffffff), i._ishlnsubmul(a, h, c);
                0 !== i.negative;

              )
                h--,
                  (i.negative = 0),
                  i._ishlnsubmul(a, 1, c),
                  i.isZero() || (i.negative ^= 1);
              r && (r.words[c] = h);
            }
            return (
              r && r.strip(),
              i.strip(),
              "div" !== t && 0 !== n && i.iushrn(n),
              { div: r || null, mod: i }
            );
          }),
          (o.prototype.divmod = function (e, t, r) {
            var i, a, s;
            return (n(!e.isZero()), this.isZero())
              ? { div: new o(0), mod: new o(0) }
              : 0 !== this.negative && 0 === e.negative
              ? ((s = this.neg().divmod(e, t)),
                "mod" !== t && (i = s.div.neg()),
                "div" !== t &&
                  ((a = s.mod.neg()), r && 0 !== a.negative && a.iadd(e)),
                { div: i, mod: a })
              : 0 === this.negative && 0 !== e.negative
              ? ((s = this.divmod(e.neg(), t)),
                "mod" !== t && (i = s.div.neg()),
                { div: i, mod: s.mod })
              : (this.negative & e.negative) != 0
              ? ((s = this.neg().divmod(e.neg(), t)),
                "div" !== t &&
                  ((a = s.mod.neg()), r && 0 !== a.negative && a.isub(e)),
                { div: s.div, mod: a })
              : e.length > this.length || 0 > this.cmp(e)
              ? { div: new o(0), mod: this }
              : 1 === e.length
              ? "div" === t
                ? { div: this.divn(e.words[0]), mod: null }
                : "mod" === t
                ? { div: null, mod: new o(this.modn(e.words[0])) }
                : {
                    div: this.divn(e.words[0]),
                    mod: new o(this.modn(e.words[0])),
                  }
              : this._wordDiv(e, t);
          }),
          (o.prototype.div = function (e) {
            return this.divmod(e, "div", !1).div;
          }),
          (o.prototype.mod = function (e) {
            return this.divmod(e, "mod", !1).mod;
          }),
          (o.prototype.umod = function (e) {
            return this.divmod(e, "mod", !0).mod;
          }),
          (o.prototype.divRound = function (e) {
            var t = this.divmod(e);
            if (t.mod.isZero()) return t.div;
            var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod,
              n = e.ushrn(1),
              i = e.andln(1),
              o = r.cmp(n);
            return o < 0 || (1 === i && 0 === o)
              ? t.div
              : 0 !== t.div.negative
              ? t.div.isubn(1)
              : t.div.iaddn(1);
          }),
          (o.prototype.modn = function (e) {
            n(e <= 0x3ffffff);
            for (var t = 0x4000000 % e, r = 0, i = this.length - 1; i >= 0; i--)
              r = (t * r + (0 | this.words[i])) % e;
            return r;
          }),
          (o.prototype.idivn = function (e) {
            n(e <= 0x3ffffff);
            for (var t = 0, r = this.length - 1; r >= 0; r--) {
              var i = (0 | this.words[r]) + 0x4000000 * t;
              (this.words[r] = (i / e) | 0), (t = i % e);
            }
            return this.strip();
          }),
          (o.prototype.divn = function (e) {
            return this.clone().idivn(e);
          }),
          (o.prototype.egcd = function (e) {
            n(0 === e.negative), n(!e.isZero());
            var t = this,
              r = e.clone();
            t = 0 !== t.negative ? t.umod(e) : t.clone();
            for (
              var i = new o(1), a = new o(0), s = new o(0), l = new o(1), f = 0;
              t.isEven() && r.isEven();

            )
              t.iushrn(1), r.iushrn(1), ++f;
            for (var u = r.clone(), c = t.clone(); !t.isZero(); ) {
              for (
                var h = 0, d = 1;
                (t.words[0] & d) == 0 && h < 26;
                ++h, d <<= 1
              );
              if (h > 0)
                for (t.iushrn(h); h-- > 0; )
                  (i.isOdd() || a.isOdd()) && (i.iadd(u), a.isub(c)),
                    i.iushrn(1),
                    a.iushrn(1);
              for (
                var p = 0, y = 1;
                (r.words[0] & y) == 0 && p < 26;
                ++p, y <<= 1
              );
              if (p > 0)
                for (r.iushrn(p); p-- > 0; )
                  (s.isOdd() || l.isOdd()) && (s.iadd(u), l.isub(c)),
                    s.iushrn(1),
                    l.iushrn(1);
              t.cmp(r) >= 0
                ? (t.isub(r), i.isub(s), a.isub(l))
                : (r.isub(t), s.isub(i), l.isub(a));
            }
            return { a: s, b: l, gcd: r.iushln(f) };
          }),
          (o.prototype._invmp = function (e) {
            n(0 === e.negative), n(!e.isZero());
            var t,
              r = this,
              i = e.clone();
            r = 0 !== r.negative ? r.umod(e) : r.clone();
            for (
              var a = new o(1), s = new o(0), l = i.clone();
              r.cmpn(1) > 0 && i.cmpn(1) > 0;

            ) {
              for (
                var f = 0, u = 1;
                (r.words[0] & u) == 0 && f < 26;
                ++f, u <<= 1
              );
              if (f > 0)
                for (r.iushrn(f); f-- > 0; )
                  a.isOdd() && a.iadd(l), a.iushrn(1);
              for (
                var c = 0, h = 1;
                (i.words[0] & h) == 0 && c < 26;
                ++c, h <<= 1
              );
              if (c > 0)
                for (i.iushrn(c); c-- > 0; )
                  s.isOdd() && s.iadd(l), s.iushrn(1);
              r.cmp(i) >= 0 ? (r.isub(i), a.isub(s)) : (i.isub(r), s.isub(a));
            }
            return 0 > (t = 0 === r.cmpn(1) ? a : s).cmpn(0) && t.iadd(e), t;
          }),
          (o.prototype.gcd = function (e) {
            if (this.isZero()) return e.abs();
            if (e.isZero()) return this.abs();
            var t = this.clone(),
              r = e.clone();
            (t.negative = 0), (r.negative = 0);
            for (var n = 0; t.isEven() && r.isEven(); n++)
              t.iushrn(1), r.iushrn(1);
            for (;;) {
              for (; t.isEven(); ) t.iushrn(1);
              for (; r.isEven(); ) r.iushrn(1);
              var i = t.cmp(r);
              if (i < 0) {
                var o = t;
                (t = r), (r = o);
              } else if (0 === i || 0 === r.cmpn(1)) break;
              t.isub(r);
            }
            return r.iushln(n);
          }),
          (o.prototype.invm = function (e) {
            return this.egcd(e).a.umod(e);
          }),
          (o.prototype.isEven = function () {
            return (1 & this.words[0]) == 0;
          }),
          (o.prototype.isOdd = function () {
            return (1 & this.words[0]) == 1;
          }),
          (o.prototype.andln = function (e) {
            return this.words[0] & e;
          }),
          (o.prototype.bincn = function (e) {
            n("number" == typeof e);
            var t = e % 26,
              r = (e - t) / 26,
              i = 1 << t;
            if (this.length <= r)
              return this._expand(r + 1), (this.words[r] |= i), this;
            for (var o = i, a = r; 0 !== o && a < this.length; a++) {
              var s = 0 | this.words[a];
              (s += o), (o = s >>> 26), (s &= 0x3ffffff), (this.words[a] = s);
            }
            return 0 !== o && ((this.words[a] = o), this.length++), this;
          }),
          (o.prototype.isZero = function () {
            return 1 === this.length && 0 === this.words[0];
          }),
          (o.prototype.cmpn = function (e) {
            var t,
              r = e < 0;
            if (0 !== this.negative && !r) return -1;
            if (0 === this.negative && r) return 1;
            if ((this.strip(), this.length > 1)) t = 1;
            else {
              r && (e = -e), n(e <= 0x3ffffff, "Number is too big");
              var i = 0 | this.words[0];
              t = i === e ? 0 : i < e ? -1 : 1;
            }
            return 0 !== this.negative ? 0 | -t : t;
          }),
          (o.prototype.cmp = function (e) {
            if (0 !== this.negative && 0 === e.negative) return -1;
            if (0 === this.negative && 0 !== e.negative) return 1;
            var t = this.ucmp(e);
            return 0 !== this.negative ? 0 | -t : t;
          }),
          (o.prototype.ucmp = function (e) {
            if (this.length > e.length) return 1;
            if (this.length < e.length) return -1;
            for (var t = 0, r = this.length - 1; r >= 0; r--) {
              var n = 0 | this.words[r],
                i = 0 | e.words[r];
              if (n !== i) {
                n < i ? (t = -1) : n > i && (t = 1);
                break;
              }
            }
            return t;
          }),
          (o.prototype.gtn = function (e) {
            return 1 === this.cmpn(e);
          }),
          (o.prototype.gt = function (e) {
            return 1 === this.cmp(e);
          }),
          (o.prototype.gten = function (e) {
            return this.cmpn(e) >= 0;
          }),
          (o.prototype.gte = function (e) {
            return this.cmp(e) >= 0;
          }),
          (o.prototype.ltn = function (e) {
            return -1 === this.cmpn(e);
          }),
          (o.prototype.lt = function (e) {
            return -1 === this.cmp(e);
          }),
          (o.prototype.lten = function (e) {
            return 0 >= this.cmpn(e);
          }),
          (o.prototype.lte = function (e) {
            return 0 >= this.cmp(e);
          }),
          (o.prototype.eqn = function (e) {
            return 0 === this.cmpn(e);
          }),
          (o.prototype.eq = function (e) {
            return 0 === this.cmp(e);
          }),
          (o.red = function (e) {
            return new _(e);
          }),
          (o.prototype.toRed = function (e) {
            return (
              n(!this.red, "Already a number in reduction context"),
              n(0 === this.negative, "red works only with positives"),
              e.convertTo(this)._forceRed(e)
            );
          }),
          (o.prototype.fromRed = function () {
            return (
              n(
                this.red,
                "fromRed works only with numbers in reduction context"
              ),
              this.red.convertFrom(this)
            );
          }),
          (o.prototype._forceRed = function (e) {
            return (this.red = e), this;
          }),
          (o.prototype.forceRed = function (e) {
            return (
              n(!this.red, "Already a number in reduction context"),
              this._forceRed(e)
            );
          }),
          (o.prototype.redAdd = function (e) {
            return (
              n(this.red, "redAdd works only with red numbers"),
              this.red.add(this, e)
            );
          }),
          (o.prototype.redIAdd = function (e) {
            return (
              n(this.red, "redIAdd works only with red numbers"),
              this.red.iadd(this, e)
            );
          }),
          (o.prototype.redSub = function (e) {
            return (
              n(this.red, "redSub works only with red numbers"),
              this.red.sub(this, e)
            );
          }),
          (o.prototype.redISub = function (e) {
            return (
              n(this.red, "redISub works only with red numbers"),
              this.red.isub(this, e)
            );
          }),
          (o.prototype.redShl = function (e) {
            return (
              n(this.red, "redShl works only with red numbers"),
              this.red.shl(this, e)
            );
          }),
          (o.prototype.redMul = function (e) {
            return (
              n(this.red, "redMul works only with red numbers"),
              this.red._verify2(this, e),
              this.red.mul(this, e)
            );
          }),
          (o.prototype.redIMul = function (e) {
            return (
              n(this.red, "redMul works only with red numbers"),
              this.red._verify2(this, e),
              this.red.imul(this, e)
            );
          }),
          (o.prototype.redSqr = function () {
            return (
              n(this.red, "redSqr works only with red numbers"),
              this.red._verify1(this),
              this.red.sqr(this)
            );
          }),
          (o.prototype.redISqr = function () {
            return (
              n(this.red, "redISqr works only with red numbers"),
              this.red._verify1(this),
              this.red.isqr(this)
            );
          }),
          (o.prototype.redSqrt = function () {
            return (
              n(this.red, "redSqrt works only with red numbers"),
              this.red._verify1(this),
              this.red.sqrt(this)
            );
          }),
          (o.prototype.redInvm = function () {
            return (
              n(this.red, "redInvm works only with red numbers"),
              this.red._verify1(this),
              this.red.invm(this)
            );
          }),
          (o.prototype.redNeg = function () {
            return (
              n(this.red, "redNeg works only with red numbers"),
              this.red._verify1(this),
              this.red.neg(this)
            );
          }),
          (o.prototype.redPow = function (e) {
            return (
              n(this.red && !e.red, "redPow(normalNum)"),
              this.red._verify1(this),
              this.red.pow(this, e)
            );
          });
        var b = { k256: null, p224: null, p192: null, p25519: null };
        function m(e, t) {
          (this.name = e),
            (this.p = new o(t, 16)),
            (this.n = this.p.bitLength()),
            (this.k = new o(1).iushln(this.n).isub(this.p)),
            (this.tmp = this._tmp());
        }
        function w() {
          m.call(
            this,
            "k256",
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
          );
        }
        function v() {
          m.call(
            this,
            "p224",
            "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
          );
        }
        function x() {
          m.call(
            this,
            "p192",
            "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
          );
        }
        function E() {
          m.call(
            this,
            "25519",
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
          );
        }
        function _(e) {
          if ("string" == typeof e) {
            var t = o._prime(e);
            (this.m = t.p), (this.prime = t);
          } else
            n(e.gtn(1), "modulus must be greater than 1"),
              (this.m = e),
              (this.prime = null);
        }
        function S(e) {
          _.call(this, e),
            (this.shift = this.m.bitLength()),
            this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
            (this.r = new o(1).iushln(this.shift)),
            (this.r2 = this.imod(this.r.sqr())),
            (this.rinv = this.r._invmp(this.m)),
            (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
            (this.minv = this.minv.umod(this.r)),
            (this.minv = this.r.sub(this.minv));
        }
        (m.prototype._tmp = function () {
          var e = new o(null);
          return (e.words = Array(Math.ceil(this.n / 13))), e;
        }),
          (m.prototype.ireduce = function (e) {
            var t,
              r = e;
            do
              this.split(r, this.tmp),
                (t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
            while (t > this.n);
            var n = t < this.n ? -1 : r.ucmp(this.p);
            return (
              0 === n
                ? ((r.words[0] = 0), (r.length = 1))
                : n > 0
                ? r.isub(this.p)
                : void 0 !== r.strip
                ? r.strip()
                : r._strip(),
              r
            );
          }),
          (m.prototype.split = function (e, t) {
            e.iushrn(this.n, 0, t);
          }),
          (m.prototype.imulK = function (e) {
            return e.imul(this.k);
          }),
          i(w, m),
          (w.prototype.split = function (e, t) {
            for (var r = Math.min(e.length, 9), n = 0; n < r; n++)
              t.words[n] = e.words[n];
            if (((t.length = r), e.length <= 9)) {
              (e.words[0] = 0), (e.length = 1);
              return;
            }
            var i = e.words[9];
            for (n = 10, t.words[t.length++] = 4194303 & i; n < e.length; n++) {
              var o = 0 | e.words[n];
              (e.words[n - 10] = ((4194303 & o) << 4) | (i >>> 22)), (i = o);
            }
            (i >>>= 22),
              (e.words[n - 10] = i),
              0 === i && e.length > 10 ? (e.length -= 10) : (e.length -= 9);
          }),
          (w.prototype.imulK = function (e) {
            (e.words[e.length] = 0),
              (e.words[e.length + 1] = 0),
              (e.length += 2);
            for (var t = 0, r = 0; r < e.length; r++) {
              var n = 0 | e.words[r];
              (t += 977 * n),
                (e.words[r] = 0x3ffffff & t),
                (t = 64 * n + ((t / 0x4000000) | 0));
            }
            return (
              0 === e.words[e.length - 1] &&
                (e.length--, 0 === e.words[e.length - 1] && e.length--),
              e
            );
          }),
          i(v, m),
          i(x, m),
          i(E, m),
          (E.prototype.imulK = function (e) {
            for (var t = 0, r = 0; r < e.length; r++) {
              var n = (0 | e.words[r]) * 19 + t,
                i = 0x3ffffff & n;
              (n >>>= 26), (e.words[r] = i), (t = n);
            }
            return 0 !== t && (e.words[e.length++] = t), e;
          }),
          (o._prime = function (e) {
            var t;
            if (b[e]) return b[e];
            if ("k256" === e) t = new w();
            else if ("p224" === e) t = new v();
            else if ("p192" === e) t = new x();
            else if ("p25519" === e) t = new E();
            else throw Error("Unknown prime " + e);
            return (b[e] = t), t;
          }),
          (_.prototype._verify1 = function (e) {
            n(0 === e.negative, "red works only with positives"),
              n(e.red, "red works only with red numbers");
          }),
          (_.prototype._verify2 = function (e, t) {
            n((e.negative | t.negative) == 0, "red works only with positives"),
              n(e.red && e.red === t.red, "red works only with red numbers");
          }),
          (_.prototype.imod = function (e) {
            return this.prime
              ? this.prime.ireduce(e)._forceRed(this)
              : e.umod(this.m)._forceRed(this);
          }),
          (_.prototype.neg = function (e) {
            return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this);
          }),
          (_.prototype.add = function (e, t) {
            this._verify2(e, t);
            var r = e.add(t);
            return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
          }),
          (_.prototype.iadd = function (e, t) {
            this._verify2(e, t);
            var r = e.iadd(t);
            return r.cmp(this.m) >= 0 && r.isub(this.m), r;
          }),
          (_.prototype.sub = function (e, t) {
            this._verify2(e, t);
            var r = e.sub(t);
            return 0 > r.cmpn(0) && r.iadd(this.m), r._forceRed(this);
          }),
          (_.prototype.isub = function (e, t) {
            this._verify2(e, t);
            var r = e.isub(t);
            return 0 > r.cmpn(0) && r.iadd(this.m), r;
          }),
          (_.prototype.shl = function (e, t) {
            return this._verify1(e), this.imod(e.ushln(t));
          }),
          (_.prototype.imul = function (e, t) {
            return this._verify2(e, t), this.imod(e.imul(t));
          }),
          (_.prototype.mul = function (e, t) {
            return this._verify2(e, t), this.imod(e.mul(t));
          }),
          (_.prototype.isqr = function (e) {
            return this.imul(e, e.clone());
          }),
          (_.prototype.sqr = function (e) {
            return this.mul(e, e);
          }),
          (_.prototype.sqrt = function (e) {
            if (e.isZero()) return e.clone();
            var t = this.m.andln(3);
            if ((n(t % 2 == 1), 3 === t)) {
              var r = this.m.add(new o(1)).iushrn(2);
              return this.pow(e, r);
            }
            for (
              var i = this.m.subn(1), a = 0;
              !i.isZero() && 0 === i.andln(1);

            )
              a++, i.iushrn(1);
            n(!i.isZero());
            var s = new o(1).toRed(this),
              l = s.redNeg(),
              f = this.m.subn(1).iushrn(1),
              u = this.m.bitLength();
            for (
              u = new o(2 * u * u).toRed(this);
              0 !== this.pow(u, f).cmp(l);

            )
              u.redIAdd(l);
            for (
              var c = this.pow(u, i),
                h = this.pow(e, i.addn(1).iushrn(1)),
                d = this.pow(e, i),
                p = a;
              0 !== d.cmp(s);

            ) {
              for (var y = d, g = 0; 0 !== y.cmp(s); g++) y = y.redSqr();
              n(g < p);
              var b = this.pow(c, new o(1).iushln(p - g - 1));
              (h = h.redMul(b)), (c = b.redSqr()), (d = d.redMul(c)), (p = g);
            }
            return h;
          }),
          (_.prototype.invm = function (e) {
            var t = e._invmp(this.m);
            return 0 !== t.negative
              ? ((t.negative = 0), this.imod(t).redNeg())
              : this.imod(t);
          }),
          (_.prototype.pow = function (e, t) {
            if (t.isZero()) return new o(1).toRed(this);
            if (0 === t.cmpn(1)) return e.clone();
            var r = Array(16);
            (r[0] = new o(1).toRed(this)), (r[1] = e);
            for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], e);
            var i = r[0],
              a = 0,
              s = 0,
              l = t.bitLength() % 26;
            for (0 === l && (l = 26), n = t.length - 1; n >= 0; n--) {
              for (var f = t.words[n], u = l - 1; u >= 0; u--) {
                var c = (f >> u) & 1;
                if ((i !== r[0] && (i = this.sqr(i)), 0 === c && 0 === a)) {
                  s = 0;
                  continue;
                }
                (a <<= 1),
                  (a |= c),
                  (4 == ++s || (0 === n && 0 === u)) &&
                    ((i = this.mul(i, r[a])), (s = 0), (a = 0));
              }
              l = 26;
            }
            return i;
          }),
          (_.prototype.convertTo = function (e) {
            var t = e.umod(this.m);
            return t === e ? t.clone() : t;
          }),
          (_.prototype.convertFrom = function (e) {
            var t = e.clone();
            return (t.red = null), t;
          }),
          (o.mont = function (e) {
            return new S(e);
          }),
          i(S, _),
          (S.prototype.convertTo = function (e) {
            return this.imod(e.ushln(this.shift));
          }),
          (S.prototype.convertFrom = function (e) {
            var t = this.imod(e.mul(this.rinv));
            return (t.red = null), t;
          }),
          (S.prototype.imul = function (e, t) {
            if (e.isZero() || t.isZero())
              return (e.words[0] = 0), (e.length = 1), e;
            var r = e.imul(t),
              n = r
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
            return (
              i.cmp(this.m) >= 0
                ? (o = i.isub(this.m))
                : 0 > i.cmpn(0) && (o = i.iadd(this.m)),
              o._forceRed(this)
            );
          }),
          (S.prototype.mul = function (e, t) {
            if (e.isZero() || t.isZero()) return new o(0)._forceRed(this);
            var r = e.mul(t),
              n = r
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              a = i;
            return (
              i.cmp(this.m) >= 0
                ? (a = i.isub(this.m))
                : 0 > i.cmpn(0) && (a = i.iadd(this.m)),
              a._forceRed(this)
            );
          }),
          (S.prototype.invm = function (e) {
            return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this);
          });
      })((e = r.nmd(e)), this);
    },
    72608: (e, t, r) => {
      "use strict";
      var n,
        i = r(51642).Buffer;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.recoverTypedSignature =
          t.signTypedData =
          t.typedSignatureHash =
          t.TypedDataUtils =
          t.TYPED_MESSAGE_SCHEMA =
          t.SignTypedDataVersion =
            void 0);
      let o = r(43118),
        a = r(30150),
        s = r(67551),
        l = r(16888),
        f = r(91262);
      function u(e, t) {
        if (Object.keys(n).includes(e)) {
          if (t && !t.includes(e))
            throw Error(
              `SignTypedDataVersion not allowed: '${e}'. Allowed versions are: ${t.join(
                ", "
              )}`
            );
        } else throw Error(`Invalid version: '${e}'`);
      }
      function c(e, t, r, h) {
        u(h, [n.V3, n.V4]);
        let d = ["bytes32"],
          p = [y(e, r)];
        for (let y of r[e]) {
          if (h === n.V3 && void 0 === t[y.name]) continue;
          let [e, g] = (function e(t, r, h, d, p) {
            if ((u(p, [n.V3, n.V4]), void 0 !== t[h]))
              return [
                "bytes32",
                p === n.V4 && null == d
                  ? "0x0000000000000000000000000000000000000000000000000000000000000000"
                  : (0, o.arrToBufArr)((0, a.keccak256)(c(h, d, t, p))),
              ];
            if (void 0 === d)
              throw Error(`missing value for field ${r} of type ${h}`);
            if ("bytes" === h) {
              if ("number" == typeof d) d = (0, f.numberToBuffer)(d);
              else if ((0, s.isHexString)(d)) {
                let e = d.length % 2 ? "0" : "";
                d = i.from(e + d.slice(2), "hex");
              } else d = i.from(d, "utf8");
              return ["bytes32", (0, o.arrToBufArr)((0, a.keccak256)(d))];
            }
            if ("string" === h)
              return (
                (d =
                  "number" == typeof d
                    ? (0, f.numberToBuffer)(d)
                    : i.from(null != d ? d : "", "utf8")),
                ["bytes32", (0, o.arrToBufArr)((0, a.keccak256)(d))]
              );
            if (h.endsWith("]")) {
              if (p === n.V3)
                throw Error(
                  "Arrays are unimplemented in encodeData; use V4 extension"
                );
              let i = h.slice(0, h.lastIndexOf("[")),
                s = d.map((n) => e(t, r, i, n, p));
              return [
                "bytes32",
                (0, o.arrToBufArr)(
                  (0, a.keccak256)(
                    (0, l.rawEncode)(
                      s.map(([e]) => e),
                      s.map(([, e]) => e)
                    )
                  )
                ),
              ];
            }
            return [h, d];
          })(r, y.name, y.type, t[y.name], h);
          d.push(e), p.push(g);
        }
        return (0, l.rawEncode)(d, p);
      }
      function h(e, t) {
        let r = "",
          n = d(e, t);
        for (let i of (n.delete(e), [e, ...Array.from(n).sort()])) {
          if (!t[i]) throw Error(`No type definition specified: ${i}`);
          r += `${i}(${t[i]
            .map(({ name: e, type: t }) => `${t} ${e}`)
            .join(",")})`;
        }
        return r;
      }
      function d(e, t, r = new Set()) {
        if ("string" != typeof e)
          throw Error(
            `Invalid findTypeDependencies input ${JSON.stringify(e)}`
          );
        let n = e.match(/^\w*/u);
        if ((([e] = n), r.has(e) || void 0 === t[e])) return r;
        for (let n of (r.add(e), t[e])) d(n.type, t, r);
        return r;
      }
      function p(e, t, r, i) {
        u(i, [n.V3, n.V4]);
        let s = c(e, t, r, i),
          l = (0, a.keccak256)(s);
        return (0, o.arrToBufArr)(l);
      }
      function y(e, t) {
        let r = i.from(h(e, t), "utf-8");
        return (0, o.arrToBufArr)((0, a.keccak256)(r));
      }
      function g(e) {
        let r = {};
        for (let n in t.TYPED_MESSAGE_SCHEMA.properties) e[n] && (r[n] = e[n]);
        return (
          "types" in r &&
            (r.types = Object.assign({ EIP712Domain: [] }, r.types)),
          r
        );
      }
      function b(e, t) {
        u(t, [n.V3, n.V4]);
        let r = g(e),
          { domain: i } = r;
        return p("EIP712Domain", i, { EIP712Domain: r.types.EIP712Domain }, t);
      }
      function m(e) {
        let t = Error("Expect argument to be non-empty array");
        if ("object" != typeof e || !("length" in e) || !e.length) throw t;
        let r = e.map(function (e) {
            return "bytes" !== e.type
              ? e.value
              : (0, f.legacyToBuffer)(e.value);
          }),
          n = e.map(function (e) {
            return e.type;
          }),
          i = e.map(function (e) {
            if (!e.name) throw t;
            return `${e.type} ${e.name}`;
          });
        return (0, o.arrToBufArr)(
          (0, a.keccak256)(
            (0, l.solidityPack)(
              ["bytes32", "bytes32"],
              [
                (0, a.keccak256)(
                  (0, l.solidityPack)(Array(e.length).fill("string"), i)
                ),
                (0, a.keccak256)((0, l.solidityPack)(n, r)),
              ]
            )
          )
        );
      }
      !(function (e) {
        (e.V1 = "V1"), (e.V3 = "V3"), (e.V4 = "V4");
      })((n = t.SignTypedDataVersion || (t.SignTypedDataVersion = {}))),
        (t.TYPED_MESSAGE_SCHEMA = {
          type: "object",
          properties: {
            types: {
              type: "object",
              additionalProperties: {
                type: "array",
                items: {
                  type: "object",
                  properties: {
                    name: { type: "string" },
                    type: { type: "string" },
                  },
                  required: ["name", "type"],
                },
              },
            },
            primaryType: { type: "string" },
            domain: { type: "object" },
            message: { type: "object" },
          },
          required: ["types", "primaryType", "domain", "message"],
        }),
        (t.TypedDataUtils = {
          encodeData: c,
          encodeType: h,
          findTypeDependencies: d,
          hashStruct: p,
          hashType: y,
          sanitizeData: g,
          eip712Hash: function (e, t) {
            u(t, [n.V3, n.V4]);
            let r = g(e),
              s = [i.from("1901", "hex")];
            return (
              s.push(b(e, t)),
              "EIP712Domain" !== r.primaryType &&
                s.push(p(r.primaryType, r.message, r.types, t)),
              (0, o.arrToBufArr)((0, a.keccak256)(i.concat(s)))
            );
          },
          eip712DomainHash: b,
        }),
        (t.typedSignatureHash = function (e) {
          let t = m(e);
          return (0, o.bufferToHex)(t);
        }),
        (t.signTypedData = function ({ privateKey: e, data: r, version: i }) {
          if ((u(i), (0, f.isNullish)(r)))
            throw Error("Missing data parameter");
          if ((0, f.isNullish)(e)) throw Error("Missing private key parameter");
          let a = i === n.V1 ? m(r) : t.TypedDataUtils.eip712Hash(r, i),
            s = (0, o.ecsign)(a, e);
          return (0, f.concatSig)((0, o.toBuffer)(s.v), s.r, s.s);
        }),
        (t.recoverTypedSignature = function ({
          data: e,
          signature: r,
          version: i,
        }) {
          if ((u(i), (0, f.isNullish)(e)))
            throw Error("Missing data parameter");
          if ((0, f.isNullish)(r)) throw Error("Missing signature parameter");
          let a = i === n.V1 ? m(e) : t.TypedDataUtils.eip712Hash(e, i),
            s = (0, f.recoverPublicKey)(a, r),
            l = (0, o.publicToAddress)(s);
          return (0, o.bufferToHex)(l);
        });
    },
    73095: (e, t, r) => {
      "use strict";
      r.d(t, {
        Me: () => m,
        _o: () => h,
        bv: () => w,
        pV: () => S,
        wN: () => p,
      });
      var n = r(95293),
        i = r(3098),
        o = r(30728),
        a = r(51552),
        s = r(31704),
        l = r(14157);
      function f(e, t) {
        try {
          return s.nj(e, t), !0;
        } catch (e) {
          return !1;
        }
      }
      let u = [
          {
            encode(e) {
              if (
                2 === e.length &&
                1 === e[0] &&
                s.aY(e[1]) &&
                "4e73" === n.uh.encode(e[1])
              )
                return { type: "p2a", script: a.eF.encode(e) };
            },
            decode: (e) => {
              if ("p2a" === e.type) return [1, n.uh.decode("4e73")];
            },
          },
          {
            encode(e) {
              if (
                2 === e.length &&
                s.aY(e[0]) &&
                f(e[0], s.Wy.ecdsa) &&
                "CHECKSIG" === e[1]
              )
                return { type: "pk", pubkey: e[0] };
            },
            decode: (e) => ("pk" === e.type ? [e.pubkey, "CHECKSIG"] : void 0),
          },
          {
            encode(e) {
              if (
                5 === e.length &&
                "DUP" === e[0] &&
                "HASH160" === e[1] &&
                s.aY(e[2]) &&
                "EQUALVERIFY" === e[3] &&
                "CHECKSIG" === e[4]
              )
                return { type: "pkh", hash: e[2] };
            },
            decode: (e) =>
              "pkh" === e.type
                ? ["DUP", "HASH160", e.hash, "EQUALVERIFY", "CHECKSIG"]
                : void 0,
          },
          {
            encode(e) {
              if (
                3 === e.length &&
                "HASH160" === e[0] &&
                s.aY(e[1]) &&
                "EQUAL" === e[2]
              )
                return { type: "sh", hash: e[1] };
            },
            decode: (e) =>
              "sh" === e.type ? ["HASH160", e.hash, "EQUAL"] : void 0,
          },
          {
            encode(e) {
              if (
                2 === e.length &&
                0 === e[0] &&
                s.aY(e[1]) &&
                32 === e[1].length
              )
                return { type: "wsh", hash: e[1] };
            },
            decode: (e) => ("wsh" === e.type ? [0, e.hash] : void 0),
          },
          {
            encode(e) {
              if (
                2 === e.length &&
                0 === e[0] &&
                s.aY(e[1]) &&
                20 === e[1].length
              )
                return { type: "wpkh", hash: e[1] };
            },
            decode: (e) => ("wpkh" === e.type ? [0, e.hash] : void 0),
          },
          {
            encode(e) {
              let t = e.length - 1;
              if ("CHECKMULTISIG" !== e[t]) return;
              let r = e[0],
                n = e[t - 1];
              if ("number" != typeof r || "number" != typeof n) return;
              let i = e.slice(1, -2);
              if (n === i.length) {
                for (let e of i) if (!s.aY(e)) return;
                return { type: "ms", m: r, pubkeys: i };
              }
            },
            decode: (e) =>
              "ms" === e.type
                ? [e.m, ...e.pubkeys, e.pubkeys.length, "CHECKMULTISIG"]
                : void 0,
          },
          {
            encode(e) {
              if (2 === e.length && 1 === e[0] && s.aY(e[1]))
                return { type: "tr", pubkey: e[1] };
            },
            decode: (e) => ("tr" === e.type ? [1, e.pubkey] : void 0),
          },
          {
            encode(e) {
              let t = e.length - 1;
              if ("CHECKSIG" !== e[t]) return;
              let r = [];
              for (let n = 0; n < t; n++) {
                let i = e[n];
                if (1 & n) {
                  if ("CHECKSIGVERIFY" !== i || n === t - 1) return;
                  continue;
                }
                if (!s.aY(i)) return;
                r.push(i);
              }
              return { type: "tr_ns", pubkeys: r };
            },
            decode: (e) => {
              if ("tr_ns" !== e.type) return;
              let t = [];
              for (let r = 0; r < e.pubkeys.length - 1; r++)
                t.push(e.pubkeys[r], "CHECKSIGVERIFY");
              return t.push(e.pubkeys[e.pubkeys.length - 1], "CHECKSIG"), t;
            },
          },
          {
            encode(e) {
              let t = e.length - 1;
              if ("NUMEQUAL" !== e[t] || "CHECKSIG" !== e[1]) return;
              let r = [],
                n = (0, a.zL)(e[t - 1]);
              if ("number" == typeof n) {
                for (let n = 0; n < t - 1; n++) {
                  let t = e[n];
                  if (1 & n) {
                    if (t !== (1 === n ? "CHECKSIG" : "CHECKSIGADD"))
                      throw Error("OutScript.encode/tr_ms: wrong element");
                    continue;
                  }
                  if (!s.aY(t))
                    throw Error("OutScript.encode/tr_ms: wrong key element");
                  r.push(t);
                }
                return { type: "tr_ms", pubkeys: r, m: n };
              }
            },
            decode: (e) => {
              if ("tr_ms" !== e.type) return;
              let t = [e.pubkeys[0], "CHECKSIG"];
              for (let r = 1; r < e.pubkeys.length; r++)
                t.push(e.pubkeys[r], "CHECKSIGADD");
              return t.push(e.m, "NUMEQUAL"), t;
            },
          },
          {
            encode: (e) => ({ type: "unknown", script: a.eF.encode(e) }),
            decode: (e) =>
              "unknown" === e.type ? a.eF.decode(e.script) : void 0,
          },
        ],
        c = i.Bb(a.eF, i.Lo.match(u)),
        h = i.tf(c, (e) => {
          if ("pk" === e.type && !f(e.pubkey, s.Wy.ecdsa))
            throw Error("OutScript/pk: wrong key");
          if (
            ("pkh" === e.type || "sh" === e.type || "wpkh" === e.type) &&
            (!s.aY(e.hash) || 20 !== e.hash.length)
          )
            throw Error(`OutScript/${e.type}: wrong hash`);
          if ("wsh" === e.type && (!s.aY(e.hash) || 32 !== e.hash.length))
            throw Error("OutScript/wsh: wrong hash");
          if (
            "tr" === e.type &&
            (!s.aY(e.pubkey) || !f(e.pubkey, s.Wy.schnorr))
          )
            throw Error("OutScript/tr: wrong taproot public key");
          if (
            ("ms" === e.type || "tr_ns" === e.type || "tr_ms" === e.type) &&
            !Array.isArray(e.pubkeys)
          )
            throw Error("OutScript/multisig: wrong pubkeys array");
          if ("ms" === e.type) {
            let t = e.pubkeys.length;
            for (let t of e.pubkeys)
              if (!f(t, s.Wy.ecdsa))
                throw Error("OutScript/multisig: wrong pubkey");
            if (e.m <= 0 || t > 16 || e.m > t)
              throw Error("OutScript/multisig: invalid params");
          }
          if ("tr_ns" === e.type || "tr_ms" === e.type) {
            for (let t of e.pubkeys)
              if (!f(t, s.Wy.schnorr))
                throw Error(`OutScript/${e.type}: wrong pubkey`);
          }
          if ("tr_ms" === e.type) {
            let t = e.pubkeys.length;
            if (e.m <= 0 || t > 999 || e.m > t)
              throw Error("OutScript/tr_ms: invalid params");
          }
          return e;
        });
      function d(e, t) {
        if (!s.ex(e.hash, l.sc(t)))
          throw Error("checkScript: wsh wrong witnessScript hash");
        let r = h.decode(t);
        if ("tr" === r.type || "tr_ns" === r.type || "tr_ms" === r.type)
          throw Error(`checkScript: P2${r.type} cannot be wrapped in P2SH`);
        if ("wpkh" === r.type || "sh" === r.type)
          throw Error(`checkScript: P2${r.type} cannot be wrapped in P2WSH`);
      }
      function p(e, t, r) {
        if (e) {
          let n = h.decode(e);
          if (
            "tr_ns" === n.type ||
            "tr_ms" === n.type ||
            "ms" === n.type ||
            "pk" == n.type
          )
            throw Error(`checkScript: non-wrapped ${n.type}`);
          if ("sh" === n.type && t) {
            if (!s.ex(n.hash, s.A0(t)))
              throw Error("checkScript: sh wrong redeemScript hash");
            let e = h.decode(t);
            if ("tr" === e.type || "tr_ns" === e.type || "tr_ms" === e.type)
              throw Error(`checkScript: P2${e.type} cannot be wrapped in P2SH`);
            if ("sh" === e.type)
              throw Error("checkScript: P2SH cannot be wrapped in P2SH");
          }
          "wsh" === n.type && r && d(n, r);
        }
        if (t) {
          let e = h.decode(t);
          "wsh" === e.type && r && d(e, r);
        }
      }
      let y = (e, t = s.pG) => {
          if (!f(e, s.Wy.ecdsa)) throw Error("P2PKH: invalid publicKey");
          let r = s.A0(e);
          return {
            type: "pkh",
            script: h.encode({ type: "pkh", hash: r }),
            address: S(t).encode({ type: "pkh", hash: r }),
            hash: r,
          };
        },
        g = (e, t = s.pG) => {
          if (!f(e, s.Wy.ecdsa)) throw Error("P2WPKH: invalid publicKey");
          if (65 === e.length) throw Error("P2WPKH: uncompressed public key");
          let r = s.A0(e);
          return {
            type: "wpkh",
            script: h.encode({ type: "wpkh", hash: r }),
            address: S(t).encode({ type: "wpkh", hash: r }),
            hash: r,
          };
        },
        b = 192,
        m = (e, t = b) => s.m("TapLeaf", new Uint8Array([t]), a.Rg.encode(e));
      function w(e, t, r = s.pG) {
        if ("tr" === e)
          return (function (e, t, r = s.pG, l = !1, u) {
            if (!e && !t)
              throw Error("p2tr: should have pubKey or scriptTree (or both)");
            let c = "string" == typeof e ? n.uh.decode(e) : e || s.ie;
            if (!f(c, s.Wy.schnorr)) throw Error("p2tr: non-schnorr pubkey");
            if (t) {
              let e = (function e(t, r = []) {
                  if (!t) throw Error("taprootAddPath: empty tree");
                  if ("leaf" === t.type) return { ...t, path: r };
                  if ("branch" !== t.type)
                    throw Error(`taprootAddPath: wrong type=${t}`);
                  return {
                    ...t,
                    path: r,
                    left: e(t.left, [t.right.hash, ...r]),
                    right: e(t.right, [t.left.hash, ...r]),
                  };
                })(
                  (function e(t, r, o = !1, l) {
                    if (!t) throw Error("taprootHashTree: empty tree");
                    if (
                      (Array.isArray(t) && 1 === t.length && (t = t[0]),
                      !Array.isArray(t))
                    ) {
                      let { leafVersion: e, script: f } = t;
                      if (
                        t.tapLeafScript ||
                        (t.tapMerkleRoot && !s.ex(t.tapMerkleRoot, i.wg))
                      )
                        throw Error(
                          "P2TR: tapRoot leafScript cannot have tree"
                        );
                      let u = "string" == typeof f ? n.uh.decode(f) : f;
                      if (!s.aY(u))
                        throw Error(`checkScript: wrong script type=${u}`);
                      return (
                        !(function (e, t, r = !1, n) {
                          let o = h.decode(e);
                          if ("unknown" === o.type) {
                            if (n) {
                              let t = i.Bb(a.eF, i.Lo.match(n)).decode(e);
                              if (void 0 !== t) {
                                if (
                                  "string" != typeof t.type ||
                                  !t.type.startsWith("tr_")
                                )
                                  throw Error(
                                    `P2TR: invalid custom type=${t.type}`
                                  );
                                return;
                              }
                            }
                            if (r) return;
                          }
                          if (!["tr_ns", "tr_ms"].includes(o.type))
                            throw Error(`P2TR: invalid leaf script=${o.type}`);
                          if (!r && o.pubkeys)
                            for (let e of o.pubkeys) {
                              if (s.ex(e, s.ie))
                                throw Error(
                                  "Unspendable taproot key in leaf script"
                                );
                              if (s.ex(e, t))
                                throw Error(
                                  "Using P2TR with leaf script with same key as internal key is not supported"
                                );
                            }
                        })(u, r, o, l),
                        { type: "leaf", version: e, script: u, hash: m(u, e) }
                      );
                    }
                    if (
                      (2 !== t.length &&
                        (t = (function (e) {
                          let t = Array.from(e);
                          for (; t.length >= 2; ) {
                            t.sort((e, t) => (t.weight || 1) - (e.weight || 1));
                            let e = t.pop(),
                              r = t.pop(),
                              n = (r?.weight || 1) + (e?.weight || 1);
                            t.push({
                              weight: n,
                              childs: [r?.childs || r, e?.childs || e],
                            });
                          }
                          let r = t[0];
                          return r?.childs || r;
                        })(t)),
                      2 !== t.length)
                    )
                      throw Error("hashTree: non binary tree!");
                    let f = e(t[0], r, o, l),
                      u = e(t[1], r, o, l),
                      [c, d] = [f.hash, u.hash];
                    return (
                      -1 === s.Xo(d, c) && ([c, d] = [d, c]),
                      {
                        type: "branch",
                        left: f,
                        right: u,
                        hash: s.m("TapBranch", c, d),
                      }
                    );
                  })(t, c, l, void 0)
                ),
                f = e.hash,
                [u, d] = s.gD(c, f),
                p = (function e(t) {
                  if (!t) throw Error("taprootAddPath: empty tree");
                  if ("leaf" === t.type) return [t];
                  if ("branch" !== t.type)
                    throw Error(`taprootWalkTree: wrong type=${t}`);
                  return [...e(t.left), ...e(t.right)];
                })(e).map((e) => ({
                  ...e,
                  controlBlock: o.u0.encode({
                    version: (e.version || b) + d,
                    internalKey: c,
                    merklePath: e.path,
                  }),
                }));
              return {
                type: "tr",
                script: h.encode({ type: "tr", pubkey: u }),
                address: S(r).encode({ type: "tr", pubkey: u }),
                tweakedPubkey: u,
                tapInternalKey: c,
                leaves: p,
                tapLeafScript: p.map((e) => [
                  o.u0.decode(e.controlBlock),
                  s.Id(e.script, new Uint8Array([e.version || b])),
                ]),
                tapMerkleRoot: f,
              };
            }
            {
              let e = s.gD(c, i.wg)[0];
              return {
                type: "tr",
                script: h.encode({ type: "tr", pubkey: e }),
                address: S(r).encode({ type: "tr", pubkey: e }),
                tweakedPubkey: e,
                tapInternalKey: c,
              };
            }
          })(s.vl(t), void 0, r).address;
        let l = s.E1(t);
        if ("pkh" === e) return y(l, r).address;
        if ("wpkh" === e) return g(l, r).address;
        throw Error(`getAddress: unknown type=${e}`);
      }
      let v = (0, n.rg)(l.sc);
      function x(e, t) {
        if (t.length < 2 || t.length > 40)
          throw Error("Witness: invalid length");
        if (e > 16) throw Error("Witness: invalid version");
        if (0 === e && 20 !== t.length && 32 !== t.length)
          throw Error("Witness: invalid length for version");
      }
      function E(e, t, r = s.pG) {
        x(e, t);
        let i = 0 === e ? n.I : n.p2;
        return i.encode(r.bech32, [e].concat(i.toWords(t)));
      }
      function _(e, t) {
        return v.encode(s.Id(Uint8Array.from(t), e));
      }
      function S(e = s.pG) {
        return {
          encode(t) {
            let { type: r } = t;
            if ("wpkh" === r || "wsh" === r) return E(0, t.hash, e);
            if ("tr" === r) return E(1, t.pubkey, e);
            if ("pkh" === r) return _(t.hash, [e.pubKeyHash]);
            if ("sh" === r) return _(t.hash, [e.scriptHash]);
            throw Error(`Unknown address type=${r}`);
          },
          decode(t) {
            if (t.length < 14 || t.length > 74)
              throw Error("Invalid address length");
            if (e.bech32 && t.toLowerCase().startsWith(`${e.bech32}1`)) {
              let r;
              try {
                if (((r = n.I.decode(t)), 0 !== r.words[0]))
                  throw Error(`bech32: wrong version=${r.words[0]}`);
              } catch (e) {
                if (0 === (r = n.p2.decode(t)).words[0])
                  throw Error(`bech32m: wrong version=${r.words[0]}`);
              }
              if (r.prefix !== e.bech32)
                throw Error(`wrong bech32 prefix=${r.prefix}`);
              let [i, ...o] = r.words,
                a = n.I.fromWords(o);
              if ((x(i, a), 0 === i && 32 === a.length))
                return { type: "wsh", hash: a };
              if (0 === i && 20 === a.length) return { type: "wpkh", hash: a };
              if (1 === i && 32 === a.length) return { type: "tr", pubkey: a };
              else throw Error("Unknown witness program");
            }
            let r = v.decode(t);
            if (21 !== r.length) throw Error("Invalid base58 address");
            if (r[0] === e.pubKeyHash) return { type: "pkh", hash: r.slice(1) };
            if (r[0] === e.scriptHash) return { type: "sh", hash: r.slice(1) };
            throw Error(`Invalid address prefix=${r[0]}`);
          },
        };
      }
    },
    74122: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.sha224 = t.sha256 = void 0);
      let n = r(83515),
        i = r(15906),
        o = new Uint32Array([
          0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
          0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
          0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
          0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f,
          0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d,
          0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967,
          0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354,
          0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,
          0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585,
          0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
          0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee,
          0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb,
          0xbef9a3f7, 0xc67178f2,
        ]),
        a = new Uint32Array([
          0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f,
          0x9b05688c, 0x1f83d9ab, 0x5be0cd19,
        ]),
        s = new Uint32Array(64);
      class l extends n.HashMD {
        constructor() {
          super(64, 32, 8, !1),
            (this.A = 0 | a[0]),
            (this.B = 0 | a[1]),
            (this.C = 0 | a[2]),
            (this.D = 0 | a[3]),
            (this.E = 0 | a[4]),
            (this.F = 0 | a[5]),
            (this.G = 0 | a[6]),
            (this.H = 0 | a[7]);
        }
        get() {
          let { A: e, B: t, C: r, D: n, E: i, F: o, G: a, H: s } = this;
          return [e, t, r, n, i, o, a, s];
        }
        set(e, t, r, n, i, o, a, s) {
          (this.A = 0 | e),
            (this.B = 0 | t),
            (this.C = 0 | r),
            (this.D = 0 | n),
            (this.E = 0 | i),
            (this.F = 0 | o),
            (this.G = 0 | a),
            (this.H = 0 | s);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) s[r] = e.getUint32(t, !1);
          for (let e = 16; e < 64; e++) {
            let t = s[e - 15],
              r = s[e - 2],
              n = (0, i.rotr)(t, 7) ^ (0, i.rotr)(t, 18) ^ (t >>> 3),
              o = (0, i.rotr)(r, 17) ^ (0, i.rotr)(r, 19) ^ (r >>> 10);
            s[e] = (o + s[e - 7] + n + s[e - 16]) | 0;
          }
          let { A: r, B: a, C: l, D: f, E: u, F: c, G: h, H: d } = this;
          for (let e = 0; e < 64; e++) {
            let t =
                (d +
                  ((0, i.rotr)(u, 6) ^
                    (0, i.rotr)(u, 11) ^
                    (0, i.rotr)(u, 25)) +
                  (0, n.Chi)(u, c, h) +
                  o[e] +
                  s[e]) |
                0,
              p =
                (((0, i.rotr)(r, 2) ^ (0, i.rotr)(r, 13) ^ (0, i.rotr)(r, 22)) +
                  (0, n.Maj)(r, a, l)) |
                0;
            (d = h),
              (h = c),
              (c = u),
              (u = (f + t) | 0),
              (f = l),
              (l = a),
              (a = r),
              (r = (t + p) | 0);
          }
          (r = (r + this.A) | 0),
            (a = (a + this.B) | 0),
            (l = (l + this.C) | 0),
            (f = (f + this.D) | 0),
            (u = (u + this.E) | 0),
            (c = (c + this.F) | 0),
            (h = (h + this.G) | 0),
            (d = (d + this.H) | 0),
            this.set(r, a, l, f, u, c, h, d);
        }
        roundClean() {
          s.fill(0);
        }
        destroy() {
          this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
        }
      }
      class f extends l {
        constructor() {
          super(),
            (this.A = -0x3efa6128),
            (this.B = 0x367cd507),
            (this.C = 0x3070dd17),
            (this.D = -0x8f1a6c7),
            (this.E = -4191439),
            (this.F = 0x68581511),
            (this.G = 0x64f98fa7),
            (this.H = -0x4105b05c),
            (this.outputLen = 28);
        }
      }
      (t.sha256 = (0, i.wrapConstructor)(() => new l())),
        (t.sha224 = (0, i.wrapConstructor)(() => new f()));
    },
    75055: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.encodeToCurve = t.hashToCurve = t.schnorr = t.secp256k1 = void 0);
      let n = r(74122),
        i = r(15906),
        o = r(89395),
        a = r(11512),
        s = r(24738),
        l = r(57953),
        f = r(64976),
        u = BigInt(
          "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
        ),
        c = BigInt(
          "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
        ),
        h = BigInt(1),
        d = BigInt(2),
        p = (e, t) => (e + t / d) / t;
      function y(e) {
        let t = BigInt(3),
          r = BigInt(6),
          n = BigInt(11),
          i = BigInt(22),
          o = BigInt(23),
          a = BigInt(44),
          l = BigInt(88),
          f = (e * e * e) % u,
          c = (f * f * e) % u,
          h = ((0, s.pow2)(c, t, u) * c) % u,
          p = ((0, s.pow2)(h, t, u) * c) % u,
          y = ((0, s.pow2)(p, d, u) * f) % u,
          b = ((0, s.pow2)(y, n, u) * y) % u,
          m = ((0, s.pow2)(b, i, u) * b) % u,
          w = ((0, s.pow2)(m, a, u) * m) % u,
          v = ((0, s.pow2)(w, l, u) * w) % u,
          x = ((0, s.pow2)(v, a, u) * m) % u,
          E = ((0, s.pow2)(x, t, u) * c) % u,
          _ = ((0, s.pow2)(E, o, u) * b) % u,
          S = ((0, s.pow2)(_, r, u) * f) % u,
          A = (0, s.pow2)(S, d, u);
        if (!g.eql(g.sqr(A), e)) throw Error("Cannot find square root");
        return A;
      }
      let g = (0, s.Field)(u, void 0, void 0, { sqrt: y });
      t.secp256k1 = (0, o.createCurve)(
        {
          a: BigInt(0),
          b: BigInt(7),
          Fp: g,
          n: c,
          Gx: BigInt(
            "55066263022277343669578718895168534326250603453777594175500187360389116729240"
          ),
          Gy: BigInt(
            "32670510020758816978083085130507043184471273380659243275938904335757337482424"
          ),
          h: BigInt(1),
          lowS: !0,
          endo: {
            beta: BigInt(
              "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
            ),
            splitScalar: (e) => {
              let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                r = -h * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                n = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                i = BigInt("0x100000000000000000000000000000000"),
                o = p(t * e, c),
                a = p(-r * e, c),
                l = (0, s.mod)(e - o * t - a * n, c),
                f = (0, s.mod)(-o * r - a * t, c),
                u = l > i,
                d = f > i;
              if ((u && (l = c - l), d && (f = c - f), l > i || f > i))
                throw Error("splitScalar: Endomorphism failed, k=" + e);
              return { k1neg: u, k1: l, k2neg: d, k2: f };
            },
          },
        },
        n.sha256
      );
      let b = BigInt(0),
        m = (e) => "bigint" == typeof e && b < e && e < u,
        w = (e) => "bigint" == typeof e && b < e && e < c,
        v = {};
      function x(e, ...t) {
        let r = v[e];
        if (void 0 === r) {
          let t = (0, n.sha256)(Uint8Array.from(e, (e) => e.charCodeAt(0)));
          (r = (0, l.concatBytes)(t, t)), (v[e] = r);
        }
        return (0, n.sha256)((0, l.concatBytes)(r, ...t));
      }
      let E = (e) => e.toRawBytes(!0).slice(1),
        _ = (e) => (0, l.numberToBytesBE)(e, 32),
        S = (e) => (0, s.mod)(e, u),
        A = (e) => (0, s.mod)(e, c),
        B = t.secp256k1.ProjectivePoint,
        k = (e, t, r) => B.BASE.multiplyAndAddUnsafe(e, t, r);
      function O(e) {
        let r = t.secp256k1.utils.normPrivateKeyToScalar(e),
          n = B.fromPrivateKey(r);
        return { scalar: n.hasEvenY() ? r : A(-r), bytes: E(n) };
      }
      function T(e) {
        if (!m(e)) throw Error("bad x: need 0 < x < p");
        let t = S(e * e),
          r = y(S(t * e + BigInt(7)));
        r % d !== b && (r = S(-r));
        let n = new B(e, r, h);
        return n.assertValidity(), n;
      }
      function I(...e) {
        return A((0, l.bytesToNumberBE)(x("BIP0340/challenge", ...e)));
      }
      function R(e, t, r) {
        let n = (0, l.ensureBytes)("signature", e, 64),
          i = (0, l.ensureBytes)("message", t),
          o = (0, l.ensureBytes)("publicKey", r, 32);
        try {
          let e = T((0, l.bytesToNumberBE)(o)),
            t = (0, l.bytesToNumberBE)(n.subarray(0, 32));
          if (!m(t)) return !1;
          let r = (0, l.bytesToNumberBE)(n.subarray(32, 64));
          if (!w(r)) return !1;
          let a = I(_(t), E(e), i),
            s = k(e, r, A(-a));
          if (!s || !s.hasEvenY() || s.toAffine().x !== t) return !1;
          return !0;
        } catch (e) {
          return !1;
        }
      }
      t.schnorr = {
        getPublicKey: function (e) {
          return O(e).bytes;
        },
        sign: function (e, t, r = (0, i.randomBytes)(32)) {
          let n = (0, l.ensureBytes)("message", e),
            { bytes: o, scalar: a } = O(t),
            s = (0, l.ensureBytes)("auxRand", r, 32),
            f = _(a ^ (0, l.bytesToNumberBE)(x("BIP0340/aux", s))),
            u = x("BIP0340/nonce", f, o, n),
            c = A((0, l.bytesToNumberBE)(u));
          if (c === b) throw Error("sign failed: k is zero");
          let { bytes: h, scalar: d } = O(c),
            p = I(h, o, n),
            y = new Uint8Array(64);
          if ((y.set(h, 0), y.set(_(A(d + p * a)), 32), !R(y, n, o)))
            throw Error("sign: Invalid signature produced");
          return y;
        },
        verify: R,
        utils: {
          randomPrivateKey: t.secp256k1.utils.randomPrivateKey,
          lift_x: T,
          pointToBytes: E,
          numberToBytesBE: l.numberToBytesBE,
          bytesToNumberBE: l.bytesToNumberBE,
          taggedHash: x,
          mod: s.mod,
        },
      };
      let M = (0, a.isogenyMap)(
          g,
          [
            [
              "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7",
              "0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581",
              "0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262",
              "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c",
            ],
            [
              "0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b",
              "0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14",
              "0x0000000000000000000000000000000000000000000000000000000000000001",
            ],
            [
              "0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c",
              "0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3",
              "0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931",
              "0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84",
            ],
            [
              "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b",
              "0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573",
              "0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f",
              "0x0000000000000000000000000000000000000000000000000000000000000001",
            ],
          ].map((e) => e.map((e) => BigInt(e)))
        ),
        P = (0, f.mapToCurveSimpleSWU)(g, {
          A: BigInt(
            "0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"
          ),
          B: BigInt("1771"),
          Z: g.create(BigInt("-11")),
        }),
        C = (0, a.createHasher)(
          t.secp256k1.ProjectivePoint,
          (e) => {
            let { x: t, y: r } = P(g.create(e[0]));
            return M(t, r);
          },
          {
            DST: "secp256k1_XMD:SHA-256_SSWU_RO_",
            encodeDST: "secp256k1_XMD:SHA-256_SSWU_NU_",
            p: g.ORDER,
            m: 1,
            k: 128,
            expand: "xmd",
            hash: n.sha256,
          }
        );
      (t.hashToCurve = C.hashToCurve), (t.encodeToCurve = C.encodeToCurve);
    },
    75901: (e, t, r) => {
      "use strict";
      r.d(t, { s9: () => l });
      var n = r(5003),
        i = r(66551);
      let o = (0, r(57551).D0)(
          BigInt(
            "0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff"
          )
        ),
        a = o.create(BigInt("-3")),
        s = BigInt(
          "0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b"
        ),
        l = (0, i.s)(
          {
            a: a,
            b: s,
            Fp: o,
            n: BigInt(
              "0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"
            ),
            Gx: BigInt(
              "0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"
            ),
            Gy: BigInt(
              "0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"
            ),
            h: BigInt(1),
            lowS: !1,
          },
          n.sc
        );
    },
    76022: (e, t, r) => {
      "use strict";
      r.d(t, { R: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 10,
        name: "OP Mainnet",
        nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://mainnet.optimism.io"] } },
        blockExplorers: {
          default: {
            name: "Optimism Explorer",
            url: "https://optimistic.etherscan.io",
            apiUrl: "https://api-optimistic.etherscan.io/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          disputeGameFactory: {
            1: { address: "0xe5965Ab5962eDc7477C8520243A95517CD252fA9" },
          },
          l2OutputOracle: {
            1: { address: "0xdfe97868233d1aa22e815a266982f2cf17685a27" },
          },
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 4286263,
          },
          portal: {
            1: { address: "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed" },
          },
          l1StandardBridge: {
            1: { address: "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1" },
          },
        },
        sourceId: 1,
      });
    },
    76373: (e, t, r) => {
      "use strict";
      r.d(t, { u: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 480,
        name: "World Chain",
        network: "worldchain",
        nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: {
          default: {
            http: ["https://worldchain-mainnet.g.alchemy.com/public"],
          },
        },
        blockExplorers: {
          default: {
            name: "Worldscan",
            url: "https://worldscan.org",
            apiUrl: "https://api.worldscan.org/api",
          },
          blockscout: {
            name: "Blockscout",
            url: "https://worldchain-mainnet.explorer.alchemy.com",
            apiUrl: "https://worldchain-mainnet.explorer.alchemy.com/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 0,
          },
          disputeGameFactory: {
            1: { address: "0x069c4c579671f8c120b1327a73217D01Ea2EC5ea" },
          },
          l2OutputOracle: {
            1: { address: "0x19A6d1E9034596196295CF148509796978343c5D" },
          },
          portal: {
            1: { address: "0xd5ec14a83B7d95BE1E2Ac12523e2dEE12Cbeea6C" },
          },
          l1StandardBridge: {
            1: { address: "0x470458C91978D2d929704489Ad730DC3E3001113" },
          },
        },
        testnet: !1,
        sourceId: 1,
      });
    },
    79376: function (e, t, r) {
      "use strict";
      var n = r(51642).Buffer,
        i =
          (this && this.__createBinding) ||
          (Object.create
            ? function (e, t, r, n) {
                void 0 === n && (n = r);
                var i = Object.getOwnPropertyDescriptor(t, r);
                (!i ||
                  ("get" in i
                    ? !t.__esModule
                    : i.writable || i.configurable)) &&
                  (i = {
                    enumerable: !0,
                    get: function () {
                      return t[r];
                    },
                  }),
                  Object.defineProperty(e, n, i);
              }
            : function (e, t, r, n) {
                void 0 === n && (n = r), (e[n] = t[r]);
              }),
        o =
          (this && this.__setModuleDefault) ||
          (Object.create
            ? function (e, t) {
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  value: t,
                });
              }
            : function (e, t) {
                e.default = t;
              }),
        a =
          (this && this.__importStar) ||
          function (e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var r in e)
                "default" !== r &&
                  Object.prototype.hasOwnProperty.call(e, r) &&
                  i(t, e, r);
            return o(t, e), t;
          };
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getEncryptionPublicKey =
          t.decryptSafely =
          t.decrypt =
          t.encryptSafely =
          t.encrypt =
            void 0);
      let s = a(r(88934)),
        l = a(r(27835)),
        f = r(91262);
      function u({ publicKey: e, data: t, version: r }) {
        if ((0, f.isNullish)(e)) throw Error("Missing publicKey parameter");
        if ((0, f.isNullish)(t)) throw Error("Missing data parameter");
        if ((0, f.isNullish)(r)) throw Error("Missing version parameter");
        if ("x25519-xsalsa20-poly1305" === r) {
          let r;
          if ("string" != typeof t)
            throw Error("Message data must be given as a string");
          let n = s.box.keyPair();
          try {
            r = l.decodeBase64(e);
          } catch (e) {
            throw Error("Bad public key");
          }
          let i = l.decodeUTF8(t),
            o = s.randomBytes(s.box.nonceLength),
            a = s.box(i, o, r, n.secretKey);
          return {
            version: "x25519-xsalsa20-poly1305",
            nonce: l.encodeBase64(o),
            ephemPublicKey: l.encodeBase64(n.publicKey),
            ciphertext: l.encodeBase64(a),
          };
        }
        throw Error("Encryption type/version not supported");
      }
      function c({ encryptedData: e, privateKey: t }) {
        if ((0, f.isNullish)(e)) throw Error("Missing encryptedData parameter");
        if ((0, f.isNullish)(t)) throw Error("Missing privateKey parameter");
        if ("x25519-xsalsa20-poly1305" === e.version) {
          let r = h(t),
            n = s.box.keyPair.fromSecretKey(r).secretKey,
            i = l.decodeBase64(e.nonce),
            o = l.decodeBase64(e.ciphertext),
            a = l.decodeBase64(e.ephemPublicKey),
            f = s.box.open(o, i, a, n);
          try {
            if (!f) throw Error();
            let e = l.encodeUTF8(f);
            if (!e) throw Error();
            return e;
          } catch (e) {
            if (e && "string" == typeof e.message && e.message.length)
              throw Error(`Decryption failed: ${e.message}`);
            throw Error("Decryption failed.");
          }
        }
        throw Error("Encryption type/version not supported.");
      }
      function h(e) {
        let t = n.from(e, "hex").toString("base64");
        return l.decodeBase64(t);
      }
      (t.encrypt = u),
        (t.encryptSafely = function ({ publicKey: e, data: t, version: r }) {
          if ((0, f.isNullish)(e)) throw Error("Missing publicKey parameter");
          if ((0, f.isNullish)(t)) throw Error("Missing data parameter");
          if ((0, f.isNullish)(r)) throw Error("Missing version parameter");
          if ("object" == typeof t && t && "toJSON" in t)
            throw Error(
              "Cannot encrypt with toJSON property.  Please remove toJSON property"
            );
          let i = { data: t, padding: "" },
            o = n.byteLength(JSON.stringify(i), "utf-8") % 2048,
            a = 0;
          return (
            o > 0 && (a = 2048 - o - 16),
            (i.padding = "0".repeat(a)),
            u({ publicKey: e, data: JSON.stringify(i), version: r })
          );
        }),
        (t.decrypt = c),
        (t.decryptSafely = function ({ encryptedData: e, privateKey: t }) {
          if ((0, f.isNullish)(e))
            throw Error("Missing encryptedData parameter");
          if ((0, f.isNullish)(t)) throw Error("Missing privateKey parameter");
          return JSON.parse(c({ encryptedData: e, privateKey: t })).data;
        }),
        (t.getEncryptionPublicKey = function (e) {
          let t = h(e),
            r = s.box.keyPair.fromSecretKey(t).publicKey;
          return l.encodeBase64(r);
        });
    },
    81713: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.accountBodyToRLP =
          t.accountBodyToSlim =
          t.accountBodyFromSlim =
          t.isZeroAddress =
          t.zeroAddress =
          t.importPublic =
          t.privateToAddress =
          t.privateToPublic =
          t.publicToAddress =
          t.pubToAddress =
          t.isValidPublic =
          t.isValidPrivate =
          t.generateAddress2 =
          t.generateAddress =
          t.isValidChecksumAddress =
          t.toChecksumAddress =
          t.isValidAddress =
          t.Account =
            void 0);
      let i = r(62504),
        o = r(30150),
        a = r(88680),
        s = r(39069),
        l = r(50797),
        f = r(93263),
        u = r(54403),
        c = r(61363),
        h = BigInt(0);
      class d {
        constructor(e = h, t = h, r = f.KECCAK256_RLP, n = f.KECCAK256_NULL) {
          (this.nonce = e),
            (this.balance = t),
            (this.storageRoot = r),
            (this.codeHash = n),
            this._validate();
        }
        static fromAccountData(e) {
          let { nonce: t, balance: r, storageRoot: n, codeHash: i } = e;
          return new d(
            void 0 !== t ? (0, l.bufferToBigInt)((0, l.toBuffer)(t)) : void 0,
            void 0 !== r ? (0, l.bufferToBigInt)((0, l.toBuffer)(r)) : void 0,
            void 0 !== n ? (0, l.toBuffer)(n) : void 0,
            void 0 !== i ? (0, l.toBuffer)(i) : void 0
          );
        }
        static fromRlpSerializedAccount(e) {
          let t = (0, l.arrToBufArr)(i.RLP.decode(Uint8Array.from(e)));
          if (!Array.isArray(t))
            throw Error("Invalid serialized account input. Must be array");
          return this.fromValuesArray(t);
        }
        static fromValuesArray(e) {
          let [t, r, n, i] = e;
          return new d(
            (0, l.bufferToBigInt)(t),
            (0, l.bufferToBigInt)(r),
            n,
            i
          );
        }
        _validate() {
          if (this.nonce < h) throw Error("nonce must be greater than zero");
          if (this.balance < h)
            throw Error("balance must be greater than zero");
          if (32 !== this.storageRoot.length)
            throw Error("storageRoot must have a length of 32");
          if (32 !== this.codeHash.length)
            throw Error("codeHash must have a length of 32");
        }
        raw() {
          return [
            (0, l.bigIntToUnpaddedBuffer)(this.nonce),
            (0, l.bigIntToUnpaddedBuffer)(this.balance),
            this.storageRoot,
            this.codeHash,
          ];
        }
        serialize() {
          return n.from(i.RLP.encode((0, l.bufArrToArr)(this.raw())));
        }
        isContract() {
          return !this.codeHash.equals(f.KECCAK256_NULL);
        }
        isEmpty() {
          return (
            this.balance === h &&
            this.nonce === h &&
            this.codeHash.equals(f.KECCAK256_NULL)
          );
        }
      }
      function p(e) {
        let [t, r, n, i] = e;
        return [
          t,
          r,
          0 === (0, l.arrToBufArr)(n).length ? f.KECCAK256_RLP : n,
          0 === (0, l.arrToBufArr)(i).length ? f.KECCAK256_NULL : i,
        ];
      }
      (t.Account = d),
        (t.isValidAddress = function (e) {
          try {
            (0, u.assertIsString)(e);
          } catch (e) {
            return !1;
          }
          return /^0x[0-9a-fA-F]{40}$/.test(e);
        }),
        (t.toChecksumAddress = function (e, t) {
          (0, u.assertIsHexString)(e);
          let r = (0, c.stripHexPrefix)(e).toLowerCase(),
            i = "";
          void 0 !== t &&
            (i = (0, l.bufferToBigInt)((0, l.toBuffer)(t)).toString() + "0x");
          let a = n.from(i + r, "utf8"),
            f = (0, s.bytesToHex)((0, o.keccak256)(a)),
            h = "0x";
          for (let e = 0; e < r.length; e++)
            parseInt(f[e], 16) >= 8 ? (h += r[e].toUpperCase()) : (h += r[e]);
          return h;
        }),
        (t.isValidChecksumAddress = function (e, r) {
          return (
            (0, t.isValidAddress)(e) && (0, t.toChecksumAddress)(e, r) === e
          );
        }),
        (t.generateAddress = function (e, t) {
          return ((0, u.assertIsBuffer)(e),
          (0, u.assertIsBuffer)(t),
          (0, l.bufferToBigInt)(t) === BigInt(0))
            ? n
                .from(
                  (0, o.keccak256)(i.RLP.encode((0, l.bufArrToArr)([e, null])))
                )
                .slice(-20)
            : n
                .from(
                  (0, o.keccak256)(i.RLP.encode((0, l.bufArrToArr)([e, t])))
                )
                .slice(-20);
        }),
        (t.generateAddress2 = function (e, t, r) {
          if (
            ((0, u.assertIsBuffer)(e),
            (0, u.assertIsBuffer)(t),
            (0, u.assertIsBuffer)(r),
            20 !== e.length)
          )
            throw Error("Expected from to be of length 20");
          if (32 !== t.length) throw Error("Expected salt to be of length 32");
          let i = (0, o.keccak256)(
            n.concat([n.from("ff", "hex"), e, t, (0, o.keccak256)(r)])
          );
          return (0, l.toBuffer)(i).slice(-20);
        }),
        (t.isValidPrivate = function (e) {
          return a.secp256k1.utils.isValidPrivateKey(e);
        }),
        (t.isValidPublic = function (e, t = !1) {
          if (((0, u.assertIsBuffer)(e), 64 === e.length))
            try {
              return (
                a.secp256k1.ProjectivePoint.fromHex(n.concat([n.from([4]), e])),
                !0
              );
            } catch (e) {
              return !1;
            }
          if (!t) return !1;
          try {
            return a.secp256k1.ProjectivePoint.fromHex(e), !0;
          } catch (e) {
            return !1;
          }
        }),
        (t.pubToAddress = function (e, t = !1) {
          if (
            ((0, u.assertIsBuffer)(e),
            t &&
              64 !== e.length &&
              (e = n.from(
                a.secp256k1.ProjectivePoint.fromHex(e).toRawBytes(!1).slice(1)
              )),
            64 !== e.length)
          )
            throw Error("Expected pubKey to be of length 64");
          return n.from((0, o.keccak256)(e)).slice(-20);
        }),
        (t.publicToAddress = t.pubToAddress),
        (t.privateToPublic = function (e) {
          return (
            (0, u.assertIsBuffer)(e),
            n.from(
              a.secp256k1.ProjectivePoint.fromPrivateKey(e)
                .toRawBytes(!1)
                .slice(1)
            )
          );
        }),
        (t.privateToAddress = function (e) {
          return (0, t.publicToAddress)((0, t.privateToPublic)(e));
        }),
        (t.importPublic = function (e) {
          return (
            (0, u.assertIsBuffer)(e),
            64 !== e.length &&
              (e = n.from(
                a.secp256k1.ProjectivePoint.fromHex(e).toRawBytes(!1).slice(1)
              )),
            e
          );
        }),
        (t.zeroAddress = function () {
          let e = (0, l.zeros)(20);
          return (0, l.bufferToHex)(e);
        }),
        (t.isZeroAddress = function (e) {
          try {
            (0, u.assertIsString)(e);
          } catch (e) {
            return !1;
          }
          return (0, t.zeroAddress)() === e;
        }),
        (t.accountBodyFromSlim = p);
      let y = new Uint8Array(0);
      (t.accountBodyToSlim = function (e) {
        let [t, r, n, i] = e;
        return [
          t,
          r,
          (0, l.arrToBufArr)(n).equals(f.KECCAK256_RLP) ? y : n,
          (0, l.arrToBufArr)(i).equals(f.KECCAK256_NULL) ? y : i,
        ];
      }),
        (t.accountBodyToRLP = function (e, t = !0) {
          let r = t ? p(e) : e;
          return (0, l.arrToBufArr)(i.RLP.encode(r));
        });
    },
    81844: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.hashPersonalMessage =
          t.isValidSignature =
          t.fromRpcSig =
          t.toCompactSig =
          t.toRpcSig =
          t.ecrecover =
          t.ecsign =
            void 0);
      let i = r(30150),
        o = r(88680),
        a = r(50797),
        s = r(93263),
        l = r(54403);
      function f(e, t) {
        return e === BigInt(0) || e === BigInt(1)
          ? e
          : void 0 === t
          ? e - BigInt(27)
          : e - (t * BigInt(2) + BigInt(35));
      }
      function u(e) {
        return e === BigInt(0) || e === BigInt(1);
      }
      (t.ecsign = function (e, t, r) {
        let i = o.secp256k1.sign(e, t),
          a = i.toCompactRawBytes(),
          s = n.from(a.slice(0, 32));
        return {
          r: s,
          s: n.from(a.slice(32, 64)),
          v:
            void 0 === r
              ? BigInt(i.recovery + 27)
              : BigInt(i.recovery + 35) + BigInt(r) * BigInt(2),
        };
      }),
        (t.ecrecover = function (e, t, r, i, s) {
          let l = n.concat(
              [(0, a.setLengthLeft)(r, 32), (0, a.setLengthLeft)(i, 32)],
              64
            ),
            c = f(t, s);
          if (!u(c)) throw Error("Invalid signature v value");
          let h = o.secp256k1.Signature.fromCompact(l)
            .addRecoveryBit(Number(c))
            .recoverPublicKey(e);
          return n.from(h.toRawBytes(!1).slice(1));
        }),
        (t.toRpcSig = function (e, t, r, i) {
          if (!u(f(e, i))) throw Error("Invalid signature v value");
          return (0, a.bufferToHex)(
            n.concat([
              (0, a.setLengthLeft)(t, 32),
              (0, a.setLengthLeft)(r, 32),
              (0, a.toBuffer)(e),
            ])
          );
        }),
        (t.toCompactSig = function (e, t, r, i) {
          if (!u(f(e, i))) throw Error("Invalid signature v value");
          let o = r;
          return (
            ((e > BigInt(28) && e % BigInt(2) === BigInt(1)) ||
              e === BigInt(1) ||
              e === BigInt(28)) &&
              ((o = n.from(r)), (o[0] |= 128)),
            (0, a.bufferToHex)(
              n.concat([
                (0, a.setLengthLeft)(t, 32),
                (0, a.setLengthLeft)(o, 32),
              ])
            )
          );
        }),
        (t.fromRpcSig = function (e) {
          let t, r, n;
          let i = (0, a.toBuffer)(e);
          if (i.length >= 65)
            (t = i.slice(0, 32)),
              (r = i.slice(32, 64)),
              (n = (0, a.bufferToBigInt)(i.slice(64)));
          else if (64 === i.length)
            (t = i.slice(0, 32)),
              (r = i.slice(32, 64)),
              (n = BigInt((0, a.bufferToInt)(i.slice(32, 33)) >> 7)),
              (r[0] &= 127);
          else throw Error("Invalid signature length");
          return n < 27 && (n += BigInt(27)), { v: n, r: t, s: r };
        }),
        (t.isValidSignature = function (e, t, r, n = !0, i) {
          if (32 !== t.length || 32 !== r.length || !u(f(e, i))) return !1;
          let o = (0, a.bufferToBigInt)(t),
            l = (0, a.bufferToBigInt)(r);
          return (
            o !== BigInt(0) &&
            !(o >= s.SECP256K1_ORDER) &&
            l !== BigInt(0) &&
            !(l >= s.SECP256K1_ORDER) &&
            (!n || !(l >= s.SECP256K1_ORDER_DIV_2))
          );
        }),
        (t.hashPersonalMessage = function (e) {
          (0, l.assertIsBuffer)(e);
          let t = n.from(
            `\u0019Ethereum Signed Message:
${e.length}`,
            "utf-8"
          );
          return n.from((0, i.keccak256)(n.concat([t, e])));
        });
    },
    83059: (e, t, r) => {
      "use strict";
      var n;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.toType = t.TypeOutput = void 0);
      let i = r(50797),
        o = r(61363);
      !(function (e) {
        (e[(e.Number = 0)] = "Number"),
          (e[(e.BigInt = 1)] = "BigInt"),
          (e[(e.Buffer = 2)] = "Buffer"),
          (e[(e.PrefixedHexString = 3)] = "PrefixedHexString");
      })((n = t.TypeOutput || (t.TypeOutput = {}))),
        (t.toType = function (e, t) {
          if (null === e) return null;
          if (void 0 === e) return;
          if ("string" != typeof e || (0, o.isHexString)(e)) {
            if ("number" == typeof e && !Number.isSafeInteger(e))
              throw Error(
                "The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)"
              );
          } else
            throw Error(
              `A string must be provided with a 0x-prefix, given: ${e}`
            );
          let r = (0, i.toBuffer)(e);
          switch (t) {
            case n.Buffer:
              return r;
            case n.BigInt:
              return (0, i.bufferToBigInt)(r);
            case n.Number: {
              let e = (0, i.bufferToBigInt)(r);
              if (e > BigInt(Number.MAX_SAFE_INTEGER))
                throw Error(
                  "The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)"
                );
              return Number(e);
            }
            case n.PrefixedHexString:
              return (0, i.bufferToHex)(r);
            default:
              throw Error("unknown outputType");
          }
        });
    },
    83515: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.HashMD = t.Maj = t.Chi = void 0);
      let n = r(34116),
        i = r(15906);
      (t.Chi = (e, t, r) => (e & t) ^ (~e & r)),
        (t.Maj = (e, t, r) => (e & t) ^ (e & r) ^ (t & r));
      class o extends i.Hash {
        constructor(e, t, r, n) {
          super(),
            (this.blockLen = e),
            (this.outputLen = t),
            (this.padOffset = r),
            (this.isLE = n),
            (this.finished = !1),
            (this.length = 0),
            (this.pos = 0),
            (this.destroyed = !1),
            (this.buffer = new Uint8Array(e)),
            (this.view = (0, i.createView)(this.buffer));
        }
        update(e) {
          (0, n.exists)(this);
          let { view: t, buffer: r, blockLen: o } = this,
            a = (e = (0, i.toBytes)(e)).length;
          for (let n = 0; n < a; ) {
            let s = Math.min(o - this.pos, a - n);
            if (s === o) {
              let t = (0, i.createView)(e);
              for (; o <= a - n; n += o) this.process(t, n);
              continue;
            }
            r.set(e.subarray(n, n + s), this.pos),
              (this.pos += s),
              (n += s),
              this.pos === o && (this.process(t, 0), (this.pos = 0));
          }
          return (this.length += e.length), this.roundClean(), this;
        }
        digestInto(e) {
          (0, n.exists)(this), (0, n.output)(e, this), (this.finished = !0);
          let { buffer: t, view: r, blockLen: o, isLE: a } = this,
            { pos: s } = this;
          (t[s++] = 128),
            this.buffer.subarray(s).fill(0),
            this.padOffset > o - s && (this.process(r, 0), (s = 0));
          for (let e = s; e < o; e++) t[e] = 0;
          !(function (e, t, r, n) {
            if ("function" == typeof e.setBigUint64)
              return e.setBigUint64(t, r, n);
            let i = BigInt(32),
              o = BigInt(0xffffffff),
              a = Number((r >> i) & o),
              s = Number(r & o),
              l = 4 * !!n,
              f = 4 * !n;
            e.setUint32(t + l, a, n), e.setUint32(t + f, s, n);
          })(r, o - 8, BigInt(8 * this.length), a),
            this.process(r, 0);
          let l = (0, i.createView)(e),
            f = this.outputLen;
          if (f % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
          let u = f / 4,
            c = this.get();
          if (u > c.length) throw Error("_sha2: outputLen bigger than state");
          for (let e = 0; e < u; e++) l.setUint32(4 * e, c[e], a);
        }
        digest() {
          let { buffer: e, outputLen: t } = this;
          this.digestInto(e);
          let r = e.slice(0, t);
          return this.destroy(), r;
        }
        _cloneInto(e) {
          e || (e = new this.constructor()), e.set(...this.get());
          let {
            blockLen: t,
            buffer: r,
            length: n,
            finished: i,
            destroyed: o,
            pos: a,
          } = this;
          return (
            (e.length = n),
            (e.pos = a),
            (e.finished = i),
            (e.destroyed = o),
            n % t && e.buffer.set(r),
            e
          );
        }
      }
      t.HashMD = o;
    },
    84080: (e, t, r) => {
      "use strict";
      r.d(t, {
        Vw: () => E,
        DO: () => a,
        CC: () => l,
        sd: () => s,
        Fe: () => o,
        Ht: () => f,
        My: () => g,
        uH: () => u,
        Id: () => x,
        qj: () => _,
        O8: () => c,
        aT: () => w,
        aY: () => i,
        po: () => S,
        aZ: () => d,
        Ow: () => h,
        ZJ: () => v,
      });
      let n =
        "object" == typeof globalThis && "crypto" in globalThis
          ? globalThis.crypto
          : void 0;
      function i(e) {
        return (
          e instanceof Uint8Array ||
          (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
        );
      }
      function o(e) {
        if (!Number.isSafeInteger(e) || e < 0)
          throw Error("positive integer expected, got " + e);
      }
      function a(e, ...t) {
        if (!i(e)) throw Error("Uint8Array expected");
        if (t.length > 0 && !t.includes(e.length))
          throw Error(
            "Uint8Array expected of length " + t + ", got length=" + e.length
          );
      }
      function s(e) {
        if ("function" != typeof e || "function" != typeof e.create)
          throw Error("Hash should be wrapped by utils.createHasher");
        o(e.outputLen), o(e.blockLen);
      }
      function l(e, t = !0) {
        if (e.destroyed) throw Error("Hash instance has been destroyed");
        if (t && e.finished)
          throw Error("Hash#digest() has already been called");
      }
      function f(e, t) {
        a(e);
        let r = t.outputLen;
        if (e.length < r)
          throw Error(
            "digestInto() expects output buffer of length at least " + r
          );
      }
      function u(...e) {
        for (let t = 0; t < e.length; t++) e[t].fill(0);
      }
      function c(e) {
        return new DataView(e.buffer, e.byteOffset, e.byteLength);
      }
      function h(e, t) {
        return (e << (32 - t)) | (e >>> t);
      }
      function d(e, t) {
        return (e << t) | ((e >>> (32 - t)) >>> 0);
      }
      let p =
          "function" == typeof Uint8Array.from([]).toHex &&
          "function" == typeof Uint8Array.fromHex,
        y = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
      function g(e) {
        if ((a(e), p)) return e.toHex();
        let t = "";
        for (let r = 0; r < e.length; r++) t += y[e[r]];
        return t;
      }
      let b = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
      function m(e) {
        return e >= b._0 && e <= b._9
          ? e - b._0
          : e >= b.A && e <= b.F
          ? e - (b.A - 10)
          : e >= b.a && e <= b.f
          ? e - (b.a - 10)
          : void 0;
      }
      function w(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        if (p) return Uint8Array.fromHex(e);
        let t = e.length,
          r = t / 2;
        if (t % 2)
          throw Error("hex string expected, got unpadded hex of length " + t);
        let n = new Uint8Array(r);
        for (let t = 0, i = 0; t < r; t++, i += 2) {
          let r = m(e.charCodeAt(i)),
            o = m(e.charCodeAt(i + 1));
          if (void 0 === r || void 0 === o)
            throw Error(
              'hex string expected, got non-hex character "' +
                (e[i] + e[i + 1]) +
                '" at index ' +
                i
            );
          n[t] = 16 * r + o;
        }
        return n;
      }
      function v(e) {
        return (
          "string" == typeof e &&
            (e = (function (e) {
              if ("string" != typeof e) throw Error("string expected");
              return new Uint8Array(new TextEncoder().encode(e));
            })(e)),
          a(e),
          e
        );
      }
      function x(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          a(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      class E {}
      function _(e) {
        let t = (t) => e().update(v(t)).digest(),
          r = e();
        return (
          (t.outputLen = r.outputLen),
          (t.blockLen = r.blockLen),
          (t.create = () => e()),
          t
        );
      }
      function S(e = 32) {
        if (n && "function" == typeof n.getRandomValues)
          return n.getRandomValues(new Uint8Array(e));
        if (n && "function" == typeof n.randomBytes)
          return Uint8Array.from(n.randomBytes(e));
        throw Error("crypto.getRandomValues must be defined");
      }
    },
    88680: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.secp256k1 = void 0);
      var n = r(75055);
      Object.defineProperty(t, "secp256k1", {
        enumerable: !0,
        get: function () {
          return n.secp256k1;
        },
      });
    },
    89343: (e, t, r) => {
      var n = r(51642).Buffer,
        i = r(29143);
      !(function () {
        "use strict";
        var t = {
            742: function (e, t, r) {
              var o = r(491),
                a = r(562),
                s = r(450),
                l = r(324),
                f = r(320);
              for (var u in f) t[u] = f[u];
              function c(e) {
                if ("number" != typeof e || e < t.DEFLATE || e > t.UNZIP)
                  throw TypeError("Bad argument");
                (this.dictionary = null),
                  (this.err = 0),
                  (this.flush = 0),
                  (this.init_done = !1),
                  (this.level = 0),
                  (this.memLevel = 0),
                  (this.mode = e),
                  (this.strategy = 0),
                  (this.windowBits = 0),
                  (this.write_in_progress = !1),
                  (this.pending_close = !1),
                  (this.gzip_id_bytes_read = 0);
              }
              (t.NONE = 0),
                (t.DEFLATE = 1),
                (t.INFLATE = 2),
                (t.GZIP = 3),
                (t.GUNZIP = 4),
                (t.DEFLATERAW = 5),
                (t.INFLATERAW = 6),
                (t.UNZIP = 7),
                (c.prototype.close = function () {
                  if (this.write_in_progress) {
                    this.pending_close = !0;
                    return;
                  }
                  (this.pending_close = !1),
                    o(this.init_done, "close before init"),
                    o(this.mode <= t.UNZIP),
                    this.mode === t.DEFLATE ||
                    this.mode === t.GZIP ||
                    this.mode === t.DEFLATERAW
                      ? s.deflateEnd(this.strm)
                      : (this.mode === t.INFLATE ||
                          this.mode === t.GUNZIP ||
                          this.mode === t.INFLATERAW ||
                          this.mode === t.UNZIP) &&
                        l.inflateEnd(this.strm),
                    (this.mode = t.NONE),
                    (this.dictionary = null);
                }),
                (c.prototype.write = function (e, t, r, n, i, o, a) {
                  return this._write(!0, e, t, r, n, i, o, a);
                }),
                (c.prototype.writeSync = function (e, t, r, n, i, o, a) {
                  return this._write(!1, e, t, r, n, i, o, a);
                }),
                (c.prototype._write = function (e, r, a, s, l, f, u, c) {
                  if (
                    (o.equal(arguments.length, 8),
                    o(this.init_done, "write before init"),
                    o(this.mode !== t.NONE, "already finalized"),
                    o.equal(
                      !1,
                      this.write_in_progress,
                      "write already in progress"
                    ),
                    o.equal(!1, this.pending_close, "close is pending"),
                    (this.write_in_progress = !0),
                    o.equal(!1, void 0 === r, "must provide flush value"),
                    (this.write_in_progress = !0),
                    r !== t.Z_NO_FLUSH &&
                      r !== t.Z_PARTIAL_FLUSH &&
                      r !== t.Z_SYNC_FLUSH &&
                      r !== t.Z_FULL_FLUSH &&
                      r !== t.Z_FINISH &&
                      r !== t.Z_BLOCK)
                  )
                    throw Error("Invalid flush value");
                  if (
                    (null == a && ((a = n.alloc(0)), (l = 0), (s = 0)),
                    (this.strm.avail_in = l),
                    (this.strm.input = a),
                    (this.strm.next_in = s),
                    (this.strm.avail_out = c),
                    (this.strm.output = f),
                    (this.strm.next_out = u),
                    (this.flush = r),
                    !e)
                  )
                    return (this._process(), this._checkError())
                      ? this._afterSync()
                      : void 0;
                  var h = this;
                  return (
                    i.nextTick(function () {
                      h._process(), h._after();
                    }),
                    this
                  );
                }),
                (c.prototype._afterSync = function () {
                  var e = this.strm.avail_out,
                    t = this.strm.avail_in;
                  return (this.write_in_progress = !1), [t, e];
                }),
                (c.prototype._process = function () {
                  var e = null;
                  switch (this.mode) {
                    case t.DEFLATE:
                    case t.GZIP:
                    case t.DEFLATERAW:
                      this.err = s.deflate(this.strm, this.flush);
                      break;
                    case t.UNZIP:
                      switch (
                        (this.strm.avail_in > 0 && (e = this.strm.next_in),
                        this.gzip_id_bytes_read)
                      ) {
                        case 0:
                          if (null === e) break;
                          if (31 === this.strm.input[e]) {
                            if (
                              ((this.gzip_id_bytes_read = 1),
                              e++,
                              1 === this.strm.avail_in)
                            )
                              break;
                          } else {
                            this.mode = t.INFLATE;
                            break;
                          }
                        case 1:
                          if (null === e) break;
                          139 === this.strm.input[e]
                            ? ((this.gzip_id_bytes_read = 2),
                              (this.mode = t.GUNZIP))
                            : (this.mode = t.INFLATE);
                          break;
                        default:
                          throw Error(
                            "invalid number of gzip magic number bytes read"
                          );
                      }
                    case t.INFLATE:
                    case t.GUNZIP:
                    case t.INFLATERAW:
                      for (
                        this.err = l.inflate(this.strm, this.flush),
                          this.err === t.Z_NEED_DICT &&
                            this.dictionary &&
                            ((this.err = l.inflateSetDictionary(
                              this.strm,
                              this.dictionary
                            )),
                            this.err === t.Z_OK
                              ? (this.err = l.inflate(this.strm, this.flush))
                              : this.err === t.Z_DATA_ERROR &&
                                (this.err = t.Z_NEED_DICT));
                        this.strm.avail_in > 0 &&
                        this.mode === t.GUNZIP &&
                        this.err === t.Z_STREAM_END &&
                        0 !== this.strm.next_in[0];

                      )
                        this.reset(),
                          (this.err = l.inflate(this.strm, this.flush));
                      break;
                    default:
                      throw Error("Unknown mode " + this.mode);
                  }
                }),
                (c.prototype._checkError = function () {
                  switch (this.err) {
                    case t.Z_OK:
                    case t.Z_BUF_ERROR:
                      if (
                        0 !== this.strm.avail_out &&
                        this.flush === t.Z_FINISH
                      )
                        return this._error("unexpected end of file"), !1;
                      break;
                    case t.Z_STREAM_END:
                      break;
                    case t.Z_NEED_DICT:
                      return (
                        null == this.dictionary
                          ? this._error("Missing dictionary")
                          : this._error("Bad dictionary"),
                        !1
                      );
                    default:
                      return this._error("Zlib error"), !1;
                  }
                  return !0;
                }),
                (c.prototype._after = function () {
                  if (this._checkError()) {
                    var e = this.strm.avail_out,
                      t = this.strm.avail_in;
                    (this.write_in_progress = !1),
                      this.callback(t, e),
                      this.pending_close && this.close();
                  }
                }),
                (c.prototype._error = function (e) {
                  this.strm.msg && (e = this.strm.msg),
                    this.onerror(e, this.err),
                    (this.write_in_progress = !1),
                    this.pending_close && this.close();
                }),
                (c.prototype.init = function (e, r, n, i, a) {
                  o(
                    4 == arguments.length || 5 == arguments.length,
                    "init(windowBits, level, memLevel, strategy, [dictionary])"
                  ),
                    o(e >= 8 && e <= 15, "invalid windowBits"),
                    o(r >= -1 && r <= 9, "invalid compression level"),
                    o(n >= 1 && n <= 9, "invalid memlevel"),
                    o(
                      i === t.Z_FILTERED ||
                        i === t.Z_HUFFMAN_ONLY ||
                        i === t.Z_RLE ||
                        i === t.Z_FIXED ||
                        i === t.Z_DEFAULT_STRATEGY,
                      "invalid strategy"
                    ),
                    this._init(r, e, n, i, a),
                    this._setDictionary();
                }),
                (c.prototype.params = function () {
                  throw Error("deflateParams Not supported");
                }),
                (c.prototype.reset = function () {
                  this._reset(), this._setDictionary();
                }),
                (c.prototype._init = function (e, r, n, i, o) {
                  switch (
                    ((this.level = e),
                    (this.windowBits = r),
                    (this.memLevel = n),
                    (this.strategy = i),
                    (this.flush = t.Z_NO_FLUSH),
                    (this.err = t.Z_OK),
                    (this.mode === t.GZIP || this.mode === t.GUNZIP) &&
                      (this.windowBits += 16),
                    this.mode === t.UNZIP && (this.windowBits += 32),
                    (this.mode === t.DEFLATERAW ||
                      this.mode === t.INFLATERAW) &&
                      (this.windowBits = -1 * this.windowBits),
                    (this.strm = new a()),
                    this.mode)
                  ) {
                    case t.DEFLATE:
                    case t.GZIP:
                    case t.DEFLATERAW:
                      this.err = s.deflateInit2(
                        this.strm,
                        this.level,
                        t.Z_DEFLATED,
                        this.windowBits,
                        this.memLevel,
                        this.strategy
                      );
                      break;
                    case t.INFLATE:
                    case t.GUNZIP:
                    case t.INFLATERAW:
                    case t.UNZIP:
                      this.err = l.inflateInit2(this.strm, this.windowBits);
                      break;
                    default:
                      throw Error("Unknown mode " + this.mode);
                  }
                  this.err !== t.Z_OK && this._error("Init error"),
                    (this.dictionary = o),
                    (this.write_in_progress = !1),
                    (this.init_done = !0);
                }),
                (c.prototype._setDictionary = function () {
                  if (null != this.dictionary) {
                    switch (((this.err = t.Z_OK), this.mode)) {
                      case t.DEFLATE:
                      case t.DEFLATERAW:
                        this.err = s.deflateSetDictionary(
                          this.strm,
                          this.dictionary
                        );
                    }
                    this.err !== t.Z_OK &&
                      this._error("Failed to set dictionary");
                  }
                }),
                (c.prototype._reset = function () {
                  switch (((this.err = t.Z_OK), this.mode)) {
                    case t.DEFLATE:
                    case t.DEFLATERAW:
                    case t.GZIP:
                      this.err = s.deflateReset(this.strm);
                      break;
                    case t.INFLATE:
                    case t.INFLATERAW:
                    case t.GUNZIP:
                      this.err = l.inflateReset(this.strm);
                  }
                  this.err !== t.Z_OK && this._error("Failed to reset stream");
                }),
                (t.Zlib = c);
            },
            23: function (e, t, r) {
              var n = r(300).Buffer,
                o = r(781).Transform,
                a = r(742),
                s = r(837),
                l = r(491).ok,
                f = r(300).kMaxLength,
                u =
                  "Cannot create final Buffer. It would be larger than 0x" +
                  f.toString(16) +
                  " bytes";
              (a.Z_MIN_WINDOWBITS = 8),
                (a.Z_MAX_WINDOWBITS = 15),
                (a.Z_DEFAULT_WINDOWBITS = 15),
                (a.Z_MIN_CHUNK = 64),
                (a.Z_MAX_CHUNK = 1 / 0),
                (a.Z_DEFAULT_CHUNK = 16384),
                (a.Z_MIN_MEMLEVEL = 1),
                (a.Z_MAX_MEMLEVEL = 9),
                (a.Z_DEFAULT_MEMLEVEL = 8),
                (a.Z_MIN_LEVEL = -1),
                (a.Z_MAX_LEVEL = 9),
                (a.Z_DEFAULT_LEVEL = a.Z_DEFAULT_COMPRESSION);
              for (var c = Object.keys(a), h = 0; h < c.length; h++) {
                var d = c[h];
                d.match(/^Z/) &&
                  Object.defineProperty(t, d, {
                    enumerable: !0,
                    value: a[d],
                    writable: !1,
                  });
              }
              for (
                var p = {
                    Z_OK: a.Z_OK,
                    Z_STREAM_END: a.Z_STREAM_END,
                    Z_NEED_DICT: a.Z_NEED_DICT,
                    Z_ERRNO: a.Z_ERRNO,
                    Z_STREAM_ERROR: a.Z_STREAM_ERROR,
                    Z_DATA_ERROR: a.Z_DATA_ERROR,
                    Z_MEM_ERROR: a.Z_MEM_ERROR,
                    Z_BUF_ERROR: a.Z_BUF_ERROR,
                    Z_VERSION_ERROR: a.Z_VERSION_ERROR,
                  },
                  y = Object.keys(p),
                  g = 0;
                g < y.length;
                g++
              ) {
                var b = y[g];
                p[p[b]] = b;
              }
              function m(e, t, r) {
                var i = [],
                  o = 0;
                function a() {
                  for (var t; null !== (t = e.read()); )
                    i.push(t), (o += t.length);
                  e.once("readable", a);
                }
                function s() {
                  var t,
                    a = null;
                  o >= f ? (a = RangeError(u)) : (t = n.concat(i, o)),
                    (i = []),
                    e.close(),
                    r(a, t);
                }
                e.on("error", function (t) {
                  e.removeListener("end", s),
                    e.removeListener("readable", a),
                    r(t);
                }),
                  e.on("end", s),
                  e.end(t),
                  a();
              }
              function w(e, t) {
                if (("string" == typeof t && (t = n.from(t)), !n.isBuffer(t)))
                  throw TypeError("Not a string or buffer");
                var r = e._finishFlushFlag;
                return e._processChunk(t, r);
              }
              function v(e) {
                if (!(this instanceof v)) return new v(e);
                O.call(this, e, a.DEFLATE);
              }
              function x(e) {
                if (!(this instanceof x)) return new x(e);
                O.call(this, e, a.INFLATE);
              }
              function E(e) {
                if (!(this instanceof E)) return new E(e);
                O.call(this, e, a.GZIP);
              }
              function _(e) {
                if (!(this instanceof _)) return new _(e);
                O.call(this, e, a.GUNZIP);
              }
              function S(e) {
                if (!(this instanceof S)) return new S(e);
                O.call(this, e, a.DEFLATERAW);
              }
              function A(e) {
                if (!(this instanceof A)) return new A(e);
                O.call(this, e, a.INFLATERAW);
              }
              function B(e) {
                if (!(this instanceof B)) return new B(e);
                O.call(this, e, a.UNZIP);
              }
              function k(e) {
                return (
                  e === a.Z_NO_FLUSH ||
                  e === a.Z_PARTIAL_FLUSH ||
                  e === a.Z_SYNC_FLUSH ||
                  e === a.Z_FULL_FLUSH ||
                  e === a.Z_FINISH ||
                  e === a.Z_BLOCK
                );
              }
              function O(e, r) {
                var i = this;
                if (
                  ((this._opts = e = e || {}),
                  (this._chunkSize = e.chunkSize || t.Z_DEFAULT_CHUNK),
                  o.call(this, e),
                  e.flush && !k(e.flush))
                )
                  throw Error("Invalid flush flag: " + e.flush);
                if (e.finishFlush && !k(e.finishFlush))
                  throw Error("Invalid flush flag: " + e.finishFlush);
                if (
                  ((this._flushFlag = e.flush || a.Z_NO_FLUSH),
                  (this._finishFlushFlag =
                    void 0 !== e.finishFlush ? e.finishFlush : a.Z_FINISH),
                  e.chunkSize &&
                    (e.chunkSize < t.Z_MIN_CHUNK ||
                      e.chunkSize > t.Z_MAX_CHUNK))
                )
                  throw Error("Invalid chunk size: " + e.chunkSize);
                if (
                  e.windowBits &&
                  (e.windowBits < t.Z_MIN_WINDOWBITS ||
                    e.windowBits > t.Z_MAX_WINDOWBITS)
                )
                  throw Error("Invalid windowBits: " + e.windowBits);
                if (
                  e.level &&
                  (e.level < t.Z_MIN_LEVEL || e.level > t.Z_MAX_LEVEL)
                )
                  throw Error("Invalid compression level: " + e.level);
                if (
                  e.memLevel &&
                  (e.memLevel < t.Z_MIN_MEMLEVEL ||
                    e.memLevel > t.Z_MAX_MEMLEVEL)
                )
                  throw Error("Invalid memLevel: " + e.memLevel);
                if (
                  e.strategy &&
                  e.strategy != t.Z_FILTERED &&
                  e.strategy != t.Z_HUFFMAN_ONLY &&
                  e.strategy != t.Z_RLE &&
                  e.strategy != t.Z_FIXED &&
                  e.strategy != t.Z_DEFAULT_STRATEGY
                )
                  throw Error("Invalid strategy: " + e.strategy);
                if (e.dictionary && !n.isBuffer(e.dictionary))
                  throw Error(
                    "Invalid dictionary: it should be a Buffer instance"
                  );
                this._handle = new a.Zlib(r);
                var s = this;
                (this._hadError = !1),
                  (this._handle.onerror = function (e, r) {
                    T(s), (s._hadError = !0);
                    var n = Error(e);
                    (n.errno = r), (n.code = t.codes[r]), s.emit("error", n);
                  });
                var l = t.Z_DEFAULT_COMPRESSION;
                "number" == typeof e.level && (l = e.level);
                var f = t.Z_DEFAULT_STRATEGY;
                "number" == typeof e.strategy && (f = e.strategy),
                  this._handle.init(
                    e.windowBits || t.Z_DEFAULT_WINDOWBITS,
                    l,
                    e.memLevel || t.Z_DEFAULT_MEMLEVEL,
                    f,
                    e.dictionary
                  ),
                  (this._buffer = n.allocUnsafe(this._chunkSize)),
                  (this._offset = 0),
                  (this._level = l),
                  (this._strategy = f),
                  this.once("end", this.close),
                  Object.defineProperty(this, "_closed", {
                    get: function () {
                      return !i._handle;
                    },
                    configurable: !0,
                    enumerable: !0,
                  });
              }
              function T(e, t) {
                t && i.nextTick(t),
                  e._handle && (e._handle.close(), (e._handle = null));
              }
              function I(e) {
                e.emit("close");
              }
              Object.defineProperty(t, "codes", {
                enumerable: !0,
                value: Object.freeze(p),
                writable: !1,
              }),
                (t.Deflate = v),
                (t.Inflate = x),
                (t.Gzip = E),
                (t.Gunzip = _),
                (t.DeflateRaw = S),
                (t.InflateRaw = A),
                (t.Unzip = B),
                (t.createDeflate = function (e) {
                  return new v(e);
                }),
                (t.createInflate = function (e) {
                  return new x(e);
                }),
                (t.createDeflateRaw = function (e) {
                  return new S(e);
                }),
                (t.createInflateRaw = function (e) {
                  return new A(e);
                }),
                (t.createGzip = function (e) {
                  return new E(e);
                }),
                (t.createGunzip = function (e) {
                  return new _(e);
                }),
                (t.createUnzip = function (e) {
                  return new B(e);
                }),
                (t.deflate = function (e, t, r) {
                  return (
                    "function" == typeof t && ((r = t), (t = {})),
                    m(new v(t), e, r)
                  );
                }),
                (t.deflateSync = function (e, t) {
                  return w(new v(t), e);
                }),
                (t.gzip = function (e, t, r) {
                  return (
                    "function" == typeof t && ((r = t), (t = {})),
                    m(new E(t), e, r)
                  );
                }),
                (t.gzipSync = function (e, t) {
                  return w(new E(t), e);
                }),
                (t.deflateRaw = function (e, t, r) {
                  return (
                    "function" == typeof t && ((r = t), (t = {})),
                    m(new S(t), e, r)
                  );
                }),
                (t.deflateRawSync = function (e, t) {
                  return w(new S(t), e);
                }),
                (t.unzip = function (e, t, r) {
                  return (
                    "function" == typeof t && ((r = t), (t = {})),
                    m(new B(t), e, r)
                  );
                }),
                (t.unzipSync = function (e, t) {
                  return w(new B(t), e);
                }),
                (t.inflate = function (e, t, r) {
                  return (
                    "function" == typeof t && ((r = t), (t = {})),
                    m(new x(t), e, r)
                  );
                }),
                (t.inflateSync = function (e, t) {
                  return w(new x(t), e);
                }),
                (t.gunzip = function (e, t, r) {
                  return (
                    "function" == typeof t && ((r = t), (t = {})),
                    m(new _(t), e, r)
                  );
                }),
                (t.gunzipSync = function (e, t) {
                  return w(new _(t), e);
                }),
                (t.inflateRaw = function (e, t, r) {
                  return (
                    "function" == typeof t && ((r = t), (t = {})),
                    m(new A(t), e, r)
                  );
                }),
                (t.inflateRawSync = function (e, t) {
                  return w(new A(t), e);
                }),
                s.inherits(O, o),
                (O.prototype.params = function (e, r, n) {
                  if (e < t.Z_MIN_LEVEL || e > t.Z_MAX_LEVEL)
                    throw RangeError("Invalid compression level: " + e);
                  if (
                    r != t.Z_FILTERED &&
                    r != t.Z_HUFFMAN_ONLY &&
                    r != t.Z_RLE &&
                    r != t.Z_FIXED &&
                    r != t.Z_DEFAULT_STRATEGY
                  )
                    throw TypeError("Invalid strategy: " + r);
                  if (this._level !== e || this._strategy !== r) {
                    var o = this;
                    this.flush(a.Z_SYNC_FLUSH, function () {
                      l(o._handle, "zlib binding closed"),
                        o._handle.params(e, r),
                        !o._hadError &&
                          ((o._level = e), (o._strategy = r), n && n());
                    });
                  } else i.nextTick(n);
                }),
                (O.prototype.reset = function () {
                  return (
                    l(this._handle, "zlib binding closed"), this._handle.reset()
                  );
                }),
                (O.prototype._flush = function (e) {
                  this._transform(n.alloc(0), "", e);
                }),
                (O.prototype.flush = function (e, t) {
                  var r = this,
                    o = this._writableState;
                  ("function" != typeof e && (void 0 !== e || t)) ||
                    ((t = e), (e = a.Z_FULL_FLUSH)),
                    o.ended
                      ? t && i.nextTick(t)
                      : o.ending
                      ? t && this.once("end", t)
                      : o.needDrain
                      ? t &&
                        this.once("drain", function () {
                          return r.flush(e, t);
                        })
                      : ((this._flushFlag = e), this.write(n.alloc(0), "", t));
                }),
                (O.prototype.close = function (e) {
                  T(this, e), i.nextTick(I, this);
                }),
                (O.prototype._transform = function (e, t, r) {
                  var i,
                    o = this._writableState,
                    s = (o.ending || o.ended) && (!e || o.length === e.length);
                  return null === e || n.isBuffer(e)
                    ? this._handle
                      ? void (s
                          ? (i = this._finishFlushFlag)
                          : ((i = this._flushFlag),
                            e.length >= o.length &&
                              (this._flushFlag =
                                this._opts.flush || a.Z_NO_FLUSH)),
                        this._processChunk(e, i, r))
                      : r(Error("zlib binding closed"))
                    : r(Error("invalid input"));
                }),
                (O.prototype._processChunk = function (e, t, r) {
                  var i = e && e.length,
                    o = this._chunkSize - this._offset,
                    a = 0,
                    s = this,
                    c = "function" == typeof r;
                  if (!c) {
                    var h,
                      d = [],
                      p = 0;
                    this.on("error", function (e) {
                      h = e;
                    }),
                      l(this._handle, "zlib binding closed");
                    do
                      var y = this._handle.writeSync(
                        t,
                        e,
                        a,
                        i,
                        this._buffer,
                        this._offset,
                        o
                      );
                    while (!this._hadError && m(y[0], y[1]));
                    if (this._hadError) throw h;
                    if (p >= f) throw (T(this), RangeError(u));
                    var g = n.concat(d, p);
                    return T(this), g;
                  }
                  l(this._handle, "zlib binding closed");
                  var b = this._handle.write(
                    t,
                    e,
                    a,
                    i,
                    this._buffer,
                    this._offset,
                    o
                  );
                  function m(f, u) {
                    if (
                      (this && ((this.buffer = null), (this.callback = null)),
                      !s._hadError)
                    ) {
                      var h = o - u;
                      if ((l(h >= 0, "have should not go down"), h > 0)) {
                        var y = s._buffer.slice(s._offset, s._offset + h);
                        (s._offset += h),
                          c ? s.push(y) : (d.push(y), (p += y.length));
                      }
                      if (
                        ((0 === u || s._offset >= s._chunkSize) &&
                          ((o = s._chunkSize),
                          (s._offset = 0),
                          (s._buffer = n.allocUnsafe(s._chunkSize))),
                        0 === u)
                      ) {
                        if (((a += i - f), (i = f), !c)) return !0;
                        var g = s._handle.write(
                          t,
                          e,
                          a,
                          i,
                          s._buffer,
                          s._offset,
                          s._chunkSize
                        );
                        return (g.callback = m), void (g.buffer = e);
                      }
                      if (!c) return !1;
                      r();
                    }
                  }
                  (b.buffer = e), (b.callback = m);
                }),
                s.inherits(v, O),
                s.inherits(x, O),
                s.inherits(E, O),
                s.inherits(_, O),
                s.inherits(S, O),
                s.inherits(A, O),
                s.inherits(B, O);
            },
            380: function (e, t) {
              var r =
                "undefined" != typeof Uint8Array &&
                "undefined" != typeof Uint16Array &&
                "undefined" != typeof Int32Array;
              (t.assign = function (e) {
                for (
                  var t = Array.prototype.slice.call(arguments, 1);
                  t.length;

                ) {
                  var r = t.shift();
                  if (r) {
                    if ("object" != typeof r)
                      throw TypeError(r + "must be non-object");
                    for (var n in r)
                      Object.prototype.hasOwnProperty.call(r, n) &&
                        (e[n] = r[n]);
                  }
                }
                return e;
              }),
                (t.shrinkBuf = function (e, t) {
                  return e.length === t
                    ? e
                    : e.subarray
                    ? e.subarray(0, t)
                    : ((e.length = t), e);
                });
              var n = {
                  arraySet: function (e, t, r, n, i) {
                    if (t.subarray && e.subarray) {
                      e.set(t.subarray(r, r + n), i);
                      return;
                    }
                    for (var o = 0; o < n; o++) e[i + o] = t[r + o];
                  },
                  flattenChunks: function (e) {
                    var t, r, n, i, o, a;
                    for (t = 0, n = 0, r = e.length; t < r; t++)
                      n += e[t].length;
                    for (
                      t = 0, a = new Uint8Array(n), i = 0, r = e.length;
                      t < r;
                      t++
                    )
                      (o = e[t]), a.set(o, i), (i += o.length);
                    return a;
                  },
                },
                i = {
                  arraySet: function (e, t, r, n, i) {
                    for (var o = 0; o < n; o++) e[i + o] = t[r + o];
                  },
                  flattenChunks: function (e) {
                    return [].concat.apply([], e);
                  },
                };
              (t.setTyped = function (e) {
                e
                  ? ((t.Buf8 = Uint8Array),
                    (t.Buf16 = Uint16Array),
                    (t.Buf32 = Int32Array),
                    t.assign(t, n))
                  : ((t.Buf8 = Array),
                    (t.Buf16 = Array),
                    (t.Buf32 = Array),
                    t.assign(t, i));
              }),
                t.setTyped(r);
            },
            496: function (e) {
              e.exports = function (e, t, r, n) {
                for (
                  var i = (65535 & e) | 0, o = ((e >>> 16) & 65535) | 0, a = 0;
                  0 !== r;

                ) {
                  (a = r > 2e3 ? 2e3 : r), (r -= a);
                  do o = (o + (i = (i + t[n++]) | 0)) | 0;
                  while (--a);
                  (i %= 65521), (o %= 65521);
                }
                return i | (o << 16) | 0;
              };
            },
            320: function (e) {
              e.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8,
              };
            },
            307: function (e) {
              var t = (function () {
                for (var e, t = [], r = 0; r < 256; r++) {
                  e = r;
                  for (var n = 0; n < 8; n++)
                    e = 1 & e ? 0xedb88320 ^ (e >>> 1) : e >>> 1;
                  t[r] = e;
                }
                return t;
              })();
              e.exports = function (e, r, n, i) {
                var o = i + n;
                e ^= -1;
                for (var a = i; a < o; a++) e = (e >>> 8) ^ t[(e ^ r[a]) & 255];
                return -1 ^ e;
              };
            },
            450: function (e, t, r) {
              var n,
                i = r(380),
                o = r(842),
                a = r(496),
                s = r(307),
                l = r(31),
                f = 573;
              function u(e, t) {
                return (e.msg = l[t]), t;
              }
              function c(e) {
                return (e << 1) - 9 * (e > 4);
              }
              function h(e) {
                for (var t = e.length; --t >= 0; ) e[t] = 0;
              }
              function d(e) {
                var t = e.state,
                  r = t.pending;
                r > e.avail_out && (r = e.avail_out),
                  0 !== r &&
                    (i.arraySet(
                      e.output,
                      t.pending_buf,
                      t.pending_out,
                      r,
                      e.next_out
                    ),
                    (e.next_out += r),
                    (t.pending_out += r),
                    (e.total_out += r),
                    (e.avail_out -= r),
                    (t.pending -= r),
                    0 === t.pending && (t.pending_out = 0));
              }
              function p(e, t) {
                o._tr_flush_block(
                  e,
                  e.block_start >= 0 ? e.block_start : -1,
                  e.strstart - e.block_start,
                  t
                ),
                  (e.block_start = e.strstart),
                  d(e.strm);
              }
              function y(e, t) {
                e.pending_buf[e.pending++] = t;
              }
              function g(e, t) {
                (e.pending_buf[e.pending++] = (t >>> 8) & 255),
                  (e.pending_buf[e.pending++] = 255 & t);
              }
              function b(e, t) {
                var r,
                  n,
                  i = e.max_chain_length,
                  o = e.strstart,
                  a = e.prev_length,
                  s = e.nice_match,
                  l =
                    e.strstart > e.w_size - 262
                      ? e.strstart - (e.w_size - 262)
                      : 0,
                  f = e.window,
                  u = e.w_mask,
                  c = e.prev,
                  h = e.strstart + 258,
                  d = f[o + a - 1],
                  p = f[o + a];
                e.prev_length >= e.good_match && (i >>= 2),
                  s > e.lookahead && (s = e.lookahead);
                do {
                  if (
                    f[(r = t) + a] !== p ||
                    f[r + a - 1] !== d ||
                    f[r] !== f[o] ||
                    f[++r] !== f[o + 1]
                  )
                    continue;
                  (o += 2), r++;
                  do;
                  while (
                    f[++o] === f[++r] &&
                    f[++o] === f[++r] &&
                    f[++o] === f[++r] &&
                    f[++o] === f[++r] &&
                    f[++o] === f[++r] &&
                    f[++o] === f[++r] &&
                    f[++o] === f[++r] &&
                    f[++o] === f[++r] &&
                    o < h
                  );
                  if (((n = 258 - (h - o)), (o = h - 258), n > a)) {
                    if (((e.match_start = t), (a = n), n >= s)) break;
                    (d = f[o + a - 1]), (p = f[o + a]);
                  }
                } while ((t = c[t & u]) > l && 0 != --i);
                return a <= e.lookahead ? a : e.lookahead;
              }
              function m(e) {
                var t,
                  r,
                  n,
                  o,
                  l,
                  f = e.w_size;
                do {
                  if (
                    ((o = e.window_size - e.lookahead - e.strstart),
                    e.strstart >= f + (f - 262))
                  ) {
                    i.arraySet(e.window, e.window, f, f, 0),
                      (e.match_start -= f),
                      (e.strstart -= f),
                      (e.block_start -= f),
                      (t = r = e.hash_size);
                    do (n = e.head[--t]), (e.head[t] = n >= f ? n - f : 0);
                    while (--r);
                    t = r = f;
                    do (n = e.prev[--t]), (e.prev[t] = n >= f ? n - f : 0);
                    while (--r);
                    o += f;
                  }
                  if (0 === e.strm.avail_in) break;
                  if (
                    ((r = (function (e, t, r, n) {
                      var o = e.avail_in;
                      return (o > n && (o = n), 0 === o)
                        ? 0
                        : ((e.avail_in -= o),
                          i.arraySet(t, e.input, e.next_in, o, r),
                          1 === e.state.wrap
                            ? (e.adler = a(e.adler, t, o, r))
                            : 2 === e.state.wrap &&
                              (e.adler = s(e.adler, t, o, r)),
                          (e.next_in += o),
                          (e.total_in += o),
                          o);
                    })(e.strm, e.window, e.strstart + e.lookahead, o)),
                    (e.lookahead += r),
                    e.lookahead + e.insert >= 3)
                  )
                    for (
                      l = e.strstart - e.insert,
                        e.ins_h = e.window[l],
                        e.ins_h =
                          ((e.ins_h << e.hash_shift) ^ e.window[l + 1]) &
                          e.hash_mask;
                      e.insert &&
                      ((e.ins_h =
                        ((e.ins_h << e.hash_shift) ^ e.window[l + 3 - 1]) &
                        e.hash_mask),
                      (e.prev[l & e.w_mask] = e.head[e.ins_h]),
                      (e.head[e.ins_h] = l),
                      l++,
                      e.insert--,
                      !(e.lookahead + e.insert < 3));

                    );
                } while (e.lookahead < 262 && 0 !== e.strm.avail_in);
              }
              function w(e, t) {
                for (var r, n; ; ) {
                  if (e.lookahead < 262) {
                    if ((m(e), e.lookahead < 262 && 0 === t)) return 1;
                    if (0 === e.lookahead) break;
                  }
                  if (
                    ((r = 0),
                    e.lookahead >= 3 &&
                      ((e.ins_h =
                        ((e.ins_h << e.hash_shift) ^
                          e.window[e.strstart + 3 - 1]) &
                        e.hash_mask),
                      (r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                      (e.head[e.ins_h] = e.strstart)),
                    0 !== r &&
                      e.strstart - r <= e.w_size - 262 &&
                      (e.match_length = b(e, r)),
                    e.match_length >= 3)
                  ) {
                    if (
                      ((n = o._tr_tally(
                        e,
                        e.strstart - e.match_start,
                        e.match_length - 3
                      )),
                      (e.lookahead -= e.match_length),
                      e.match_length <= e.max_lazy_match && e.lookahead >= 3)
                    ) {
                      e.match_length--;
                      do
                        e.strstart++,
                          (e.ins_h =
                            ((e.ins_h << e.hash_shift) ^
                              e.window[e.strstart + 3 - 1]) &
                            e.hash_mask),
                          (r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                          (e.head[e.ins_h] = e.strstart);
                      while (0 != --e.match_length);
                      e.strstart++;
                    } else
                      (e.strstart += e.match_length),
                        (e.match_length = 0),
                        (e.ins_h = e.window[e.strstart]),
                        (e.ins_h =
                          ((e.ins_h << e.hash_shift) ^
                            e.window[e.strstart + 1]) &
                          e.hash_mask);
                  } else
                    (n = o._tr_tally(e, 0, e.window[e.strstart])),
                      e.lookahead--,
                      e.strstart++;
                  if (n && (p(e, !1), 0 === e.strm.avail_out)) return 1;
                }
                return ((e.insert = e.strstart < 2 ? e.strstart : 2), 4 === t)
                  ? (p(e, !0), 0 === e.strm.avail_out)
                    ? 3
                    : 4
                  : e.last_lit && (p(e, !1), 0 === e.strm.avail_out)
                  ? 1
                  : 2;
              }
              function v(e, t) {
                for (var r, n, i; ; ) {
                  if (e.lookahead < 262) {
                    if ((m(e), e.lookahead < 262 && 0 === t)) return 1;
                    if (0 === e.lookahead) break;
                  }
                  if (
                    ((r = 0),
                    e.lookahead >= 3 &&
                      ((e.ins_h =
                        ((e.ins_h << e.hash_shift) ^
                          e.window[e.strstart + 3 - 1]) &
                        e.hash_mask),
                      (r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                      (e.head[e.ins_h] = e.strstart)),
                    (e.prev_length = e.match_length),
                    (e.prev_match = e.match_start),
                    (e.match_length = 2),
                    0 !== r &&
                      e.prev_length < e.max_lazy_match &&
                      e.strstart - r <= e.w_size - 262 &&
                      ((e.match_length = b(e, r)),
                      e.match_length <= 5 &&
                        (1 === e.strategy ||
                          (3 === e.match_length &&
                            e.strstart - e.match_start > 4096)) &&
                        (e.match_length = 2)),
                    e.prev_length >= 3 && e.match_length <= e.prev_length)
                  ) {
                    (i = e.strstart + e.lookahead - 3),
                      (n = o._tr_tally(
                        e,
                        e.strstart - 1 - e.prev_match,
                        e.prev_length - 3
                      )),
                      (e.lookahead -= e.prev_length - 1),
                      (e.prev_length -= 2);
                    do
                      ++e.strstart <= i &&
                        ((e.ins_h =
                          ((e.ins_h << e.hash_shift) ^
                            e.window[e.strstart + 3 - 1]) &
                          e.hash_mask),
                        (r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                        (e.head[e.ins_h] = e.strstart));
                    while (0 != --e.prev_length);
                    if (
                      ((e.match_available = 0),
                      (e.match_length = 2),
                      e.strstart++,
                      n && (p(e, !1), 0 === e.strm.avail_out))
                    )
                      return 1;
                  } else if (e.match_available) {
                    if (
                      ((n = o._tr_tally(e, 0, e.window[e.strstart - 1])) &&
                        p(e, !1),
                      e.strstart++,
                      e.lookahead--,
                      0 === e.strm.avail_out)
                    )
                      return 1;
                  } else (e.match_available = 1), e.strstart++, e.lookahead--;
                }
                return (e.match_available &&
                  ((n = o._tr_tally(e, 0, e.window[e.strstart - 1])),
                  (e.match_available = 0)),
                (e.insert = e.strstart < 2 ? e.strstart : 2),
                4 === t)
                  ? (p(e, !0), 0 === e.strm.avail_out)
                    ? 3
                    : 4
                  : e.last_lit && (p(e, !1), 0 === e.strm.avail_out)
                  ? 1
                  : 2;
              }
              function x(e, t, r, n, i) {
                (this.good_length = e),
                  (this.max_lazy = t),
                  (this.nice_length = r),
                  (this.max_chain = n),
                  (this.func = i);
              }
              function E() {
                (this.strm = null),
                  (this.status = 0),
                  (this.pending_buf = null),
                  (this.pending_buf_size = 0),
                  (this.pending_out = 0),
                  (this.pending = 0),
                  (this.wrap = 0),
                  (this.gzhead = null),
                  (this.gzindex = 0),
                  (this.method = 8),
                  (this.last_flush = -1),
                  (this.w_size = 0),
                  (this.w_bits = 0),
                  (this.w_mask = 0),
                  (this.window = null),
                  (this.window_size = 0),
                  (this.prev = null),
                  (this.head = null),
                  (this.ins_h = 0),
                  (this.hash_size = 0),
                  (this.hash_bits = 0),
                  (this.hash_mask = 0),
                  (this.hash_shift = 0),
                  (this.block_start = 0),
                  (this.match_length = 0),
                  (this.prev_match = 0),
                  (this.match_available = 0),
                  (this.strstart = 0),
                  (this.match_start = 0),
                  (this.lookahead = 0),
                  (this.prev_length = 0),
                  (this.max_chain_length = 0),
                  (this.max_lazy_match = 0),
                  (this.level = 0),
                  (this.strategy = 0),
                  (this.good_match = 0),
                  (this.nice_match = 0),
                  (this.dyn_ltree = new i.Buf16(2 * f)),
                  (this.dyn_dtree = new i.Buf16(122)),
                  (this.bl_tree = new i.Buf16(78)),
                  h(this.dyn_ltree),
                  h(this.dyn_dtree),
                  h(this.bl_tree),
                  (this.l_desc = null),
                  (this.d_desc = null),
                  (this.bl_desc = null),
                  (this.bl_count = new i.Buf16(16)),
                  (this.heap = new i.Buf16(573)),
                  h(this.heap),
                  (this.heap_len = 0),
                  (this.heap_max = 0),
                  (this.depth = new i.Buf16(573)),
                  h(this.depth),
                  (this.l_buf = 0),
                  (this.lit_bufsize = 0),
                  (this.last_lit = 0),
                  (this.d_buf = 0),
                  (this.opt_len = 0),
                  (this.static_len = 0),
                  (this.matches = 0),
                  (this.insert = 0),
                  (this.bi_buf = 0),
                  (this.bi_valid = 0);
              }
              function _(e) {
                var t;
                return e && e.state
                  ? ((e.total_in = e.total_out = 0),
                    (e.data_type = 2),
                    ((t = e.state).pending = 0),
                    (t.pending_out = 0),
                    t.wrap < 0 && (t.wrap = -t.wrap),
                    (t.status = t.wrap ? 42 : 113),
                    (e.adler = +(2 !== t.wrap)),
                    (t.last_flush = 0),
                    o._tr_init(t),
                    0)
                  : u(e, -2);
              }
              function S(e) {
                var t,
                  r = _(e);
                return (
                  0 === r &&
                    (((t = e.state).window_size = 2 * t.w_size),
                    h(t.head),
                    (t.max_lazy_match = n[t.level].max_lazy),
                    (t.good_match = n[t.level].good_length),
                    (t.nice_match = n[t.level].nice_length),
                    (t.max_chain_length = n[t.level].max_chain),
                    (t.strstart = 0),
                    (t.block_start = 0),
                    (t.lookahead = 0),
                    (t.insert = 0),
                    (t.match_length = t.prev_length = 2),
                    (t.match_available = 0),
                    (t.ins_h = 0)),
                  r
                );
              }
              function A(e, t, r, n, o, a) {
                if (!e) return -2;
                var s = 1;
                if (
                  (-1 === t && (t = 6),
                  n < 0 ? ((s = 0), (n = -n)) : n > 15 && ((s = 2), (n -= 16)),
                  o < 1 ||
                    o > 9 ||
                    8 !== r ||
                    n < 8 ||
                    n > 15 ||
                    t < 0 ||
                    t > 9 ||
                    a < 0 ||
                    a > 4)
                )
                  return u(e, -2);
                8 === n && (n = 9);
                var l = new E();
                return (
                  (e.state = l),
                  (l.strm = e),
                  (l.wrap = s),
                  (l.gzhead = null),
                  (l.w_bits = n),
                  (l.w_size = 1 << l.w_bits),
                  (l.w_mask = l.w_size - 1),
                  (l.hash_bits = o + 7),
                  (l.hash_size = 1 << l.hash_bits),
                  (l.hash_mask = l.hash_size - 1),
                  (l.hash_shift = ~~((l.hash_bits + 3 - 1) / 3)),
                  (l.window = new i.Buf8(2 * l.w_size)),
                  (l.head = new i.Buf16(l.hash_size)),
                  (l.prev = new i.Buf16(l.w_size)),
                  (l.lit_bufsize = 1 << (o + 6)),
                  (l.pending_buf_size = 4 * l.lit_bufsize),
                  (l.pending_buf = new i.Buf8(l.pending_buf_size)),
                  (l.d_buf = +l.lit_bufsize),
                  (l.l_buf = 3 * l.lit_bufsize),
                  (l.level = t),
                  (l.strategy = a),
                  (l.method = r),
                  S(e)
                );
              }
              (n = [
                new x(0, 0, 0, 0, function (e, t) {
                  var r = 65535;
                  for (
                    65535 > e.pending_buf_size - 5 &&
                    (r = e.pending_buf_size - 5);
                    ;

                  ) {
                    if (e.lookahead <= 1) {
                      if ((m(e), 0 === e.lookahead && 0 === t)) return 1;
                      if (0 === e.lookahead) break;
                    }
                    (e.strstart += e.lookahead), (e.lookahead = 0);
                    var n = e.block_start + r;
                    if (
                      ((0 === e.strstart || e.strstart >= n) &&
                        ((e.lookahead = e.strstart - n),
                        (e.strstart = n),
                        p(e, !1),
                        0 === e.strm.avail_out)) ||
                      (e.strstart - e.block_start >= e.w_size - 262 &&
                        (p(e, !1), 0 === e.strm.avail_out))
                    )
                      return 1;
                  }
                  return ((e.insert = 0), 4 === t)
                    ? (p(e, !0), 0 === e.strm.avail_out)
                      ? 3
                      : 4
                    : (e.strstart > e.block_start &&
                        (p(e, !1), e.strm.avail_out),
                      1);
                }),
                new x(4, 4, 8, 4, w),
                new x(4, 5, 16, 8, w),
                new x(4, 6, 32, 32, w),
                new x(4, 4, 16, 16, v),
                new x(8, 16, 32, 32, v),
                new x(8, 16, 128, 128, v),
                new x(8, 32, 128, 256, v),
                new x(32, 128, 258, 1024, v),
                new x(32, 258, 258, 4096, v),
              ]),
                (t.deflateInit = function (e, t) {
                  return A(e, t, 8, 15, 8, 0);
                }),
                (t.deflateInit2 = A),
                (t.deflateReset = S),
                (t.deflateResetKeep = _),
                (t.deflateSetHeader = function (e, t) {
                  return e && e.state && 2 === e.state.wrap
                    ? ((e.state.gzhead = t), 0)
                    : -2;
                }),
                (t.deflate = function (e, t) {
                  if (!e || !e.state || t > 5 || t < 0)
                    return e ? u(e, -2) : -2;
                  if (
                    ((i = e.state),
                    !e.output ||
                      (!e.input && 0 !== e.avail_in) ||
                      (666 === i.status && 4 !== t))
                  )
                    return u(e, 0 === e.avail_out ? -5 : -2);
                  if (
                    ((i.strm = e),
                    (r = i.last_flush),
                    (i.last_flush = t),
                    42 === i.status)
                  ) {
                    if (2 === i.wrap)
                      (e.adler = 0),
                        y(i, 31),
                        y(i, 139),
                        y(i, 8),
                        i.gzhead
                          ? (y(
                              i,
                              +!!i.gzhead.text +
                                2 * !!i.gzhead.hcrc +
                                4 * !!i.gzhead.extra +
                                8 * !!i.gzhead.name +
                                16 * !!i.gzhead.comment
                            ),
                            y(i, 255 & i.gzhead.time),
                            y(i, (i.gzhead.time >> 8) & 255),
                            y(i, (i.gzhead.time >> 16) & 255),
                            y(i, (i.gzhead.time >> 24) & 255),
                            y(
                              i,
                              9 === i.level
                                ? 2
                                : 4 * (i.strategy >= 2 || i.level < 2)
                            ),
                            y(i, 255 & i.gzhead.os),
                            i.gzhead.extra &&
                              i.gzhead.extra.length &&
                              (y(i, 255 & i.gzhead.extra.length),
                              y(i, (i.gzhead.extra.length >> 8) & 255)),
                            i.gzhead.hcrc &&
                              (e.adler = s(
                                e.adler,
                                i.pending_buf,
                                i.pending,
                                0
                              )),
                            (i.gzindex = 0),
                            (i.status = 69))
                          : (y(i, 0),
                            y(i, 0),
                            y(i, 0),
                            y(i, 0),
                            y(i, 0),
                            y(
                              i,
                              9 === i.level
                                ? 2
                                : 4 * (i.strategy >= 2 || i.level < 2)
                            ),
                            y(i, 3),
                            (i.status = 113));
                    else {
                      var r,
                        i,
                        a,
                        l,
                        f = (8 + ((i.w_bits - 8) << 4)) << 8,
                        b = -1;
                      (f |=
                        (i.strategy >= 2 || i.level < 2
                          ? 0
                          : i.level < 6
                          ? 1
                          : 6 === i.level
                          ? 2
                          : 3) << 6),
                        0 !== i.strstart && (f |= 32),
                        (f += 31 - (f % 31)),
                        (i.status = 113),
                        g(i, f),
                        0 !== i.strstart &&
                          (g(i, e.adler >>> 16), g(i, 65535 & e.adler)),
                        (e.adler = 1);
                    }
                  }
                  if (69 === i.status) {
                    if (i.gzhead.extra) {
                      for (
                        a = i.pending;
                        i.gzindex < (65535 & i.gzhead.extra.length) &&
                        (i.pending !== i.pending_buf_size ||
                          (i.gzhead.hcrc &&
                            i.pending > a &&
                            (e.adler = s(
                              e.adler,
                              i.pending_buf,
                              i.pending - a,
                              a
                            )),
                          d(e),
                          (a = i.pending),
                          i.pending !== i.pending_buf_size));

                      )
                        y(i, 255 & i.gzhead.extra[i.gzindex]), i.gzindex++;
                      i.gzhead.hcrc &&
                        i.pending > a &&
                        (e.adler = s(e.adler, i.pending_buf, i.pending - a, a)),
                        i.gzindex === i.gzhead.extra.length &&
                          ((i.gzindex = 0), (i.status = 73));
                    } else i.status = 73;
                  }
                  if (73 === i.status) {
                    if (i.gzhead.name) {
                      a = i.pending;
                      do {
                        if (
                          i.pending === i.pending_buf_size &&
                          (i.gzhead.hcrc &&
                            i.pending > a &&
                            (e.adler = s(
                              e.adler,
                              i.pending_buf,
                              i.pending - a,
                              a
                            )),
                          d(e),
                          (a = i.pending),
                          i.pending === i.pending_buf_size)
                        ) {
                          l = 1;
                          break;
                        }
                        (l =
                          i.gzindex < i.gzhead.name.length
                            ? 255 & i.gzhead.name.charCodeAt(i.gzindex++)
                            : 0),
                          y(i, l);
                      } while (0 !== l);
                      i.gzhead.hcrc &&
                        i.pending > a &&
                        (e.adler = s(e.adler, i.pending_buf, i.pending - a, a)),
                        0 === l && ((i.gzindex = 0), (i.status = 91));
                    } else i.status = 91;
                  }
                  if (91 === i.status) {
                    if (i.gzhead.comment) {
                      a = i.pending;
                      do {
                        if (
                          i.pending === i.pending_buf_size &&
                          (i.gzhead.hcrc &&
                            i.pending > a &&
                            (e.adler = s(
                              e.adler,
                              i.pending_buf,
                              i.pending - a,
                              a
                            )),
                          d(e),
                          (a = i.pending),
                          i.pending === i.pending_buf_size)
                        ) {
                          l = 1;
                          break;
                        }
                        (l =
                          i.gzindex < i.gzhead.comment.length
                            ? 255 & i.gzhead.comment.charCodeAt(i.gzindex++)
                            : 0),
                          y(i, l);
                      } while (0 !== l);
                      i.gzhead.hcrc &&
                        i.pending > a &&
                        (e.adler = s(e.adler, i.pending_buf, i.pending - a, a)),
                        0 === l && (i.status = 103);
                    } else i.status = 103;
                  }
                  if (
                    (103 === i.status &&
                      (i.gzhead.hcrc
                        ? (i.pending + 2 > i.pending_buf_size && d(e),
                          i.pending + 2 <= i.pending_buf_size &&
                            (y(i, 255 & e.adler),
                            y(i, (e.adler >> 8) & 255),
                            (e.adler = 0),
                            (i.status = 113)))
                        : (i.status = 113)),
                    0 !== i.pending)
                  ) {
                    if ((d(e), 0 === e.avail_out))
                      return (i.last_flush = -1), 0;
                  } else if (0 === e.avail_in && c(t) <= c(r) && 4 !== t)
                    return u(e, -5);
                  if (666 === i.status && 0 !== e.avail_in) return u(e, -5);
                  if (
                    0 !== e.avail_in ||
                    0 !== i.lookahead ||
                    (0 !== t && 666 !== i.status)
                  ) {
                    var w =
                      2 === i.strategy
                        ? (function (e, t) {
                            for (var r; ; ) {
                              if (
                                0 === e.lookahead &&
                                (m(e), 0 === e.lookahead)
                              ) {
                                if (0 === t) return 1;
                                break;
                              }
                              if (
                                ((e.match_length = 0),
                                (r = o._tr_tally(e, 0, e.window[e.strstart])),
                                e.lookahead--,
                                e.strstart++,
                                r && (p(e, !1), 0 === e.strm.avail_out))
                              )
                                return 1;
                            }
                            return ((e.insert = 0), 4 === t)
                              ? (p(e, !0), 0 === e.strm.avail_out)
                                ? 3
                                : 4
                              : e.last_lit && (p(e, !1), 0 === e.strm.avail_out)
                              ? 1
                              : 2;
                          })(i, t)
                        : 3 === i.strategy
                        ? (function (e, t) {
                            for (var r, n, i, a, s = e.window; ; ) {
                              if (e.lookahead <= 258) {
                                if ((m(e), e.lookahead <= 258 && 0 === t))
                                  return 1;
                                if (0 === e.lookahead) break;
                              }
                              if (
                                ((e.match_length = 0),
                                e.lookahead >= 3 &&
                                  e.strstart > 0 &&
                                  (n = s[(i = e.strstart - 1)]) === s[++i] &&
                                  n === s[++i] &&
                                  n === s[++i])
                              ) {
                                a = e.strstart + 258;
                                do;
                                while (
                                  n === s[++i] &&
                                  n === s[++i] &&
                                  n === s[++i] &&
                                  n === s[++i] &&
                                  n === s[++i] &&
                                  n === s[++i] &&
                                  n === s[++i] &&
                                  n === s[++i] &&
                                  i < a
                                );
                                (e.match_length = 258 - (a - i)),
                                  e.match_length > e.lookahead &&
                                    (e.match_length = e.lookahead);
                              }
                              if (
                                (e.match_length >= 3
                                  ? ((r = o._tr_tally(
                                      e,
                                      1,
                                      e.match_length - 3
                                    )),
                                    (e.lookahead -= e.match_length),
                                    (e.strstart += e.match_length),
                                    (e.match_length = 0))
                                  : ((r = o._tr_tally(
                                      e,
                                      0,
                                      e.window[e.strstart]
                                    )),
                                    e.lookahead--,
                                    e.strstart++),
                                r && (p(e, !1), 0 === e.strm.avail_out))
                              )
                                return 1;
                            }
                            return ((e.insert = 0), 4 === t)
                              ? (p(e, !0), 0 === e.strm.avail_out)
                                ? 3
                                : 4
                              : e.last_lit && (p(e, !1), 0 === e.strm.avail_out)
                              ? 1
                              : 2;
                          })(i, t)
                        : n[i.level].func(i, t);
                    if (
                      ((3 === w || 4 === w) && (i.status = 666),
                      1 === w || 3 === w)
                    )
                      return 0 === e.avail_out && (i.last_flush = -1), 0;
                    if (
                      2 === w &&
                      (1 === t
                        ? o._tr_align(i)
                        : 5 !== t &&
                          (o._tr_stored_block(i, 0, 0, !1),
                          3 === t &&
                            (h(i.head),
                            0 === i.lookahead &&
                              ((i.strstart = 0),
                              (i.block_start = 0),
                              (i.insert = 0)))),
                      d(e),
                      0 === e.avail_out)
                    )
                      return (i.last_flush = -1), 0;
                  }
                  return 4 !== t
                    ? 0
                    : i.wrap <= 0
                    ? 1
                    : (2 === i.wrap
                        ? (y(i, 255 & e.adler),
                          y(i, (e.adler >> 8) & 255),
                          y(i, (e.adler >> 16) & 255),
                          y(i, (e.adler >> 24) & 255),
                          y(i, 255 & e.total_in),
                          y(i, (e.total_in >> 8) & 255),
                          y(i, (e.total_in >> 16) & 255),
                          y(i, (e.total_in >> 24) & 255))
                        : (g(i, e.adler >>> 16), g(i, 65535 & e.adler)),
                      d(e),
                      i.wrap > 0 && (i.wrap = -i.wrap),
                      +(0 === i.pending));
                }),
                (t.deflateEnd = function (e) {
                  var t;
                  return e && e.state
                    ? 42 !== (t = e.state.status) &&
                      69 !== t &&
                      73 !== t &&
                      91 !== t &&
                      103 !== t &&
                      113 !== t &&
                      666 !== t
                      ? u(e, -2)
                      : ((e.state = null), 113 === t ? u(e, -3) : 0)
                    : -2;
                }),
                (t.deflateSetDictionary = function (e, t) {
                  var r,
                    n,
                    o,
                    s,
                    l,
                    f,
                    u,
                    c,
                    d = t.length;
                  if (
                    !e ||
                    !e.state ||
                    2 === (s = (r = e.state).wrap) ||
                    (1 === s && 42 !== r.status) ||
                    r.lookahead
                  )
                    return -2;
                  for (
                    1 === s && (e.adler = a(e.adler, t, d, 0)),
                      r.wrap = 0,
                      d >= r.w_size &&
                        (0 === s &&
                          (h(r.head),
                          (r.strstart = 0),
                          (r.block_start = 0),
                          (r.insert = 0)),
                        (c = new i.Buf8(r.w_size)),
                        i.arraySet(c, t, d - r.w_size, r.w_size, 0),
                        (t = c),
                        (d = r.w_size)),
                      l = e.avail_in,
                      f = e.next_in,
                      u = e.input,
                      e.avail_in = d,
                      e.next_in = 0,
                      e.input = t,
                      m(r);
                    r.lookahead >= 3;

                  ) {
                    (n = r.strstart), (o = r.lookahead - 2);
                    do
                      (r.ins_h =
                        ((r.ins_h << r.hash_shift) ^ r.window[n + 3 - 1]) &
                        r.hash_mask),
                        (r.prev[n & r.w_mask] = r.head[r.ins_h]),
                        (r.head[r.ins_h] = n),
                        n++;
                    while (--o);
                    (r.strstart = n), (r.lookahead = 2), m(r);
                  }
                  return (
                    (r.strstart += r.lookahead),
                    (r.block_start = r.strstart),
                    (r.insert = r.lookahead),
                    (r.lookahead = 0),
                    (r.match_length = r.prev_length = 2),
                    (r.match_available = 0),
                    (e.next_in = f),
                    (e.input = u),
                    (e.avail_in = l),
                    (r.wrap = s),
                    0
                  );
                }),
                (t.deflateInfo = "pako deflate (from Nodeca project)");
            },
            333: function (e) {
              e.exports = function (e, t) {
                var r,
                  n,
                  i,
                  o,
                  a,
                  s,
                  l,
                  f,
                  u,
                  c,
                  h,
                  d,
                  p,
                  y,
                  g,
                  b,
                  m,
                  w,
                  v,
                  x,
                  E,
                  _,
                  S,
                  A,
                  B;
                (r = e.state),
                  (n = e.next_in),
                  (A = e.input),
                  (i = n + (e.avail_in - 5)),
                  (o = e.next_out),
                  (B = e.output),
                  (a = o - (t - e.avail_out)),
                  (s = o + (e.avail_out - 257)),
                  (l = r.dmax),
                  (f = r.wsize),
                  (u = r.whave),
                  (c = r.wnext),
                  (h = r.window),
                  (d = r.hold),
                  (p = r.bits),
                  (y = r.lencode),
                  (g = r.distcode),
                  (b = (1 << r.lenbits) - 1),
                  (m = (1 << r.distbits) - 1);
                e: do
                  for (
                    p < 15 &&
                      ((d += A[n++] << p),
                      (p += 8),
                      (d += A[n++] << p),
                      (p += 8)),
                      w = y[d & b];
                    ;

                  ) {
                    if (
                      ((d >>>= v = w >>> 24),
                      (p -= v),
                      0 == (v = (w >>> 16) & 255))
                    )
                      B[o++] = 65535 & w;
                    else if (16 & v)
                      for (
                        x = 65535 & w,
                          (v &= 15) &&
                            (p < v && ((d += A[n++] << p), (p += 8)),
                            (x += d & ((1 << v) - 1)),
                            (d >>>= v),
                            (p -= v)),
                          p < 15 &&
                            ((d += A[n++] << p),
                            (p += 8),
                            (d += A[n++] << p),
                            (p += 8)),
                          w = g[d & m];
                        ;

                      ) {
                        if (
                          ((d >>>= v = w >>> 24),
                          (p -= v),
                          16 & (v = (w >>> 16) & 255))
                        ) {
                          if (
                            ((E = 65535 & w),
                            p < (v &= 15) &&
                              ((d += A[n++] << p),
                              (p += 8) < v && ((d += A[n++] << p), (p += 8))),
                            (E += d & ((1 << v) - 1)) > l)
                          ) {
                            (e.msg = "invalid distance too far back"),
                              (r.mode = 30);
                            break e;
                          }
                          if (((d >>>= v), (p -= v), E > (v = o - a))) {
                            if ((v = E - v) > u && r.sane) {
                              (e.msg = "invalid distance too far back"),
                                (r.mode = 30);
                              break e;
                            }
                            if (((_ = 0), (S = h), 0 === c)) {
                              if (((_ += f - v), v < x)) {
                                x -= v;
                                do B[o++] = h[_++];
                                while (--v);
                                (_ = o - E), (S = B);
                              }
                            } else if (c < v) {
                              if (((_ += f + c - v), (v -= c) < x)) {
                                x -= v;
                                do B[o++] = h[_++];
                                while (--v);
                                if (((_ = 0), c < x)) {
                                  x -= v = c;
                                  do B[o++] = h[_++];
                                  while (--v);
                                  (_ = o - E), (S = B);
                                }
                              }
                            } else if (((_ += c - v), v < x)) {
                              x -= v;
                              do B[o++] = h[_++];
                              while (--v);
                              (_ = o - E), (S = B);
                            }
                            for (; x > 2; )
                              (B[o++] = S[_++]),
                                (B[o++] = S[_++]),
                                (B[o++] = S[_++]),
                                (x -= 3);
                            x &&
                              ((B[o++] = S[_++]), x > 1 && (B[o++] = S[_++]));
                          } else {
                            _ = o - E;
                            do
                              (B[o++] = B[_++]),
                                (B[o++] = B[_++]),
                                (B[o++] = B[_++]),
                                (x -= 3);
                            while (x > 2);
                            x &&
                              ((B[o++] = B[_++]), x > 1 && (B[o++] = B[_++]));
                          }
                        } else if ((64 & v) == 0) {
                          w = g[(65535 & w) + (d & ((1 << v) - 1))];
                          continue;
                        } else {
                          (e.msg = "invalid distance code"), (r.mode = 30);
                          break e;
                        }
                        break;
                      }
                    else if ((64 & v) == 0) {
                      w = y[(65535 & w) + (d & ((1 << v) - 1))];
                      continue;
                    } else if (32 & v) {
                      r.mode = 12;
                      break e;
                    } else {
                      (e.msg = "invalid literal/length code"), (r.mode = 30);
                      break e;
                    }
                    break;
                  }
                while (n < i && o < s);
                (n -= x = p >> 3),
                  (p -= x << 3),
                  (d &= (1 << p) - 1),
                  (e.next_in = n),
                  (e.next_out = o),
                  (e.avail_in = n < i ? 5 + (i - n) : 5 - (n - i)),
                  (e.avail_out = o < s ? 257 + (s - o) : 257 - (o - s)),
                  (r.hold = d),
                  (r.bits = p);
              };
            },
            324: function (e, t, r) {
              var n,
                i,
                o = r(380),
                a = r(496),
                s = r(307),
                l = r(333),
                f = r(19);
              function u(e) {
                return (
                  ((e >>> 24) & 255) +
                  ((e >>> 8) & 65280) +
                  ((65280 & e) << 8) +
                  ((255 & e) << 24)
                );
              }
              function c() {
                (this.mode = 0),
                  (this.last = !1),
                  (this.wrap = 0),
                  (this.havedict = !1),
                  (this.flags = 0),
                  (this.dmax = 0),
                  (this.check = 0),
                  (this.total = 0),
                  (this.head = null),
                  (this.wbits = 0),
                  (this.wsize = 0),
                  (this.whave = 0),
                  (this.wnext = 0),
                  (this.window = null),
                  (this.hold = 0),
                  (this.bits = 0),
                  (this.length = 0),
                  (this.offset = 0),
                  (this.extra = 0),
                  (this.lencode = null),
                  (this.distcode = null),
                  (this.lenbits = 0),
                  (this.distbits = 0),
                  (this.ncode = 0),
                  (this.nlen = 0),
                  (this.ndist = 0),
                  (this.have = 0),
                  (this.next = null),
                  (this.lens = new o.Buf16(320)),
                  (this.work = new o.Buf16(288)),
                  (this.lendyn = null),
                  (this.distdyn = null),
                  (this.sane = 0),
                  (this.back = 0),
                  (this.was = 0);
              }
              function h(e) {
                var t;
                return e && e.state
                  ? ((t = e.state),
                    (e.total_in = e.total_out = t.total = 0),
                    (e.msg = ""),
                    t.wrap && (e.adler = 1 & t.wrap),
                    (t.mode = 1),
                    (t.last = 0),
                    (t.havedict = 0),
                    (t.dmax = 32768),
                    (t.head = null),
                    (t.hold = 0),
                    (t.bits = 0),
                    (t.lencode = t.lendyn = new o.Buf32(852)),
                    (t.distcode = t.distdyn = new o.Buf32(592)),
                    (t.sane = 1),
                    (t.back = -1),
                    0)
                  : -2;
              }
              function d(e) {
                var t;
                return e && e.state
                  ? (((t = e.state).wsize = 0),
                    (t.whave = 0),
                    (t.wnext = 0),
                    h(e))
                  : -2;
              }
              function p(e, t) {
                var r, n;
                return e && e.state
                  ? ((n = e.state),
                    t < 0
                      ? ((r = 0), (t = -t))
                      : ((r = (t >> 4) + 1), t < 48 && (t &= 15)),
                    t && (t < 8 || t > 15))
                    ? -2
                    : (null !== n.window && n.wbits !== t && (n.window = null),
                      (n.wrap = r),
                      (n.wbits = t),
                      d(e))
                  : -2;
              }
              function y(e, t) {
                var r, n;
                return e
                  ? ((e.state = n = new c()),
                    (n.window = null),
                    0 !== (r = p(e, t)) && (e.state = null),
                    r)
                  : -2;
              }
              var g = !0;
              function b(e, t, r, n) {
                var i,
                  a = e.state;
                return (
                  null === a.window &&
                    ((a.wsize = 1 << a.wbits),
                    (a.wnext = 0),
                    (a.whave = 0),
                    (a.window = new o.Buf8(a.wsize))),
                  n >= a.wsize
                    ? (o.arraySet(a.window, t, r - a.wsize, a.wsize, 0),
                      (a.wnext = 0),
                      (a.whave = a.wsize))
                    : ((i = a.wsize - a.wnext) > n && (i = n),
                      o.arraySet(a.window, t, r - n, i, a.wnext),
                      (n -= i)
                        ? (o.arraySet(a.window, t, r - n, n, 0),
                          (a.wnext = n),
                          (a.whave = a.wsize))
                        : ((a.wnext += i),
                          a.wnext === a.wsize && (a.wnext = 0),
                          a.whave < a.wsize && (a.whave += i))),
                  0
                );
              }
              (t.inflateReset = d),
                (t.inflateReset2 = p),
                (t.inflateResetKeep = h),
                (t.inflateInit = function (e) {
                  return y(e, 15);
                }),
                (t.inflateInit2 = y),
                (t.inflate = function (e, t) {
                  var r,
                    c,
                    h,
                    d,
                    p,
                    y,
                    m,
                    w,
                    v,
                    x,
                    E,
                    _,
                    S,
                    A,
                    B,
                    k,
                    O,
                    T,
                    I,
                    R,
                    M,
                    P,
                    C,
                    U,
                    L = 0,
                    N = new o.Buf8(4),
                    j = [
                      16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14,
                      1, 15,
                    ];
                  if (
                    !e ||
                    !e.state ||
                    !e.output ||
                    (!e.input && 0 !== e.avail_in)
                  )
                    return -2;
                  12 === (r = e.state).mode && (r.mode = 13),
                    (p = e.next_out),
                    (h = e.output),
                    (m = e.avail_out),
                    (d = e.next_in),
                    (c = e.input),
                    (y = e.avail_in),
                    (w = r.hold),
                    (v = r.bits),
                    (x = y),
                    (E = m),
                    (P = 0);
                  e: for (;;)
                    switch (r.mode) {
                      case 1:
                        if (0 === r.wrap) {
                          r.mode = 13;
                          break;
                        }
                        for (; v < 16; ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        if (2 & r.wrap && 35615 === w) {
                          (r.check = 0),
                            (N[0] = 255 & w),
                            (N[1] = (w >>> 8) & 255),
                            (r.check = s(r.check, N, 2, 0)),
                            (w = 0),
                            (v = 0),
                            (r.mode = 2);
                          break;
                        }
                        if (
                          ((r.flags = 0),
                          r.head && (r.head.done = !1),
                          !(1 & r.wrap) || (((255 & w) << 8) + (w >> 8)) % 31)
                        ) {
                          (e.msg = "incorrect header check"), (r.mode = 30);
                          break;
                        }
                        if ((15 & w) != 8) {
                          (e.msg = "unknown compression method"), (r.mode = 30);
                          break;
                        }
                        if (
                          ((w >>>= 4),
                          (v -= 4),
                          (M = (15 & w) + 8),
                          0 === r.wbits)
                        )
                          r.wbits = M;
                        else if (M > r.wbits) {
                          (e.msg = "invalid window size"), (r.mode = 30);
                          break;
                        }
                        (r.dmax = 1 << M),
                          (e.adler = r.check = 1),
                          (r.mode = 512 & w ? 10 : 12),
                          (w = 0),
                          (v = 0);
                        break;
                      case 2:
                        for (; v < 16; ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        if (((r.flags = w), (255 & r.flags) != 8)) {
                          (e.msg = "unknown compression method"), (r.mode = 30);
                          break;
                        }
                        if (57344 & r.flags) {
                          (e.msg = "unknown header flags set"), (r.mode = 30);
                          break;
                        }
                        r.head && (r.head.text = (w >> 8) & 1),
                          512 & r.flags &&
                            ((N[0] = 255 & w),
                            (N[1] = (w >>> 8) & 255),
                            (r.check = s(r.check, N, 2, 0))),
                          (w = 0),
                          (v = 0),
                          (r.mode = 3);
                      case 3:
                        for (; v < 32; ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        r.head && (r.head.time = w),
                          512 & r.flags &&
                            ((N[0] = 255 & w),
                            (N[1] = (w >>> 8) & 255),
                            (N[2] = (w >>> 16) & 255),
                            (N[3] = (w >>> 24) & 255),
                            (r.check = s(r.check, N, 4, 0))),
                          (w = 0),
                          (v = 0),
                          (r.mode = 4);
                      case 4:
                        for (; v < 16; ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        r.head &&
                          ((r.head.xflags = 255 & w), (r.head.os = w >> 8)),
                          512 & r.flags &&
                            ((N[0] = 255 & w),
                            (N[1] = (w >>> 8) & 255),
                            (r.check = s(r.check, N, 2, 0))),
                          (w = 0),
                          (v = 0),
                          (r.mode = 5);
                      case 5:
                        if (1024 & r.flags) {
                          for (; v < 16; ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          (r.length = w),
                            r.head && (r.head.extra_len = w),
                            512 & r.flags &&
                              ((N[0] = 255 & w),
                              (N[1] = (w >>> 8) & 255),
                              (r.check = s(r.check, N, 2, 0))),
                            (w = 0),
                            (v = 0);
                        } else r.head && (r.head.extra = null);
                        r.mode = 6;
                      case 6:
                        if (
                          1024 & r.flags &&
                          ((_ = r.length) > y && (_ = y),
                          _ &&
                            (r.head &&
                              ((M = r.head.extra_len - r.length),
                              r.head.extra ||
                                (r.head.extra = Array(r.head.extra_len)),
                              o.arraySet(r.head.extra, c, d, _, M)),
                            512 & r.flags && (r.check = s(r.check, c, _, d)),
                            (y -= _),
                            (d += _),
                            (r.length -= _)),
                          r.length)
                        )
                          break e;
                        (r.length = 0), (r.mode = 7);
                      case 7:
                        if (2048 & r.flags) {
                          if (0 === y) break e;
                          _ = 0;
                          do
                            (M = c[d + _++]),
                              r.head &&
                                M &&
                                r.length < 65536 &&
                                (r.head.name += String.fromCharCode(M));
                          while (M && _ < y);
                          if (
                            (512 & r.flags && (r.check = s(r.check, c, _, d)),
                            (y -= _),
                            (d += _),
                            M)
                          )
                            break e;
                        } else r.head && (r.head.name = null);
                        (r.length = 0), (r.mode = 8);
                      case 8:
                        if (4096 & r.flags) {
                          if (0 === y) break e;
                          _ = 0;
                          do
                            (M = c[d + _++]),
                              r.head &&
                                M &&
                                r.length < 65536 &&
                                (r.head.comment += String.fromCharCode(M));
                          while (M && _ < y);
                          if (
                            (512 & r.flags && (r.check = s(r.check, c, _, d)),
                            (y -= _),
                            (d += _),
                            M)
                          )
                            break e;
                        } else r.head && (r.head.comment = null);
                        r.mode = 9;
                      case 9:
                        if (512 & r.flags) {
                          for (; v < 16; ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          if (w !== (65535 & r.check)) {
                            (e.msg = "header crc mismatch"), (r.mode = 30);
                            break;
                          }
                          (w = 0), (v = 0);
                        }
                        r.head &&
                          ((r.head.hcrc = (r.flags >> 9) & 1),
                          (r.head.done = !0)),
                          (e.adler = r.check = 0),
                          (r.mode = 12);
                        break;
                      case 10:
                        for (; v < 32; ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        (e.adler = r.check = u(w)),
                          (w = 0),
                          (v = 0),
                          (r.mode = 11);
                      case 11:
                        if (0 === r.havedict)
                          return (
                            (e.next_out = p),
                            (e.avail_out = m),
                            (e.next_in = d),
                            (e.avail_in = y),
                            (r.hold = w),
                            (r.bits = v),
                            2
                          );
                        (e.adler = r.check = 1), (r.mode = 12);
                      case 12:
                        if (5 === t || 6 === t) break e;
                      case 13:
                        if (r.last) {
                          (w >>>= 7 & v), (v -= 7 & v), (r.mode = 27);
                          break;
                        }
                        for (; v < 3; ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        switch (((r.last = 1 & w), (v -= 1), 3 & (w >>>= 1))) {
                          case 0:
                            r.mode = 14;
                            break;
                          case 1:
                            if (
                              ((function (e) {
                                if (g) {
                                  var t;
                                  for (
                                    n = new o.Buf32(512),
                                      i = new o.Buf32(32),
                                      t = 0;
                                    t < 144;

                                  )
                                    e.lens[t++] = 8;
                                  for (; t < 256; ) e.lens[t++] = 9;
                                  for (; t < 280; ) e.lens[t++] = 7;
                                  for (; t < 288; ) e.lens[t++] = 8;
                                  for (
                                    f(1, e.lens, 0, 288, n, 0, e.work, {
                                      bits: 9,
                                    }),
                                      t = 0;
                                    t < 32;

                                  )
                                    e.lens[t++] = 5;
                                  f(2, e.lens, 0, 32, i, 0, e.work, {
                                    bits: 5,
                                  }),
                                    (g = !1);
                                }
                                (e.lencode = n),
                                  (e.lenbits = 9),
                                  (e.distcode = i),
                                  (e.distbits = 5);
                              })(r),
                              (r.mode = 20),
                              6 === t)
                            ) {
                              (w >>>= 2), (v -= 2);
                              break e;
                            }
                            break;
                          case 2:
                            r.mode = 17;
                            break;
                          case 3:
                            (e.msg = "invalid block type"), (r.mode = 30);
                        }
                        (w >>>= 2), (v -= 2);
                        break;
                      case 14:
                        for (w >>>= 7 & v, v -= 7 & v; v < 32; ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        if ((65535 & w) != ((w >>> 16) ^ 65535)) {
                          (e.msg = "invalid stored block lengths"),
                            (r.mode = 30);
                          break;
                        }
                        if (
                          ((r.length = 65535 & w),
                          (w = 0),
                          (v = 0),
                          (r.mode = 15),
                          6 === t)
                        )
                          break e;
                      case 15:
                        r.mode = 16;
                      case 16:
                        if ((_ = r.length)) {
                          if ((_ > y && (_ = y), _ > m && (_ = m), 0 === _))
                            break e;
                          o.arraySet(h, c, d, _, p),
                            (y -= _),
                            (d += _),
                            (m -= _),
                            (p += _),
                            (r.length -= _);
                          break;
                        }
                        r.mode = 12;
                        break;
                      case 17:
                        for (; v < 14; ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        if (
                          ((r.nlen = (31 & w) + 257),
                          (v -= 5),
                          (r.ndist = (31 & (w >>>= 5)) + 1),
                          (v -= 5),
                          (r.ncode = (15 & (w >>>= 5)) + 4),
                          (w >>>= 4),
                          (v -= 4),
                          r.nlen > 286 || r.ndist > 30)
                        ) {
                          (e.msg = "too many length or distance symbols"),
                            (r.mode = 30);
                          break;
                        }
                        (r.have = 0), (r.mode = 18);
                      case 18:
                        for (; r.have < r.ncode; ) {
                          for (; v < 3; ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          (r.lens[j[r.have++]] = 7 & w), (w >>>= 3), (v -= 3);
                        }
                        for (; r.have < 19; ) r.lens[j[r.have++]] = 0;
                        if (
                          ((r.lencode = r.lendyn),
                          (r.lenbits = 7),
                          (C = { bits: r.lenbits }),
                          (P = f(0, r.lens, 0, 19, r.lencode, 0, r.work, C)),
                          (r.lenbits = C.bits),
                          P)
                        ) {
                          (e.msg = "invalid code lengths set"), (r.mode = 30);
                          break;
                        }
                        (r.have = 0), (r.mode = 19);
                      case 19:
                        for (; r.have < r.nlen + r.ndist; ) {
                          for (
                            ;
                            (B =
                              (L = r.lencode[w & ((1 << r.lenbits) - 1)]) >>>
                              24),
                              (k = (L >>> 16) & 255),
                              (O = 65535 & L),
                              !(B <= v);

                          ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          if (O < 16)
                            (w >>>= B), (v -= B), (r.lens[r.have++] = O);
                          else {
                            if (16 === O) {
                              for (U = B + 2; v < U; ) {
                                if (0 === y) break e;
                                y--, (w += c[d++] << v), (v += 8);
                              }
                              if (((w >>>= B), (v -= B), 0 === r.have)) {
                                (e.msg = "invalid bit length repeat"),
                                  (r.mode = 30);
                                break;
                              }
                              (M = r.lens[r.have - 1]),
                                (_ = 3 + (3 & w)),
                                (w >>>= 2),
                                (v -= 2);
                            } else if (17 === O) {
                              for (U = B + 3; v < U; ) {
                                if (0 === y) break e;
                                y--, (w += c[d++] << v), (v += 8);
                              }
                              (w >>>= B),
                                (v -= B),
                                (M = 0),
                                (_ = 3 + (7 & w)),
                                (w >>>= 3),
                                (v -= 3);
                            } else {
                              for (U = B + 7; v < U; ) {
                                if (0 === y) break e;
                                y--, (w += c[d++] << v), (v += 8);
                              }
                              (w >>>= B),
                                (v -= B),
                                (M = 0),
                                (_ = 11 + (127 & w)),
                                (w >>>= 7),
                                (v -= 7);
                            }
                            if (r.have + _ > r.nlen + r.ndist) {
                              (e.msg = "invalid bit length repeat"),
                                (r.mode = 30);
                              break;
                            }
                            for (; _--; ) r.lens[r.have++] = M;
                          }
                        }
                        if (30 === r.mode) break;
                        if (0 === r.lens[256]) {
                          (e.msg = "invalid code -- missing end-of-block"),
                            (r.mode = 30);
                          break;
                        }
                        if (
                          ((r.lenbits = 9),
                          (C = { bits: r.lenbits }),
                          (P = f(
                            1,
                            r.lens,
                            0,
                            r.nlen,
                            r.lencode,
                            0,
                            r.work,
                            C
                          )),
                          (r.lenbits = C.bits),
                          P)
                        ) {
                          (e.msg = "invalid literal/lengths set"),
                            (r.mode = 30);
                          break;
                        }
                        if (
                          ((r.distbits = 6),
                          (r.distcode = r.distdyn),
                          (C = { bits: r.distbits }),
                          (P = f(
                            2,
                            r.lens,
                            r.nlen,
                            r.ndist,
                            r.distcode,
                            0,
                            r.work,
                            C
                          )),
                          (r.distbits = C.bits),
                          P)
                        ) {
                          (e.msg = "invalid distances set"), (r.mode = 30);
                          break;
                        }
                        if (((r.mode = 20), 6 === t)) break e;
                      case 20:
                        r.mode = 21;
                      case 21:
                        if (y >= 6 && m >= 258) {
                          (e.next_out = p),
                            (e.avail_out = m),
                            (e.next_in = d),
                            (e.avail_in = y),
                            (r.hold = w),
                            (r.bits = v),
                            l(e, E),
                            (p = e.next_out),
                            (h = e.output),
                            (m = e.avail_out),
                            (d = e.next_in),
                            (c = e.input),
                            (y = e.avail_in),
                            (w = r.hold),
                            (v = r.bits),
                            12 === r.mode && (r.back = -1);
                          break;
                        }
                        for (
                          r.back = 0;
                          (B =
                            (L = r.lencode[w & ((1 << r.lenbits) - 1)]) >>> 24),
                            (k = (L >>> 16) & 255),
                            (O = 65535 & L),
                            !(B <= v);

                        ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        if (k && (240 & k) == 0) {
                          for (
                            T = B, I = k, R = O;
                            (B =
                              (L =
                                r.lencode[
                                  R + ((w & ((1 << (T + I)) - 1)) >> T)
                                ]) >>> 24),
                              (k = (L >>> 16) & 255),
                              (O = 65535 & L),
                              !(T + B <= v);

                          ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          (w >>>= T), (v -= T), (r.back += T);
                        }
                        if (
                          ((w >>>= B),
                          (v -= B),
                          (r.back += B),
                          (r.length = O),
                          0 === k)
                        ) {
                          r.mode = 26;
                          break;
                        }
                        if (32 & k) {
                          (r.back = -1), (r.mode = 12);
                          break;
                        }
                        if (64 & k) {
                          (e.msg = "invalid literal/length code"),
                            (r.mode = 30);
                          break;
                        }
                        (r.extra = 15 & k), (r.mode = 22);
                      case 22:
                        if (r.extra) {
                          for (U = r.extra; v < U; ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          (r.length += w & ((1 << r.extra) - 1)),
                            (w >>>= r.extra),
                            (v -= r.extra),
                            (r.back += r.extra);
                        }
                        (r.was = r.length), (r.mode = 23);
                      case 23:
                        for (
                          ;
                          (B =
                            (L = r.distcode[w & ((1 << r.distbits) - 1)]) >>>
                            24),
                            (k = (L >>> 16) & 255),
                            (O = 65535 & L),
                            !(B <= v);

                        ) {
                          if (0 === y) break e;
                          y--, (w += c[d++] << v), (v += 8);
                        }
                        if ((240 & k) == 0) {
                          for (
                            T = B, I = k, R = O;
                            (B =
                              (L =
                                r.distcode[
                                  R + ((w & ((1 << (T + I)) - 1)) >> T)
                                ]) >>> 24),
                              (k = (L >>> 16) & 255),
                              (O = 65535 & L),
                              !(T + B <= v);

                          ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          (w >>>= T), (v -= T), (r.back += T);
                        }
                        if (((w >>>= B), (v -= B), (r.back += B), 64 & k)) {
                          (e.msg = "invalid distance code"), (r.mode = 30);
                          break;
                        }
                        (r.offset = O), (r.extra = 15 & k), (r.mode = 24);
                      case 24:
                        if (r.extra) {
                          for (U = r.extra; v < U; ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          (r.offset += w & ((1 << r.extra) - 1)),
                            (w >>>= r.extra),
                            (v -= r.extra),
                            (r.back += r.extra);
                        }
                        if (r.offset > r.dmax) {
                          (e.msg = "invalid distance too far back"),
                            (r.mode = 30);
                          break;
                        }
                        r.mode = 25;
                      case 25:
                        if (0 === m) break e;
                        if (((_ = E - m), r.offset > _)) {
                          if ((_ = r.offset - _) > r.whave && r.sane) {
                            (e.msg = "invalid distance too far back"),
                              (r.mode = 30);
                            break;
                          }
                          _ > r.wnext
                            ? ((_ -= r.wnext), (S = r.wsize - _))
                            : (S = r.wnext - _),
                            _ > r.length && (_ = r.length),
                            (A = r.window);
                        } else (A = h), (S = p - r.offset), (_ = r.length);
                        _ > m && (_ = m), (m -= _), (r.length -= _);
                        do h[p++] = A[S++];
                        while (--_);
                        0 === r.length && (r.mode = 21);
                        break;
                      case 26:
                        if (0 === m) break e;
                        (h[p++] = r.length), m--, (r.mode = 21);
                        break;
                      case 27:
                        if (r.wrap) {
                          for (; v < 32; ) {
                            if (0 === y) break e;
                            y--, (w |= c[d++] << v), (v += 8);
                          }
                          if (
                            ((E -= m),
                            (e.total_out += E),
                            (r.total += E),
                            E &&
                              (e.adler = r.check =
                                r.flags
                                  ? s(r.check, h, E, p - E)
                                  : a(r.check, h, E, p - E)),
                            (E = m),
                            (r.flags ? w : u(w)) !== r.check)
                          ) {
                            (e.msg = "incorrect data check"), (r.mode = 30);
                            break;
                          }
                          (w = 0), (v = 0);
                        }
                        r.mode = 28;
                      case 28:
                        if (r.wrap && r.flags) {
                          for (; v < 32; ) {
                            if (0 === y) break e;
                            y--, (w += c[d++] << v), (v += 8);
                          }
                          if (w !== (0xffffffff & r.total)) {
                            (e.msg = "incorrect length check"), (r.mode = 30);
                            break;
                          }
                          (w = 0), (v = 0);
                        }
                        r.mode = 29;
                      case 29:
                        P = 1;
                        break e;
                      case 30:
                        P = -3;
                        break e;
                      case 31:
                        return -4;
                      default:
                        return -2;
                    }
                  return ((e.next_out = p),
                  (e.avail_out = m),
                  (e.next_in = d),
                  (e.avail_in = y),
                  (r.hold = w),
                  (r.bits = v),
                  (r.wsize ||
                    (E !== e.avail_out &&
                      r.mode < 30 &&
                      (r.mode < 27 || 4 !== t))) &&
                    b(e, e.output, e.next_out, E - e.avail_out))
                    ? ((r.mode = 31), -4)
                    : ((x -= e.avail_in),
                      (E -= e.avail_out),
                      (e.total_in += x),
                      (e.total_out += E),
                      (r.total += E),
                      r.wrap &&
                        E &&
                        (e.adler = r.check =
                          r.flags
                            ? s(r.check, h, E, e.next_out - E)
                            : a(r.check, h, E, e.next_out - E)),
                      (e.data_type =
                        r.bits +
                        64 * !!r.last +
                        128 * (12 === r.mode) +
                        256 * (20 === r.mode || 15 === r.mode)),
                      ((0 === x && 0 === E) || 4 === t) && 0 === P && (P = -5),
                      P);
                }),
                (t.inflateEnd = function (e) {
                  if (!e || !e.state) return -2;
                  var t = e.state;
                  return t.window && (t.window = null), (e.state = null), 0;
                }),
                (t.inflateGetHeader = function (e, t) {
                  var r;
                  return e && e.state && (2 & (r = e.state).wrap) != 0
                    ? ((r.head = t), (t.done = !1), 0)
                    : -2;
                }),
                (t.inflateSetDictionary = function (e, t) {
                  var r,
                    n,
                    i = t.length;
                  return e &&
                    e.state &&
                    (0 === (r = e.state).wrap || 11 === r.mode)
                    ? 11 === r.mode && a(1, t, i, 0) !== r.check
                      ? -3
                      : b(e, t, i, i)
                      ? ((r.mode = 31), -4)
                      : ((r.havedict = 1), 0)
                    : -2;
                }),
                (t.inflateInfo = "pako inflate (from Nodeca project)");
            },
            19: function (e, t, r) {
              var n = r(380),
                i = [
                  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35,
                  43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
                ],
                o = [
                  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18,
                  18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72,
                  78,
                ],
                a = [
                  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
                  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193,
                  12289, 16385, 24577, 0, 0,
                ],
                s = [
                  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22,
                  22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29,
                  64, 64,
                ];
              e.exports = function (e, t, r, l, f, u, c, h) {
                var d,
                  p,
                  y,
                  g,
                  b,
                  m,
                  w,
                  v,
                  x,
                  E = h.bits,
                  _ = 0,
                  S = 0,
                  A = 0,
                  B = 0,
                  k = 0,
                  O = 0,
                  T = 0,
                  I = 0,
                  R = 0,
                  M = 0,
                  P = null,
                  C = 0,
                  U = new n.Buf16(16),
                  L = new n.Buf16(16),
                  N = null,
                  j = 0;
                for (_ = 0; _ <= 15; _++) U[_] = 0;
                for (S = 0; S < l; S++) U[t[r + S]]++;
                for (B = 15, k = E; B >= 1 && 0 === U[B]; B--);
                if ((k > B && (k = B), 0 === B))
                  return (
                    (f[u++] = 0x1400000), (f[u++] = 0x1400000), (h.bits = 1), 0
                  );
                for (A = 1; A < B && 0 === U[A]; A++);
                for (k < A && (k = A), I = 1, _ = 1; _ <= 15; _++)
                  if (((I <<= 1), (I -= U[_]) < 0)) return -1;
                if (I > 0 && (0 === e || 1 !== B)) return -1;
                for (_ = 1, L[1] = 0; _ < 15; _++) L[_ + 1] = L[_] + U[_];
                for (S = 0; S < l; S++)
                  0 !== t[r + S] && (c[L[t[r + S]]++] = S);
                if (
                  (0 === e
                    ? ((P = N = c), (m = 19))
                    : 1 === e
                    ? ((P = i), (C -= 257), (N = o), (j -= 257), (m = 256))
                    : ((P = a), (N = s), (m = -1)),
                  (M = 0),
                  (S = 0),
                  (_ = A),
                  (b = u),
                  (O = k),
                  (T = 0),
                  (y = -1),
                  (g = (R = 1 << k) - 1),
                  (1 === e && R > 852) || (2 === e && R > 592))
                )
                  return 1;
                for (;;) {
                  (w = _ - T),
                    c[S] < m
                      ? ((v = 0), (x = c[S]))
                      : c[S] > m
                      ? ((v = N[j + c[S]]), (x = P[C + c[S]]))
                      : ((v = 96), (x = 0)),
                    (d = 1 << (_ - T)),
                    (A = p = 1 << O);
                  do f[b + (M >> T) + (p -= d)] = (w << 24) | (v << 16) | x | 0;
                  while (0 !== p);
                  for (d = 1 << (_ - 1); M & d; ) d >>= 1;
                  if (
                    (0 !== d ? ((M &= d - 1), (M += d)) : (M = 0),
                    S++,
                    0 == --U[_])
                  ) {
                    if (_ === B) break;
                    _ = t[r + c[S]];
                  }
                  if (_ > k && (M & g) !== y) {
                    for (
                      0 === T && (T = k), b += A, I = 1 << (O = _ - T);
                      O + T < B && !((I -= U[O + T]) <= 0);

                    )
                      O++, (I <<= 1);
                    if (
                      ((R += 1 << O),
                      (1 === e && R > 852) || (2 === e && R > 592))
                    )
                      return 1;
                    f[(y = M & g)] = (k << 24) | (O << 16) | (b - u) | 0;
                  }
                }
                return (
                  0 !== M && (f[b + M] = ((_ - T) << 24) | 4194304),
                  (h.bits = k),
                  0
                );
              };
            },
            31: function (e) {
              e.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version",
              };
            },
            842: function (e, t, r) {
              var n,
                i,
                o,
                a = r(380);
              function s(e) {
                for (var t = e.length; --t >= 0; ) e[t] = 0;
              }
              var l = 573,
                f = [
                  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4,
                  4, 4, 4, 5, 5, 5, 5, 0,
                ],
                u = [
                  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9,
                  9, 10, 10, 11, 11, 12, 12, 13, 13,
                ],
                c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                h = [
                  16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                  15,
                ],
                d = Array(576);
              s(d);
              var p = Array(60);
              s(p);
              var y = Array(512);
              s(y);
              var g = Array(256);
              s(g);
              var b = Array(29);
              s(b);
              var m = Array(30);
              function w(e, t, r, n, i) {
                (this.static_tree = e),
                  (this.extra_bits = t),
                  (this.extra_base = r),
                  (this.elems = n),
                  (this.max_length = i),
                  (this.has_stree = e && e.length);
              }
              function v(e, t) {
                (this.dyn_tree = e), (this.max_code = 0), (this.stat_desc = t);
              }
              function x(e) {
                return e < 256 ? y[e] : y[256 + (e >>> 7)];
              }
              function E(e, t) {
                (e.pending_buf[e.pending++] = 255 & t),
                  (e.pending_buf[e.pending++] = (t >>> 8) & 255);
              }
              function _(e, t, r) {
                e.bi_valid > 16 - r
                  ? ((e.bi_buf |= (t << e.bi_valid) & 65535),
                    E(e, e.bi_buf),
                    (e.bi_buf = t >> (16 - e.bi_valid)),
                    (e.bi_valid += r - 16))
                  : ((e.bi_buf |= (t << e.bi_valid) & 65535),
                    (e.bi_valid += r));
              }
              function S(e, t, r) {
                _(e, r[2 * t], r[2 * t + 1]);
              }
              function A(e, t) {
                var r = 0;
                do (r |= 1 & e), (e >>>= 1), (r <<= 1);
                while (--t > 0);
                return r >>> 1;
              }
              function B(e, t, r) {
                var n,
                  i,
                  o = Array(16),
                  a = 0;
                for (n = 1; n <= 15; n++) o[n] = a = (a + r[n - 1]) << 1;
                for (i = 0; i <= t; i++) {
                  var s = e[2 * i + 1];
                  0 !== s && (e[2 * i] = A(o[s]++, s));
                }
              }
              function k(e) {
                var t;
                for (t = 0; t < 286; t++) e.dyn_ltree[2 * t] = 0;
                for (t = 0; t < 30; t++) e.dyn_dtree[2 * t] = 0;
                for (t = 0; t < 19; t++) e.bl_tree[2 * t] = 0;
                (e.dyn_ltree[512] = 1),
                  (e.opt_len = e.static_len = 0),
                  (e.last_lit = e.matches = 0);
              }
              function O(e) {
                e.bi_valid > 8
                  ? E(e, e.bi_buf)
                  : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf),
                  (e.bi_buf = 0),
                  (e.bi_valid = 0);
              }
              function T(e, t, r, n) {
                var i = 2 * t,
                  o = 2 * r;
                return e[i] < e[o] || (e[i] === e[o] && n[t] <= n[r]);
              }
              function I(e, t, r) {
                for (
                  var n = e.heap[r], i = r << 1;
                  i <= e.heap_len &&
                  (i < e.heap_len &&
                    T(t, e.heap[i + 1], e.heap[i], e.depth) &&
                    i++,
                  !T(t, n, e.heap[i], e.depth));

                )
                  (e.heap[r] = e.heap[i]), (r = i), (i <<= 1);
                e.heap[r] = n;
              }
              function R(e, t, r) {
                var n,
                  i,
                  o,
                  a,
                  s = 0;
                if (0 !== e.last_lit)
                  do
                    (n =
                      (e.pending_buf[e.d_buf + 2 * s] << 8) |
                      e.pending_buf[e.d_buf + 2 * s + 1]),
                      (i = e.pending_buf[e.l_buf + s]),
                      s++,
                      0 === n
                        ? S(e, i, t)
                        : (S(e, (o = g[i]) + 256 + 1, t),
                          0 !== (a = f[o]) && _(e, (i -= b[o]), a),
                          S(e, (o = x(--n)), r),
                          0 !== (a = u[o]) && _(e, (n -= m[o]), a));
                  while (s < e.last_lit);
                S(e, 256, t);
              }
              function M(e, t) {
                var r,
                  n,
                  i,
                  o = t.dyn_tree,
                  a = t.stat_desc.static_tree,
                  s = t.stat_desc.has_stree,
                  f = t.stat_desc.elems,
                  u = -1;
                for (r = 0, e.heap_len = 0, e.heap_max = l; r < f; r++)
                  0 !== o[2 * r]
                    ? ((e.heap[++e.heap_len] = u = r), (e.depth[r] = 0))
                    : (o[2 * r + 1] = 0);
                for (; e.heap_len < 2; )
                  (o[2 * (i = e.heap[++e.heap_len] = u < 2 ? ++u : 0)] = 1),
                    (e.depth[i] = 0),
                    e.opt_len--,
                    s && (e.static_len -= a[2 * i + 1]);
                for (t.max_code = u, r = e.heap_len >> 1; r >= 1; r--)
                  I(e, o, r);
                i = f;
                do
                  (r = e.heap[1]),
                    (e.heap[1] = e.heap[e.heap_len--]),
                    I(e, o, 1),
                    (n = e.heap[1]),
                    (e.heap[--e.heap_max] = r),
                    (e.heap[--e.heap_max] = n),
                    (o[2 * i] = o[2 * r] + o[2 * n]),
                    (e.depth[i] =
                      (e.depth[r] >= e.depth[n] ? e.depth[r] : e.depth[n]) + 1),
                    (o[2 * r + 1] = o[2 * n + 1] = i),
                    (e.heap[1] = i++),
                    I(e, o, 1);
                while (e.heap_len >= 2);
                (e.heap[--e.heap_max] = e.heap[1]),
                  (function (e, t) {
                    var r,
                      n,
                      i,
                      o,
                      a,
                      s,
                      f = t.dyn_tree,
                      u = t.max_code,
                      c = t.stat_desc.static_tree,
                      h = t.stat_desc.has_stree,
                      d = t.stat_desc.extra_bits,
                      p = t.stat_desc.extra_base,
                      y = t.stat_desc.max_length,
                      g = 0;
                    for (o = 0; o <= 15; o++) e.bl_count[o] = 0;
                    for (
                      f[2 * e.heap[e.heap_max] + 1] = 0, r = e.heap_max + 1;
                      r < l;
                      r++
                    )
                      (o = f[2 * f[2 * (n = e.heap[r]) + 1] + 1] + 1) > y &&
                        ((o = y), g++),
                        (f[2 * n + 1] = o),
                        !(n > u) &&
                          (e.bl_count[o]++,
                          (a = 0),
                          n >= p && (a = d[n - p]),
                          (s = f[2 * n]),
                          (e.opt_len += s * (o + a)),
                          h && (e.static_len += s * (c[2 * n + 1] + a)));
                    if (0 !== g) {
                      do {
                        for (o = y - 1; 0 === e.bl_count[o]; ) o--;
                        e.bl_count[o]--,
                          (e.bl_count[o + 1] += 2),
                          e.bl_count[y]--,
                          (g -= 2);
                      } while (g > 0);
                      for (o = y; 0 !== o; o--)
                        for (n = e.bl_count[o]; 0 !== n; )
                          !((i = e.heap[--r]) > u) &&
                            (f[2 * i + 1] !== o &&
                              ((e.opt_len += (o - f[2 * i + 1]) * f[2 * i]),
                              (f[2 * i + 1] = o)),
                            n--);
                    }
                  })(e, t),
                  B(o, u, e.bl_count);
              }
              function P(e, t, r) {
                var n,
                  i,
                  o = -1,
                  a = t[1],
                  s = 0,
                  l = 7,
                  f = 4;
                for (
                  0 === a && ((l = 138), (f = 3)),
                    t[(r + 1) * 2 + 1] = 65535,
                    n = 0;
                  n <= r;
                  n++
                )
                  (i = a),
                    (a = t[(n + 1) * 2 + 1]),
                    (!(++s < l) || i !== a) &&
                      (s < f
                        ? (e.bl_tree[2 * i] += s)
                        : 0 !== i
                        ? (i !== o && e.bl_tree[2 * i]++, e.bl_tree[32]++)
                        : s <= 10
                        ? e.bl_tree[34]++
                        : e.bl_tree[36]++,
                      (s = 0),
                      (o = i),
                      0 === a
                        ? ((l = 138), (f = 3))
                        : i === a
                        ? ((l = 6), (f = 3))
                        : ((l = 7), (f = 4)));
              }
              function C(e, t, r) {
                var n,
                  i,
                  o = -1,
                  a = t[1],
                  s = 0,
                  l = 7,
                  f = 4;
                for (0 === a && ((l = 138), (f = 3)), n = 0; n <= r; n++)
                  if (
                    ((i = a), (a = t[(n + 1) * 2 + 1]), !(++s < l) || i !== a)
                  ) {
                    if (s < f)
                      do S(e, i, e.bl_tree);
                      while (0 != --s);
                    else
                      0 !== i
                        ? (i !== o && (S(e, i, e.bl_tree), s--),
                          S(e, 16, e.bl_tree),
                          _(e, s - 3, 2))
                        : s <= 10
                        ? (S(e, 17, e.bl_tree), _(e, s - 3, 3))
                        : (S(e, 18, e.bl_tree), _(e, s - 11, 7));
                    (s = 0),
                      (o = i),
                      0 === a
                        ? ((l = 138), (f = 3))
                        : i === a
                        ? ((l = 6), (f = 3))
                        : ((l = 7), (f = 4));
                  }
              }
              s(m);
              var U = !1;
              function L(e, t, r, n) {
                _(e, 0 + +!!n, 3),
                  O(e),
                  E(e, r),
                  E(e, ~r),
                  a.arraySet(e.pending_buf, e.window, t, r, e.pending),
                  (e.pending += r);
              }
              (t._tr_init = function (e) {
                U ||
                  ((function () {
                    var e,
                      t,
                      r,
                      a,
                      s,
                      l = Array(16);
                    for (a = 0, r = 0; a < 28; a++)
                      for (e = 0, b[a] = r; e < 1 << f[a]; e++) g[r++] = a;
                    for (g[r - 1] = a, s = 0, a = 0; a < 16; a++)
                      for (e = 0, m[a] = s; e < 1 << u[a]; e++) y[s++] = a;
                    for (s >>= 7; a < 30; a++)
                      for (e = 0, m[a] = s << 7; e < 1 << (u[a] - 7); e++)
                        y[256 + s++] = a;
                    for (t = 0; t <= 15; t++) l[t] = 0;
                    for (e = 0; e <= 143; ) (d[2 * e + 1] = 8), e++, l[8]++;
                    for (; e <= 255; ) (d[2 * e + 1] = 9), e++, l[9]++;
                    for (; e <= 279; ) (d[2 * e + 1] = 7), e++, l[7]++;
                    for (; e <= 287; ) (d[2 * e + 1] = 8), e++, l[8]++;
                    for (B(d, 287, l), e = 0; e < 30; e++)
                      (p[2 * e + 1] = 5), (p[2 * e] = A(e, 5));
                    (n = new w(d, f, 257, 286, 15)),
                      (i = new w(p, u, 0, 30, 15)),
                      (o = new w([], c, 0, 19, 7));
                  })(),
                  (U = !0)),
                  (e.l_desc = new v(e.dyn_ltree, n)),
                  (e.d_desc = new v(e.dyn_dtree, i)),
                  (e.bl_desc = new v(e.bl_tree, o)),
                  (e.bi_buf = 0),
                  (e.bi_valid = 0),
                  k(e);
              }),
                (t._tr_stored_block = L),
                (t._tr_flush_block = function (e, t, r, n) {
                  var i,
                    o,
                    a = 0;
                  e.level > 0
                    ? (2 === e.strm.data_type &&
                        (e.strm.data_type = (function (e) {
                          var t,
                            r = 0xf3ffc07f;
                          for (t = 0; t <= 31; t++, r >>>= 1)
                            if (1 & r && 0 !== e.dyn_ltree[2 * t]) return 0;
                          if (
                            0 !== e.dyn_ltree[18] ||
                            0 !== e.dyn_ltree[20] ||
                            0 !== e.dyn_ltree[26]
                          )
                            return 1;
                          for (t = 32; t < 256; t++)
                            if (0 !== e.dyn_ltree[2 * t]) return 1;
                          return 0;
                        })(e)),
                      M(e, e.l_desc),
                      M(e, e.d_desc),
                      (a = (function (e) {
                        var t;
                        for (
                          P(e, e.dyn_ltree, e.l_desc.max_code),
                            P(e, e.dyn_dtree, e.d_desc.max_code),
                            M(e, e.bl_desc),
                            t = 18;
                          t >= 3 && 0 === e.bl_tree[2 * h[t] + 1];
                          t--
                        );
                        return (e.opt_len += 3 * (t + 1) + 5 + 5 + 4), t;
                      })(e)),
                      (i = (e.opt_len + 3 + 7) >>> 3),
                      (o = (e.static_len + 3 + 7) >>> 3) <= i && (i = o))
                    : (i = o = r + 5),
                    r + 4 <= i && -1 !== t
                      ? L(e, t, r, n)
                      : 4 === e.strategy || o === i
                      ? (_(e, 2 + +!!n, 3), R(e, d, p))
                      : (_(e, 4 + +!!n, 3),
                        (function (e, t, r, n) {
                          var i;
                          for (
                            _(e, t - 257, 5),
                              _(e, r - 1, 5),
                              _(e, n - 4, 4),
                              i = 0;
                            i < n;
                            i++
                          )
                            _(e, e.bl_tree[2 * h[i] + 1], 3);
                          C(e, e.dyn_ltree, t - 1), C(e, e.dyn_dtree, r - 1);
                        })(
                          e,
                          e.l_desc.max_code + 1,
                          e.d_desc.max_code + 1,
                          a + 1
                        ),
                        R(e, e.dyn_ltree, e.dyn_dtree)),
                    k(e),
                    n && O(e);
                }),
                (t._tr_tally = function (e, t, r) {
                  return (
                    (e.pending_buf[e.d_buf + 2 * e.last_lit] = (t >>> 8) & 255),
                    (e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t),
                    (e.pending_buf[e.l_buf + e.last_lit] = 255 & r),
                    e.last_lit++,
                    0 === t
                      ? e.dyn_ltree[2 * r]++
                      : (e.matches++,
                        t--,
                        e.dyn_ltree[(g[r] + 256 + 1) * 2]++,
                        e.dyn_dtree[2 * x(t)]++),
                    e.last_lit === e.lit_bufsize - 1
                  );
                }),
                (t._tr_align = function (e) {
                  _(e, 2, 3),
                    S(e, 256, d),
                    16 === e.bi_valid
                      ? (E(e, e.bi_buf), (e.bi_buf = 0), (e.bi_valid = 0))
                      : e.bi_valid >= 8 &&
                        ((e.pending_buf[e.pending++] = 255 & e.bi_buf),
                        (e.bi_buf >>= 8),
                        (e.bi_valid -= 8));
                });
            },
            562: function (e) {
              e.exports = function () {
                (this.input = null),
                  (this.next_in = 0),
                  (this.avail_in = 0),
                  (this.total_in = 0),
                  (this.output = null),
                  (this.next_out = 0),
                  (this.avail_out = 0),
                  (this.total_out = 0),
                  (this.msg = ""),
                  (this.state = null),
                  (this.data_type = 2),
                  (this.adler = 0);
              };
            },
            491: function (e) {
              e.exports = r(23065);
            },
            300: function (e) {
              e.exports = r(51642);
            },
            781: function (e) {
              e.exports = r(46994);
            },
            837: function (e) {
              e.exports = r(84864);
            },
          },
          o = {};
        function a(e) {
          var r = o[e];
          if (void 0 !== r) return r.exports;
          var n = (o[e] = { exports: {} }),
            i = !0;
          try {
            t[e](n, n.exports, a), (i = !1);
          } finally {
            i && delete o[e];
          }
          return n.exports;
        }
        (a.ab = "//"), (e.exports = a(23));
      })();
    },
    89395: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getHash = a),
        (t.createCurve = function (e, t) {
          let r = (t) => (0, o.weierstrass)({ ...e, ...a(t) });
          return Object.freeze({ ...r(t), create: r });
        });
      let n = r(49130),
        i = r(15906),
        o = r(64976);
      function a(e) {
        return {
          hash: e,
          hmac: (t, ...r) => (0, n.hmac)(e, t, (0, i.concatBytes)(...r)),
          randomBytes: i.randomBytes,
        };
      }
    },
    91262: (e, t, r) => {
      "use strict";
      var n = r(51642).Buffer;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.numberToBuffer =
          t.normalize =
          t.recoverPublicKey =
          t.concatSig =
          t.legacyToBuffer =
          t.isNullish =
          t.padWithZeroes =
            void 0);
      let i = r(43118),
        o = r(67551);
      function a(e, t) {
        if ("" !== e && !/^[a-f0-9]+$/iu.test(e))
          throw Error(`Expected an unprefixed hex string. Received: ${e}`);
        if (t < 0)
          throw Error(
            `Expected a non-negative integer target length. Received: ${t}`
          );
        return String.prototype.padStart.call(e, t, "0");
      }
      function s(e) {
        return null == e;
      }
      (t.padWithZeroes = a),
        (t.isNullish = s),
        (t.legacyToBuffer = function (e) {
          return "string" != typeof e || (0, o.isHexString)(e)
            ? (0, i.toBuffer)(e)
            : n.from(e);
        }),
        (t.concatSig = function (e, t, r) {
          let n = (0, i.fromSigned)(t),
            s = (0, i.fromSigned)(r),
            l = (0, i.bufferToInt)(e),
            f = a((0, i.toUnsigned)(n).toString("hex"), 64),
            u = a((0, i.toUnsigned)(s).toString("hex"), 64),
            c = (0, o.stripHexPrefix)((0, o.intToHex)(l));
          return (0, i.addHexPrefix)(f.concat(u, c));
        }),
        (t.recoverPublicKey = function (e, t) {
          let r = (0, i.fromRpcSig)(t);
          return (0, i.ecrecover)(e, r.v, r.r, r.s);
        }),
        (t.normalize = function (e) {
          if (!s(e)) {
            if ("number" == typeof e) {
              if (e < 0) return "0x";
              let t = (0, i.toBuffer)(e);
              e = (0, i.bufferToHex)(t);
            }
            if ("string" != typeof e) {
              let t =
                "eth-sig-util.normalize() requires hex string or integer input.";
              throw Error((t += ` received ${typeof e}: ${e}`));
            }
            return (0, i.addHexPrefix)(e.toLowerCase());
          }
        }),
        (t.numberToBuffer = function (e) {
          let t = e.toString(16),
            r = t.length % 2 ? "0" : "";
          return n.from(r + t, "hex");
        });
    },
    91408: (e, t, r) => {
      var n = r(16953);
      e.exports = function (e) {
        return "string" != typeof e ? e : n(e) ? e.slice(2) : e;
      };
    },
    93263: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.MAX_WITHDRAWALS_PER_PAYLOAD =
          t.RLP_EMPTY_STRING =
          t.KECCAK256_RLP =
          t.KECCAK256_RLP_S =
          t.KECCAK256_RLP_ARRAY =
          t.KECCAK256_RLP_ARRAY_S =
          t.KECCAK256_NULL =
          t.KECCAK256_NULL_S =
          t.TWO_POW256 =
          t.SECP256K1_ORDER_DIV_2 =
          t.SECP256K1_ORDER =
          t.MAX_INTEGER_BIGINT =
          t.MAX_INTEGER =
          t.MAX_UINT64 =
            void 0);
      let n = r(51642),
        i = r(88680);
      (t.MAX_UINT64 = BigInt("0xffffffffffffffff")),
        (t.MAX_INTEGER = BigInt(
          "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
        )),
        (t.MAX_INTEGER_BIGINT = BigInt(
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        )),
        (t.SECP256K1_ORDER = i.secp256k1.CURVE.n),
        (t.SECP256K1_ORDER_DIV_2 = i.secp256k1.CURVE.n / BigInt(2)),
        (t.TWO_POW256 = BigInt(
          "0x10000000000000000000000000000000000000000000000000000000000000000"
        )),
        (t.KECCAK256_NULL_S =
          "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"),
        (t.KECCAK256_NULL = n.Buffer.from(t.KECCAK256_NULL_S, "hex")),
        (t.KECCAK256_RLP_ARRAY_S =
          "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"),
        (t.KECCAK256_RLP_ARRAY = n.Buffer.from(t.KECCAK256_RLP_ARRAY_S, "hex")),
        (t.KECCAK256_RLP_S =
          "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"),
        (t.KECCAK256_RLP = n.Buffer.from(t.KECCAK256_RLP_S, "hex")),
        (t.RLP_EMPTY_STRING = n.Buffer.from([128])),
        (t.MAX_WITHDRAWALS_PER_PAYLOAD = 16);
    },
    95293: (e, t, r) => {
      "use strict";
      var n;
      function i(e) {
        return (
          e instanceof Uint8Array ||
          (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
        );
      }
      function o(e, t) {
        return (
          !!Array.isArray(t) &&
          (0 === t.length ||
            (e
              ? t.every((e) => "string" == typeof e)
              : t.every((e) => Number.isSafeInteger(e))))
        );
      }
      function a(e) {
        if ("function" != typeof e) throw Error("function expected");
        return !0;
      }
      function s(e, t) {
        if ("string" != typeof t) throw Error(`${e}: string expected`);
        return !0;
      }
      function l(e) {
        if (!Number.isSafeInteger(e)) throw Error(`invalid integer: ${e}`);
      }
      function f(e) {
        if (!Array.isArray(e)) throw Error("array expected");
      }
      function u(e, t) {
        if (!o(!0, t)) throw Error(`${e}: array of strings expected`);
      }
      function c(e, t) {
        if (!o(!1, t)) throw Error(`${e}: array of numbers expected`);
      }
      function h(...e) {
        let t = (e) => e,
          r = (e, t) => (r) => e(t(r));
        return {
          encode: e.map((e) => e.encode).reduceRight(r, t),
          decode: e.map((e) => e.decode).reduce(r, t),
        };
      }
      function d(e) {
        let t = "string" == typeof e ? e.split("") : e,
          r = t.length;
        u("alphabet", t);
        let n = new Map(t.map((e, t) => [e, t]));
        return {
          encode: (n) => (
            f(n),
            n.map((n) => {
              if (!Number.isSafeInteger(n) || n < 0 || n >= r)
                throw Error(
                  `alphabet.encode: digit index outside alphabet "${n}". Allowed: ${e}`
                );
              return t[n];
            })
          ),
          decode: (t) => (
            f(t),
            t.map((t) => {
              s("alphabet.decode", t);
              let r = n.get(t);
              if (void 0 === r)
                throw Error(`Unknown letter: "${t}". Allowed: ${e}`);
              return r;
            })
          ),
        };
      }
      function p(e = "") {
        return (
          s("join", e),
          {
            encode: (t) => (u("join.decode", t), t.join(e)),
            decode: (t) => (s("join.decode", t), t.split(e)),
          }
        );
      }
      function y(e, t, r) {
        if (t < 2)
          throw Error(
            `convertRadix: invalid from=${t}, base cannot be less than 2`
          );
        if (r < 2)
          throw Error(
            `convertRadix: invalid to=${r}, base cannot be less than 2`
          );
        if ((f(e), !e.length)) return [];
        let n = 0,
          i = [],
          o = Array.from(e, (e) => {
            if ((l(e), e < 0 || e >= t)) throw Error(`invalid integer: ${e}`);
            return e;
          }),
          a = o.length;
        for (;;) {
          let e = 0,
            s = !0;
          for (let i = n; i < a; i++) {
            let a = o[i],
              l = t * e,
              f = l + a;
            if (!Number.isSafeInteger(f) || l / t !== e || f - a !== l)
              throw Error("convertRadix: carry overflow");
            let u = f / r;
            e = f % r;
            let c = Math.floor(u);
            if (((o[i] = c), !Number.isSafeInteger(c) || c * r + e !== f))
              throw Error("convertRadix: carry overflow");
            s && (c ? (s = !1) : (n = i));
          }
          if ((i.push(e), s)) break;
        }
        for (let t = 0; t < e.length - 1 && 0 === e[t]; t++) i.push(0);
        return i.reverse();
      }
      r.d(t, { I: () => I, p2: () => R, rg: () => S, uh: () => M });
      let g = (e, t) => (0 === t ? e : g(t, e % t)),
        b = (e, t) => e + (t - g(e, t)),
        m = (() => {
          let e = [];
          for (let t = 0; t < 40; t++) e.push(2 ** t);
          return e;
        })();
      function w(e, t, r, n) {
        if ((f(e), t <= 0 || t > 32))
          throw Error(`convertRadix2: wrong from=${t}`);
        if (r <= 0 || r > 32) throw Error(`convertRadix2: wrong to=${r}`);
        if (b(t, r) > 32)
          throw Error(
            `convertRadix2: carry overflow from=${t} to=${r} carryBits=${b(
              t,
              r
            )}`
          );
        let i = 0,
          o = 0,
          a = m[t],
          s = m[r] - 1,
          u = [];
        for (let n of e) {
          if ((l(n), n >= a))
            throw Error(`convertRadix2: invalid data word=${n} from=${t}`);
          if (((i = (i << t) | n), o + t > 32))
            throw Error(`convertRadix2: carry overflow pos=${o} from=${t}`);
          for (o += t; o >= r; o -= r) u.push(((i >> (o - r)) & s) >>> 0);
          let e = m[o];
          if (void 0 === e) throw Error("invalid carry");
          i &= e - 1;
        }
        if (((i = (i << (r - o)) & s), !n && o >= t))
          throw Error("Excess padding");
        if (!n && i > 0) throw Error(`Non-zero padding: ${i}`);
        return n && o > 0 && u.push(i >>> 0), u;
      }
      function v(e, t = !1) {
        if ((l(e), e <= 0 || e > 32))
          throw Error("radix2: bits should be in (0..32]");
        if (b(8, e) > 32 || b(e, 8) > 32) throw Error("radix2: carry overflow");
        return {
          encode: (r) => {
            if (!i(r)) throw Error("radix2.encode input should be Uint8Array");
            return w(Array.from(r), 8, e, !t);
          },
          decode: (r) => (
            c("radix2.decode", r), Uint8Array.from(w(r, e, 8, t))
          ),
        };
      }
      function x(e) {
        return (
          a(e),
          function (...t) {
            try {
              return e.apply(null, t);
            } catch (e) {}
          }
        );
      }
      let E =
          "function" == typeof Uint8Array.from([]).toBase64 &&
          "function" == typeof Uint8Array.fromBase64,
        _ = h(
          ((n = 58),
          l(58),
          {
            encode: (e) => {
              if (!i(e)) throw Error("radix.encode input should be Uint8Array");
              return y(Array.from(e), 256, 58);
            },
            decode: (e) => (
              c("radix.decode", e), Uint8Array.from(y(e, 58, 256))
            ),
          }),
          d("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),
          p("")
        ),
        S = (e) =>
          h(
            (function (e, t) {
              return (
                l(4),
                a(t),
                {
                  encode(r) {
                    if (!i(r))
                      throw Error(
                        "checksum.encode: input should be Uint8Array"
                      );
                    let n = t(r).slice(0, 4),
                      o = new Uint8Array(r.length + e);
                    return o.set(r), o.set(n, r.length), o;
                  },
                  decode(r) {
                    if (!i(r))
                      throw Error(
                        "checksum.decode: input should be Uint8Array"
                      );
                    let n = r.slice(0, -e),
                      o = r.slice(-e),
                      a = t(n).slice(0, e);
                    for (let t = 0; t < e; t++)
                      if (a[t] !== o[t]) throw Error("Invalid checksum");
                    return n;
                  },
                }
              );
            })(4, (t) => e(e(t))),
            _
          ),
        A = h(d("qpzry9x8gf2tvdw0s3jn54khce6mua7l"), p("")),
        B = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];
      function k(e) {
        let t = e >> 25,
          r = (0x1ffffff & e) << 5;
        for (let e = 0; e < B.length; e++) ((t >> e) & 1) == 1 && (r ^= B[e]);
        return r;
      }
      function O(e, t, r = 1) {
        let n = e.length,
          i = 1;
        for (let t = 0; t < n; t++) {
          let r = e.charCodeAt(t);
          if (r < 33 || r > 126) throw Error(`Invalid prefix (${e})`);
          i = k(i) ^ (r >> 5);
        }
        i = k(i);
        for (let t = 0; t < n; t++) i = k(i) ^ (31 & e.charCodeAt(t));
        for (let e of t) i = k(i) ^ e;
        for (let e = 0; e < 6; e++) i = k(i);
        return (i ^= r), A.encode(w([i % m[30]], 30, 5, !1));
      }
      function T(e) {
        let t = "bech32" === e ? 1 : 0x2bc830a3,
          r = v(5),
          n = r.decode,
          o = r.encode,
          a = x(n);
        function l(e, r, n = 90) {
          s("bech32.encode prefix", e),
            i(r) && (r = Array.from(r)),
            c("bech32.encode", r);
          let o = e.length;
          if (0 === o) throw TypeError(`Invalid prefix length ${o}`);
          let a = o + 7 + r.length;
          if (!1 !== n && a > n)
            throw TypeError(`Length ${a} exceeds limit ${n}`);
          let f = e.toLowerCase(),
            u = O(f, r, t);
          return `${f}1${A.encode(r)}${u}`;
        }
        function f(e, r = 90) {
          s("bech32.decode input", e);
          let n = e.length;
          if (n < 8 || (!1 !== r && n > r))
            throw TypeError(
              `invalid string length: ${n} (${e}). Expected (8..${r})`
            );
          let i = e.toLowerCase();
          if (e !== i && e !== e.toUpperCase())
            throw Error("String must be lowercase or uppercase");
          let o = i.lastIndexOf("1");
          if (0 === o || -1 === o)
            throw Error(
              'Letter "1" must be present between prefix and data only'
            );
          let a = i.slice(0, o),
            l = i.slice(o + 1);
          if (l.length < 6)
            throw Error("Data must be at least 6 characters long");
          let u = A.decode(l).slice(0, -6),
            c = O(a, u, t);
          if (!l.endsWith(c))
            throw Error(`Invalid checksum in ${e}: expected "${c}"`);
          return { prefix: a, words: u };
        }
        let u = x(f);
        return {
          encode: l,
          decode: f,
          encodeFromBytes: function (e, t) {
            return l(e, o(t));
          },
          decodeToBytes: function (e) {
            let { prefix: t, words: r } = f(e, !1);
            return { prefix: t, words: r, bytes: n(r) };
          },
          decodeUnsafe: u,
          fromWords: n,
          fromWordsUnsafe: a,
          toWords: o,
        };
      }
      let I = T("bech32"),
        R = T("bech32m"),
        M =
          "function" == typeof Uint8Array.from([]).toHex &&
          "function" == typeof Uint8Array.fromHex
            ? {
                encode: (e) => (
                  (function (e, ...t) {
                    if (!i(e)) throw Error("Uint8Array expected");
                    if (t.length > 0 && !t.includes(e.length))
                      throw Error(
                        "Uint8Array expected of length " +
                          t +
                          ", got length=" +
                          e.length
                      );
                  })(e),
                  e.toHex()
                ),
                decode: (e) => (s("hex", e), Uint8Array.fromHex(e)),
              }
            : h(
                v(4),
                d("0123456789abcdef"),
                p(""),
                (function (e) {
                  return a(e), { encode: (e) => e, decode: (t) => e(t) };
                })((e) => {
                  if ("string" != typeof e || e.length % 2 != 0)
                    throw TypeError(
                      `hex.decode: expected string, got ${typeof e} with length ${
                        e.length
                      }`
                    );
                  return e.toLowerCase();
                })
              );
    },
    95669: (e, t, r) => {
      e.exports = r(97186);
    },
    96355: (e, t, r) => {
      "use strict";
      var n;
      function i(e) {
        if (!Number.isSafeInteger(e) || e < 0)
          throw Error("positive integer expected, got " + e);
      }
      function o(e, ...t) {
        if (
          !(
            e instanceof Uint8Array ||
            (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
          )
        )
          throw Error("Uint8Array expected");
        if (t.length > 0 && !t.includes(e.length))
          throw Error(
            "Uint8Array expected of length " + t + ", got length=" + e.length
          );
      }
      function a(e, t = !0) {
        if (e.destroyed) throw Error("Hash instance has been destroyed");
        if (t && e.finished)
          throw Error("Hash#digest() has already been called");
      }
      r.d(t, { c: () => tI });
      let s =
        "object" == typeof globalThis && "crypto" in globalThis
          ? globalThis.crypto
          : void 0;
      function l(e) {
        return new DataView(e.buffer, e.byteOffset, e.byteLength);
      }
      function f(e, t) {
        return (e << (32 - t)) | (e >>> t);
      }
      function u(e, t) {
        return (e << t) | ((e >>> (32 - t)) >>> 0);
      }
      let c =
          "function" == typeof Uint8Array.from([]).toHex &&
          "function" == typeof Uint8Array.fromHex,
        h = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        ),
        d = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
      function p(e) {
        return e >= d._0 && e <= d._9
          ? e - d._0
          : e >= d.A && e <= d.F
          ? e - (d.A - 10)
          : e >= d.a && e <= d.f
          ? e - (d.a - 10)
          : void 0;
      }
      function y(e) {
        if ("string" != typeof e)
          throw Error("utf8ToBytes expected string, got " + typeof e);
        return new Uint8Array(new TextEncoder().encode(e));
      }
      function g(e) {
        return "string" == typeof e && (e = y(e)), o(e), e;
      }
      function b(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          o(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      class m {
        clone() {
          return this._cloneInto();
        }
      }
      function w(e) {
        let t = (t) => e().update(g(t)).digest(),
          r = e();
        return (
          (t.outputLen = r.outputLen),
          (t.blockLen = r.blockLen),
          (t.create = () => e()),
          t
        );
      }
      function v(e = 32) {
        if (s && "function" == typeof s.getRandomValues)
          return s.getRandomValues(new Uint8Array(e));
        if (s && "function" == typeof s.randomBytes)
          return Uint8Array.from(s.randomBytes(e));
        throw Error("crypto.getRandomValues must be defined");
      }
      class x extends m {
        constructor(e, t) {
          super(),
            (this.finished = !1),
            (this.destroyed = !1),
            (function (e) {
              if ("function" != typeof e || "function" != typeof e.create)
                throw Error("Hash should be wrapped by utils.wrapConstructor");
              i(e.outputLen), i(e.blockLen);
            })(e);
          let r = g(t);
          if (
            ((this.iHash = e.create()), "function" != typeof this.iHash.update)
          )
            throw Error("Expected instance of class which extends utils.Hash");
          (this.blockLen = this.iHash.blockLen),
            (this.outputLen = this.iHash.outputLen);
          let n = this.blockLen,
            o = new Uint8Array(n);
          o.set(r.length > n ? e.create().update(r).digest() : r);
          for (let e = 0; e < o.length; e++) o[e] ^= 54;
          this.iHash.update(o), (this.oHash = e.create());
          for (let e = 0; e < o.length; e++) o[e] ^= 106;
          this.oHash.update(o), o.fill(0);
        }
        update(e) {
          return a(this), this.iHash.update(e), this;
        }
        digestInto(e) {
          a(this),
            o(e, this.outputLen),
            (this.finished = !0),
            this.iHash.digestInto(e),
            this.oHash.update(e),
            this.oHash.digestInto(e),
            this.destroy();
        }
        digest() {
          let e = new Uint8Array(this.oHash.outputLen);
          return this.digestInto(e), e;
        }
        _cloneInto(e) {
          e || (e = Object.create(Object.getPrototypeOf(this), {}));
          let {
            oHash: t,
            iHash: r,
            finished: n,
            destroyed: i,
            blockLen: o,
            outputLen: a,
          } = this;
          return (
            (e.finished = n),
            (e.destroyed = i),
            (e.blockLen = o),
            (e.outputLen = a),
            (e.oHash = t._cloneInto(e.oHash)),
            (e.iHash = r._cloneInto(e.iHash)),
            e
          );
        }
        destroy() {
          (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
        }
      }
      let E = (e, t, r) => new x(e, t).update(r).digest();
      E.create = (e, t) => new x(e, t);
      class _ extends m {
        constructor(e, t, r, n) {
          super(),
            (this.finished = !1),
            (this.length = 0),
            (this.pos = 0),
            (this.destroyed = !1),
            (this.blockLen = e),
            (this.outputLen = t),
            (this.padOffset = r),
            (this.isLE = n),
            (this.buffer = new Uint8Array(e)),
            (this.view = l(this.buffer));
        }
        update(e) {
          a(this);
          let { view: t, buffer: r, blockLen: n } = this,
            i = (e = g(e)).length;
          for (let o = 0; o < i; ) {
            let a = Math.min(n - this.pos, i - o);
            if (a === n) {
              let t = l(e);
              for (; n <= i - o; o += n) this.process(t, o);
              continue;
            }
            r.set(e.subarray(o, o + a), this.pos),
              (this.pos += a),
              (o += a),
              this.pos === n && (this.process(t, 0), (this.pos = 0));
          }
          return (this.length += e.length), this.roundClean(), this;
        }
        digestInto(e) {
          a(this),
            (function (e, t) {
              o(e);
              let r = t.outputLen;
              if (e.length < r)
                throw Error(
                  "digestInto() expects output buffer of length at least " + r
                );
            })(e, this),
            (this.finished = !0);
          let { buffer: t, view: r, blockLen: n, isLE: i } = this,
            { pos: s } = this;
          (t[s++] = 128),
            this.buffer.subarray(s).fill(0),
            this.padOffset > n - s && (this.process(r, 0), (s = 0));
          for (let e = s; e < n; e++) t[e] = 0;
          !(function (e, t, r, n) {
            if ("function" == typeof e.setBigUint64)
              return e.setBigUint64(t, r, n);
            let i = BigInt(32),
              o = BigInt(0xffffffff),
              a = Number((r >> i) & o),
              s = Number(r & o),
              l = 4 * !!n,
              f = 4 * !n;
            e.setUint32(t + l, a, n), e.setUint32(t + f, s, n);
          })(r, n - 8, BigInt(8 * this.length), i),
            this.process(r, 0);
          let f = l(e),
            u = this.outputLen;
          if (u % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
          let c = u / 4,
            h = this.get();
          if (c > h.length) throw Error("_sha2: outputLen bigger than state");
          for (let e = 0; e < c; e++) f.setUint32(4 * e, h[e], i);
        }
        digest() {
          let { buffer: e, outputLen: t } = this;
          this.digestInto(e);
          let r = e.slice(0, t);
          return this.destroy(), r;
        }
        _cloneInto(e) {
          e || (e = new this.constructor()), e.set(...this.get());
          let {
            blockLen: t,
            buffer: r,
            length: n,
            finished: i,
            destroyed: o,
            pos: a,
          } = this;
          return (
            (e.length = n),
            (e.pos = a),
            (e.finished = i),
            (e.destroyed = o),
            n % t && e.buffer.set(r),
            e
          );
        }
      }
      let S = new Uint8Array([
          7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
        ]),
        A = new Uint8Array(
          Array(16)
            .fill(0)
            .map((e, t) => t)
        ),
        B = A.map((e) => (9 * e + 5) % 16),
        k = [A],
        O = [B];
      for (let e = 0; e < 4; e++)
        for (let t of [k, O]) t.push(t[e].map((e) => S[e]));
      let T = [
          [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
          [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
          [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
          [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
          [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
        ].map((e) => new Uint8Array(e)),
        I = k.map((e, t) => e.map((e) => T[t][e])),
        R = O.map((e, t) => e.map((e) => T[t][e])),
        M = new Uint32Array([
          0, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,
        ]),
        P = new Uint32Array([
          0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0,
        ]);
      function C(e, t, r, n) {
        return 0 === e
          ? t ^ r ^ n
          : 1 === e
          ? (t & r) | (~t & n)
          : 2 === e
          ? (t | ~r) ^ n
          : 3 === e
          ? (t & n) | (r & ~n)
          : t ^ (r | ~n);
      }
      let U = new Uint32Array(16);
      class L extends _ {
        constructor() {
          super(64, 20, 8, !0),
            (this.h0 = 0x67452301),
            (this.h1 = -0x10325477),
            (this.h2 = -0x67452302),
            (this.h3 = 0x10325476),
            (this.h4 = -0x3c2d1e10);
        }
        get() {
          let { h0: e, h1: t, h2: r, h3: n, h4: i } = this;
          return [e, t, r, n, i];
        }
        set(e, t, r, n, i) {
          (this.h0 = 0 | e),
            (this.h1 = 0 | t),
            (this.h2 = 0 | r),
            (this.h3 = 0 | n),
            (this.h4 = 0 | i);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) U[r] = e.getUint32(t, !0);
          let r = 0 | this.h0,
            n = r,
            i = 0 | this.h1,
            o = i,
            a = 0 | this.h2,
            s = a,
            l = 0 | this.h3,
            f = l,
            c = 0 | this.h4,
            h = c;
          for (let e = 0; e < 5; e++) {
            let t = 4 - e,
              d = M[e],
              p = P[e],
              y = k[e],
              g = O[e],
              b = I[e],
              m = R[e];
            for (let t = 0; t < 16; t++) {
              let n = (u(r + C(e, i, a, l) + U[y[t]] + d, b[t]) + c) | 0;
              (r = c), (c = l), (l = 0 | u(a, 10)), (a = i), (i = n);
            }
            for (let e = 0; e < 16; e++) {
              let r = (u(n + C(t, o, s, f) + U[g[e]] + p, m[e]) + h) | 0;
              (n = h), (h = f), (f = 0 | u(s, 10)), (s = o), (o = r);
            }
          }
          this.set(
            (this.h1 + a + f) | 0,
            (this.h2 + l + h) | 0,
            (this.h3 + c + n) | 0,
            (this.h4 + r + o) | 0,
            (this.h0 + i + s) | 0
          );
        }
        roundClean() {
          U.fill(0);
        }
        destroy() {
          (this.destroyed = !0), this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
        }
      }
      let N = w(() => new L()),
        j = new Uint32Array([
          0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
          0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
          0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
          0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f,
          0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d,
          0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967,
          0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354,
          0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,
          0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585,
          0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
          0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee,
          0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb,
          0xbef9a3f7, 0xc67178f2,
        ]),
        H = new Uint32Array([
          0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f,
          0x9b05688c, 0x1f83d9ab, 0x5be0cd19,
        ]),
        D = new Uint32Array(64);
      class F extends _ {
        constructor(e = 32) {
          super(64, e, 8, !1),
            (this.A = 0 | H[0]),
            (this.B = 0 | H[1]),
            (this.C = 0 | H[2]),
            (this.D = 0 | H[3]),
            (this.E = 0 | H[4]),
            (this.F = 0 | H[5]),
            (this.G = 0 | H[6]),
            (this.H = 0 | H[7]);
        }
        get() {
          let { A: e, B: t, C: r, D: n, E: i, F: o, G: a, H: s } = this;
          return [e, t, r, n, i, o, a, s];
        }
        set(e, t, r, n, i, o, a, s) {
          (this.A = 0 | e),
            (this.B = 0 | t),
            (this.C = 0 | r),
            (this.D = 0 | n),
            (this.E = 0 | i),
            (this.F = 0 | o),
            (this.G = 0 | a),
            (this.H = 0 | s);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) D[r] = e.getUint32(t, !1);
          for (let e = 16; e < 64; e++) {
            let t = D[e - 15],
              r = D[e - 2],
              n = f(t, 7) ^ f(t, 18) ^ (t >>> 3),
              i = f(r, 17) ^ f(r, 19) ^ (r >>> 10);
            D[e] = (i + D[e - 7] + n + D[e - 16]) | 0;
          }
          let { A: r, B: n, C: i, D: o, E: a, F: s, G: l, H: u } = this;
          for (let e = 0; e < 64; e++) {
            var c, h, d, p;
            let t =
                (u +
                  (f(a, 6) ^ f(a, 11) ^ f(a, 25)) +
                  (((c = a) & s) ^ (~c & l)) +
                  j[e] +
                  D[e]) |
                0,
              y =
                ((f(r, 2) ^ f(r, 13) ^ f(r, 22)) +
                  (((h = r) & (d = n)) ^ (h & (p = i)) ^ (d & p))) |
                0;
            (u = l),
              (l = s),
              (s = a),
              (a = (o + t) | 0),
              (o = i),
              (i = n),
              (n = r),
              (r = (t + y) | 0);
          }
          (r = (r + this.A) | 0),
            (n = (n + this.B) | 0),
            (i = (i + this.C) | 0),
            (o = (o + this.D) | 0),
            (a = (a + this.E) | 0),
            (s = (s + this.F) | 0),
            (l = (l + this.G) | 0),
            (u = (u + this.H) | 0),
            this.set(r, n, i, o, a, s, l, u);
        }
        roundClean() {
          D.fill(0);
        }
        destroy() {
          this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
        }
      }
      let $ = w(() => new F()),
        q = BigInt(0x100000000 - 1),
        z = BigInt(32),
        K = {
          split: function (e, t = !1) {
            let r = new Uint32Array(e.length),
              n = new Uint32Array(e.length);
            for (let i = 0; i < e.length; i++) {
              let { h: o, l: a } = (function (e, t = !1) {
                return t
                  ? { h: Number(e & q), l: Number((e >> z) & q) }
                  : { h: 0 | Number((e >> z) & q), l: 0 | Number(e & q) };
              })(e[i], t);
              [r[i], n[i]] = [o, a];
            }
            return [r, n];
          },
          shrSH: (e, t, r) => e >>> r,
          shrSL: (e, t, r) => (e << (32 - r)) | (t >>> r),
          rotrSH: (e, t, r) => (e >>> r) | (t << (32 - r)),
          rotrSL: (e, t, r) => (e << (32 - r)) | (t >>> r),
          rotrBH: (e, t, r) => (e << (64 - r)) | (t >>> (r - 32)),
          rotrBL: (e, t, r) => (e >>> (r - 32)) | (t << (64 - r)),
          add: function (e, t, r, n) {
            let i = (t >>> 0) + (n >>> 0);
            return { h: (e + r + ((i / 0x100000000) | 0)) | 0, l: 0 | i };
          },
          add3L: (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0),
          add3H: (e, t, r, n) => (t + r + n + ((e / 0x100000000) | 0)) | 0,
          add4L: (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0),
          add4H: (e, t, r, n, i) =>
            (t + r + n + i + ((e / 0x100000000) | 0)) | 0,
          add5H: (e, t, r, n, i, o) =>
            (t + r + n + i + o + ((e / 0x100000000) | 0)) | 0,
          add5L: (e, t, r, n, i) =>
            (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0),
        },
        [Z, V] = K.split(
          [
            "0x428a2f98d728ae22",
            "0x7137449123ef65cd",
            "0xb5c0fbcfec4d3b2f",
            "0xe9b5dba58189dbbc",
            "0x3956c25bf348b538",
            "0x59f111f1b605d019",
            "0x923f82a4af194f9b",
            "0xab1c5ed5da6d8118",
            "0xd807aa98a3030242",
            "0x12835b0145706fbe",
            "0x243185be4ee4b28c",
            "0x550c7dc3d5ffb4e2",
            "0x72be5d74f27b896f",
            "0x80deb1fe3b1696b1",
            "0x9bdc06a725c71235",
            "0xc19bf174cf692694",
            "0xe49b69c19ef14ad2",
            "0xefbe4786384f25e3",
            "0x0fc19dc68b8cd5b5",
            "0x240ca1cc77ac9c65",
            "0x2de92c6f592b0275",
            "0x4a7484aa6ea6e483",
            "0x5cb0a9dcbd41fbd4",
            "0x76f988da831153b5",
            "0x983e5152ee66dfab",
            "0xa831c66d2db43210",
            "0xb00327c898fb213f",
            "0xbf597fc7beef0ee4",
            "0xc6e00bf33da88fc2",
            "0xd5a79147930aa725",
            "0x06ca6351e003826f",
            "0x142929670a0e6e70",
            "0x27b70a8546d22ffc",
            "0x2e1b21385c26c926",
            "0x4d2c6dfc5ac42aed",
            "0x53380d139d95b3df",
            "0x650a73548baf63de",
            "0x766a0abb3c77b2a8",
            "0x81c2c92e47edaee6",
            "0x92722c851482353b",
            "0xa2bfe8a14cf10364",
            "0xa81a664bbc423001",
            "0xc24b8b70d0f89791",
            "0xc76c51a30654be30",
            "0xd192e819d6ef5218",
            "0xd69906245565a910",
            "0xf40e35855771202a",
            "0x106aa07032bbd1b8",
            "0x19a4c116b8d2d0c8",
            "0x1e376c085141ab53",
            "0x2748774cdf8eeb99",
            "0x34b0bcb5e19b48a8",
            "0x391c0cb3c5c95a63",
            "0x4ed8aa4ae3418acb",
            "0x5b9cca4f7763e373",
            "0x682e6ff3d6b2b8a3",
            "0x748f82ee5defb2fc",
            "0x78a5636f43172f60",
            "0x84c87814a1f0ab72",
            "0x8cc702081a6439ec",
            "0x90befffa23631e28",
            "0xa4506cebde82bde9",
            "0xbef9a3f7b2c67915",
            "0xc67178f2e372532b",
            "0xca273eceea26619c",
            "0xd186b8c721c0c207",
            "0xeada7dd6cde0eb1e",
            "0xf57d4f7fee6ed178",
            "0x06f067aa72176fba",
            "0x0a637dc5a2c898a6",
            "0x113f9804bef90dae",
            "0x1b710b35131c471b",
            "0x28db77f523047d84",
            "0x32caab7b40c72493",
            "0x3c9ebe0a15c9bebc",
            "0x431d67c49c100d4c",
            "0x4cc5d4becb3e42b6",
            "0x597f299cfc657e2a",
            "0x5fcb6fab3ad6faec",
            "0x6c44198c4a475817",
          ].map((e) => BigInt(e))
        ),
        G = new Uint32Array(80),
        W = new Uint32Array(80);
      class Y extends _ {
        constructor(e = 64) {
          super(128, e, 16, !1),
            (this.Ah = 0x6a09e667),
            (this.Al = -0xc4336f8),
            (this.Bh = -0x4498517b),
            (this.Bl = -0x7b3558c5),
            (this.Ch = 0x3c6ef372),
            (this.Cl = -0x16b07d5),
            (this.Dh = -0x5ab00ac6),
            (this.Dl = 0x5f1d36f1),
            (this.Eh = 0x510e527f),
            (this.El = -0x52197d2f),
            (this.Fh = -0x64fa9774),
            (this.Fl = 0x2b3e6c1f),
            (this.Gh = 0x1f83d9ab),
            (this.Gl = -0x4be4295),
            (this.Hh = 0x5be0cd19),
            (this.Hl = 0x137e2179);
        }
        get() {
          let {
            Ah: e,
            Al: t,
            Bh: r,
            Bl: n,
            Ch: i,
            Cl: o,
            Dh: a,
            Dl: s,
            Eh: l,
            El: f,
            Fh: u,
            Fl: c,
            Gh: h,
            Gl: d,
            Hh: p,
            Hl: y,
          } = this;
          return [e, t, r, n, i, o, a, s, l, f, u, c, h, d, p, y];
        }
        set(e, t, r, n, i, o, a, s, l, f, u, c, h, d, p, y) {
          (this.Ah = 0 | e),
            (this.Al = 0 | t),
            (this.Bh = 0 | r),
            (this.Bl = 0 | n),
            (this.Ch = 0 | i),
            (this.Cl = 0 | o),
            (this.Dh = 0 | a),
            (this.Dl = 0 | s),
            (this.Eh = 0 | l),
            (this.El = 0 | f),
            (this.Fh = 0 | u),
            (this.Fl = 0 | c),
            (this.Gh = 0 | h),
            (this.Gl = 0 | d),
            (this.Hh = 0 | p),
            (this.Hl = 0 | y);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4)
            (G[r] = e.getUint32(t)), (W[r] = e.getUint32((t += 4)));
          for (let e = 16; e < 80; e++) {
            let t = 0 | G[e - 15],
              r = 0 | W[e - 15],
              n = K.rotrSH(t, r, 1) ^ K.rotrSH(t, r, 8) ^ K.shrSH(t, r, 7),
              i = K.rotrSL(t, r, 1) ^ K.rotrSL(t, r, 8) ^ K.shrSL(t, r, 7),
              o = 0 | G[e - 2],
              a = 0 | W[e - 2],
              s = K.rotrSH(o, a, 19) ^ K.rotrBH(o, a, 61) ^ K.shrSH(o, a, 6),
              l = K.rotrSL(o, a, 19) ^ K.rotrBL(o, a, 61) ^ K.shrSL(o, a, 6),
              f = K.add4L(i, l, W[e - 7], W[e - 16]),
              u = K.add4H(f, n, s, G[e - 7], G[e - 16]);
            (G[e] = 0 | u), (W[e] = 0 | f);
          }
          let {
            Ah: r,
            Al: n,
            Bh: i,
            Bl: o,
            Ch: a,
            Cl: s,
            Dh: l,
            Dl: f,
            Eh: u,
            El: c,
            Fh: h,
            Fl: d,
            Gh: p,
            Gl: y,
            Hh: g,
            Hl: b,
          } = this;
          for (let e = 0; e < 80; e++) {
            let t =
                K.rotrSH(u, c, 14) ^ K.rotrSH(u, c, 18) ^ K.rotrBH(u, c, 41),
              m = K.rotrSL(u, c, 14) ^ K.rotrSL(u, c, 18) ^ K.rotrBL(u, c, 41),
              w = (u & h) ^ (~u & p),
              v = (c & d) ^ (~c & y),
              x = K.add5L(b, m, v, V[e], W[e]),
              E = K.add5H(x, g, t, w, Z[e], G[e]),
              _ = 0 | x,
              S = K.rotrSH(r, n, 28) ^ K.rotrBH(r, n, 34) ^ K.rotrBH(r, n, 39),
              A = K.rotrSL(r, n, 28) ^ K.rotrBL(r, n, 34) ^ K.rotrBL(r, n, 39),
              B = (r & i) ^ (r & a) ^ (i & a),
              k = (n & o) ^ (n & s) ^ (o & s);
            (g = 0 | p),
              (b = 0 | y),
              (p = 0 | h),
              (y = 0 | d),
              (h = 0 | u),
              (d = 0 | c),
              ({ h: u, l: c } = K.add(0 | l, 0 | f, 0 | E, 0 | _)),
              (l = 0 | a),
              (f = 0 | s),
              (a = 0 | i),
              (s = 0 | o),
              (i = 0 | r),
              (o = 0 | n);
            let O = K.add3L(_, A, k);
            (r = K.add3H(O, E, S, B)), (n = 0 | O);
          }
          ({ h: r, l: n } = K.add(0 | this.Ah, 0 | this.Al, 0 | r, 0 | n)),
            ({ h: i, l: o } = K.add(0 | this.Bh, 0 | this.Bl, 0 | i, 0 | o)),
            ({ h: a, l: s } = K.add(0 | this.Ch, 0 | this.Cl, 0 | a, 0 | s)),
            ({ h: l, l: f } = K.add(0 | this.Dh, 0 | this.Dl, 0 | l, 0 | f)),
            ({ h: u, l: c } = K.add(0 | this.Eh, 0 | this.El, 0 | u, 0 | c)),
            ({ h: h, l: d } = K.add(0 | this.Fh, 0 | this.Fl, 0 | h, 0 | d)),
            ({ h: p, l: y } = K.add(0 | this.Gh, 0 | this.Gl, 0 | p, 0 | y)),
            ({ h: g, l: b } = K.add(0 | this.Hh, 0 | this.Hl, 0 | g, 0 | b)),
            this.set(r, n, i, o, a, s, l, f, u, c, h, d, p, y, g, b);
        }
        roundClean() {
          G.fill(0), W.fill(0);
        }
        destroy() {
          this.buffer.fill(0),
            this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        }
      }
      let X = w(() => new Y()),
        Q = BigInt(0),
        J = BigInt(1);
      function ee(e) {
        return (
          e instanceof Uint8Array ||
          (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
        );
      }
      function et(e) {
        if (!ee(e)) throw Error("Uint8Array expected");
      }
      function er(e, t) {
        if ("boolean" != typeof t)
          throw Error(e + " boolean expected, got " + t);
      }
      function en(e) {
        let t = e.toString(16);
        return 1 & t.length ? "0" + t : t;
      }
      function ei(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        return "" === e ? Q : BigInt("0x" + e);
      }
      let eo =
          "function" == typeof Uint8Array.from([]).toHex &&
          "function" == typeof Uint8Array.fromHex,
        ea = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
      function es(e) {
        if ((et(e), eo)) return e.toHex();
        let t = "";
        for (let r = 0; r < e.length; r++) t += ea[e[r]];
        return t;
      }
      let el = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
      function ef(e) {
        return e >= el._0 && e <= el._9
          ? e - el._0
          : e >= el.A && e <= el.F
          ? e - (el.A - 10)
          : e >= el.a && e <= el.f
          ? e - (el.a - 10)
          : void 0;
      }
      function eu(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        if (eo) return Uint8Array.fromHex(e);
        let t = e.length,
          r = t / 2;
        if (t % 2)
          throw Error("hex string expected, got unpadded hex of length " + t);
        let n = new Uint8Array(r);
        for (let t = 0, i = 0; t < r; t++, i += 2) {
          let r = ef(e.charCodeAt(i)),
            o = ef(e.charCodeAt(i + 1));
          if (void 0 === r || void 0 === o)
            throw Error(
              'hex string expected, got non-hex character "' +
                (e[i] + e[i + 1]) +
                '" at index ' +
                i
            );
          n[t] = 16 * r + o;
        }
        return n;
      }
      function ec(e) {
        return ei(es(e));
      }
      function eh(e) {
        return et(e), ei(es(Uint8Array.from(e).reverse()));
      }
      function ed(e, t) {
        return eu(e.toString(16).padStart(2 * t, "0"));
      }
      function ep(e, t) {
        return ed(e, t).reverse();
      }
      function ey(e, t, r) {
        let n;
        if ("string" == typeof t)
          try {
            n = eu(t);
          } catch (t) {
            throw Error(e + " must be hex string or Uint8Array, cause: " + t);
          }
        else if (ee(t)) n = Uint8Array.from(t);
        else throw Error(e + " must be hex string or Uint8Array");
        let i = n.length;
        if ("number" == typeof r && i !== r)
          throw Error(e + " of length " + r + " expected, got " + i);
        return n;
      }
      function eg(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          let n = e[r];
          et(n), (t += n.length);
        }
        let r = new Uint8Array(t);
        for (let t = 0, n = 0; t < e.length; t++) {
          let i = e[t];
          r.set(i, n), (n += i.length);
        }
        return r;
      }
      let eb = (e) => "bigint" == typeof e && Q <= e;
      function em(e, t, r) {
        return eb(e) && eb(t) && eb(r) && t <= e && e < r;
      }
      function ew(e, t, r, n) {
        if (!em(t, r, n))
          throw Error(
            "expected valid " + e + ": " + r + " <= n < " + n + ", got " + t
          );
      }
      let ev = (e) => (J << BigInt(e)) - J,
        ex = (e) => new Uint8Array(e),
        eE = (e) => Uint8Array.from(e),
        e_ = {
          bigint: (e) => "bigint" == typeof e,
          function: (e) => "function" == typeof e,
          boolean: (e) => "boolean" == typeof e,
          string: (e) => "string" == typeof e,
          stringOrUint8Array: (e) => "string" == typeof e || ee(e),
          isSafeInteger: (e) => Number.isSafeInteger(e),
          array: (e) => Array.isArray(e),
          field: (e, t) => t.Fp.isValid(e),
          hash: (e) =>
            "function" == typeof e && Number.isSafeInteger(e.outputLen),
        };
      function eS(e, t, r = {}) {
        let n = (t, r, n) => {
          let i = e_[r];
          if ("function" != typeof i) throw Error("invalid validator function");
          let o = e[t];
          if ((!n || void 0 !== o) && !i(o, e))
            throw Error(
              "param " + String(t) + " is invalid. Expected " + r + ", got " + o
            );
        };
        for (let [e, r] of Object.entries(t)) n(e, r, !1);
        for (let [e, t] of Object.entries(r)) n(e, t, !0);
        return e;
      }
      function eA(e) {
        let t = new WeakMap();
        return (r, ...n) => {
          let i = t.get(r);
          if (void 0 !== i) return i;
          let o = e(r, ...n);
          return t.set(r, o), o;
        };
      }
      let eB = BigInt(0),
        ek = BigInt(1),
        eO = BigInt(2),
        eT = BigInt(3),
        eI = BigInt(4),
        eR = BigInt(5),
        eM = BigInt(8);
      function eP(e, t) {
        let r = e % t;
        return r >= eB ? r : t + r;
      }
      function eC(e, t, r) {
        let n = e;
        for (; t-- > eB; ) (n *= n), (n %= r);
        return n;
      }
      function eU(e, t) {
        if (e === eB) throw Error("invert: expected non-zero number");
        if (t <= eB) throw Error("invert: expected positive modulus, got " + t);
        let r = eP(e, t),
          n = t,
          i = eB,
          o = ek,
          a = ek,
          s = eB;
        for (; r !== eB; ) {
          let e = n / r,
            t = n % r,
            l = i - a * e,
            f = o - s * e;
          (n = r), (r = t), (i = a), (o = s), (a = l), (s = f);
        }
        if (n !== ek) throw Error("invert: does not exist");
        return eP(i, t);
      }
      let eL = [
        "create",
        "isValid",
        "is0",
        "neg",
        "inv",
        "sqrt",
        "sqr",
        "eql",
        "add",
        "sub",
        "mul",
        "pow",
        "div",
        "addN",
        "subN",
        "mulN",
        "sqrN",
      ];
      function eN(e, t) {
        let r = void 0 !== t ? t : e.toString(2).length,
          n = Math.ceil(r / 8);
        return { nBitLength: r, nByteLength: n };
      }
      function ej(e, t, r = !1, n = {}) {
        let i;
        if (e <= eB) throw Error("invalid field: expected ORDER > 0, got " + e);
        let { nBitLength: o, nByteLength: a } = eN(e, t);
        if (a > 2048)
          throw Error("invalid field: expected ORDER of <= 2048 bytes");
        let s = Object.freeze({
          ORDER: e,
          isLE: r,
          BITS: o,
          BYTES: a,
          MASK: ev(o),
          ZERO: eB,
          ONE: ek,
          create: (t) => eP(t, e),
          isValid: (t) => {
            if ("bigint" != typeof t)
              throw Error(
                "invalid field element: expected bigint, got " + typeof t
              );
            return eB <= t && t < e;
          },
          is0: (e) => e === eB,
          isOdd: (e) => (e & ek) === ek,
          neg: (t) => eP(-t, e),
          eql: (e, t) => e === t,
          sqr: (t) => eP(t * t, e),
          add: (t, r) => eP(t + r, e),
          sub: (t, r) => eP(t - r, e),
          mul: (t, r) => eP(t * r, e),
          pow: (e, t) =>
            (function (e, t, r) {
              if (r < eB)
                throw Error("invalid exponent, negatives unsupported");
              if (r === eB) return e.ONE;
              if (r === ek) return t;
              let n = e.ONE,
                i = t;
              for (; r > eB; )
                r & ek && (n = e.mul(n, i)), (i = e.sqr(i)), (r >>= ek);
              return n;
            })(s, e, t),
          div: (t, r) => eP(t * eU(r, e), e),
          sqrN: (e) => e * e,
          addN: (e, t) => e + t,
          subN: (e, t) => e - t,
          mulN: (e, t) => e * t,
          inv: (t) => eU(t, e),
          sqrt:
            n.sqrt ||
            ((t) => (
              i ||
                (i = (function (e) {
                  if (e % eI === eT) {
                    let t = (e + ek) / eI;
                    return function (e, r) {
                      let n = e.pow(r, t);
                      if (!e.eql(e.sqr(n), r))
                        throw Error("Cannot find square root");
                      return n;
                    };
                  }
                  if (e % eM === eR) {
                    let t = (e - eR) / eM;
                    return function (e, r) {
                      let n = e.mul(r, eO),
                        i = e.pow(n, t),
                        o = e.mul(r, i),
                        a = e.mul(e.mul(o, eO), i),
                        s = e.mul(o, e.sub(a, e.ONE));
                      if (!e.eql(e.sqr(s), r))
                        throw Error("Cannot find square root");
                      return s;
                    };
                  }
                  return (function (e) {
                    let t, r, n;
                    let i = (e - ek) / eO;
                    for (t = e - ek, r = 0; t % eO === eB; t /= eO, r++);
                    for (
                      n = eO;
                      n < e &&
                      (function (e, t, r) {
                        if (t < eB)
                          throw Error(
                            "invalid exponent, negatives unsupported"
                          );
                        if (r <= eB) throw Error("invalid modulus");
                        if (r === ek) return eB;
                        let n = ek;
                        for (; t > eB; )
                          t & ek && (n = (n * e) % r),
                            (e = (e * e) % r),
                            (t >>= ek);
                        return n;
                      })(n, i, e) !==
                        e - ek;
                      n++
                    )
                      if (n > 1e3)
                        throw Error(
                          "Cannot find square root: likely non-prime P"
                        );
                    if (1 === r) {
                      let t = (e + ek) / eI;
                      return function (e, r) {
                        let n = e.pow(r, t);
                        if (!e.eql(e.sqr(n), r))
                          throw Error("Cannot find square root");
                        return n;
                      };
                    }
                    let o = (t + ek) / eO;
                    return function (e, a) {
                      if (e.pow(a, i) === e.neg(e.ONE))
                        throw Error("Cannot find square root");
                      let s = r,
                        l = e.pow(e.mul(e.ONE, n), t),
                        f = e.pow(a, o),
                        u = e.pow(a, t);
                      for (; !e.eql(u, e.ONE); ) {
                        if (e.eql(u, e.ZERO)) return e.ZERO;
                        let t = 1;
                        for (let r = e.sqr(u); t < s && !e.eql(r, e.ONE); t++)
                          r = e.sqr(r);
                        let r = e.pow(l, ek << BigInt(s - t - 1));
                        (l = e.sqr(r)),
                          (f = e.mul(f, r)),
                          (u = e.mul(u, l)),
                          (s = t);
                      }
                      return f;
                    };
                  })(e);
                })(e)),
              i(s, t)
            )),
          invertBatch: (e) =>
            (function (e, t) {
              let r = Array(t.length),
                n = t.reduce(
                  (t, n, i) => (e.is0(n) ? t : ((r[i] = t), e.mul(t, n))),
                  e.ONE
                ),
                i = e.inv(n);
              return (
                t.reduceRight(
                  (t, n, i) =>
                    e.is0(n) ? t : ((r[i] = e.mul(t, r[i])), e.mul(t, n)),
                  i
                ),
                r
              );
            })(s, e),
          cmov: (e, t, r) => (r ? t : e),
          toBytes: (e) => (r ? ep(e, a) : ed(e, a)),
          fromBytes: (e) => {
            if (e.length !== a)
              throw Error(
                "Field.fromBytes: expected " + a + " bytes, got " + e.length
              );
            return r ? eh(e) : ec(e);
          },
        });
        return Object.freeze(s);
      }
      function eH(e) {
        if ("bigint" != typeof e) throw Error("field order must be bigint");
        return Math.ceil(e.toString(2).length / 8);
      }
      function eD(e) {
        let t = eH(e);
        return t + Math.ceil(t / 2);
      }
      let eF = BigInt(0),
        e$ = BigInt(1);
      function eq(e, t) {
        let r = t.negate();
        return e ? r : t;
      }
      function ez(e, t) {
        if (!Number.isSafeInteger(e) || e <= 0 || e > t)
          throw Error(
            "invalid window size, expected [1.." + t + "], got W=" + e
          );
      }
      function eK(e, t) {
        ez(e, t);
        let r = Math.ceil(t / e) + 1,
          n = 2 ** (e - 1),
          i = 2 ** e;
        return {
          windows: r,
          windowSize: n,
          mask: ev(e),
          maxNumber: i,
          shiftBy: BigInt(e),
        };
      }
      function eZ(e, t, r) {
        let { windowSize: n, mask: i, maxNumber: o, shiftBy: a } = r,
          s = Number(e & i),
          l = e >> a;
        s > n && ((s -= o), (l += e$));
        let f = t * n,
          u = f + Math.abs(s) - 1,
          c = 0 === s;
        return {
          nextN: l,
          offset: u,
          isZero: c,
          isNeg: s < 0,
          isNegF: t % 2 != 0,
          offsetF: f,
        };
      }
      let eV = new WeakMap(),
        eG = new WeakMap();
      function eW(e) {
        return eG.get(e) || 1;
      }
      function eY(e) {
        return (
          eS(
            e.Fp,
            eL.reduce((e, t) => ((e[t] = "function"), e), {
              ORDER: "bigint",
              MASK: "bigint",
              BYTES: "isSafeInteger",
              BITS: "isSafeInteger",
            })
          ),
          eS(
            e,
            { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
            { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
          ),
          Object.freeze({ ...eN(e.n, e.nBitLength), ...e, p: e.Fp.ORDER })
        );
      }
      function eX(e) {
        void 0 !== e.lowS && er("lowS", e.lowS),
          void 0 !== e.prehash && er("prehash", e.prehash);
      }
      class eQ extends Error {
        constructor(e = "") {
          super(e);
        }
      }
      let eJ = {
          Err: eQ,
          _tlv: {
            encode: (e, t) => {
              let { Err: r } = eJ;
              if (e < 0 || e > 256) throw new r("tlv.encode: wrong tag");
              if (1 & t.length) throw new r("tlv.encode: unpadded data");
              let n = t.length / 2,
                i = en(n);
              if ((i.length / 2) & 128)
                throw new r("tlv.encode: long form length too big");
              let o = n > 127 ? en((i.length / 2) | 128) : "";
              return en(e) + o + i + t;
            },
            decode(e, t) {
              let { Err: r } = eJ,
                n = 0;
              if (e < 0 || e > 256) throw new r("tlv.encode: wrong tag");
              if (t.length < 2 || t[n++] !== e)
                throw new r("tlv.decode: wrong tlv");
              let i = t[n++],
                o = 0;
              if (128 & i) {
                let e = 127 & i;
                if (!e)
                  throw new r(
                    "tlv.decode(long): indefinite length not supported"
                  );
                if (e > 4)
                  throw new r("tlv.decode(long): byte length is too big");
                let a = t.subarray(n, n + e);
                if (a.length !== e)
                  throw new r("tlv.decode: length bytes not complete");
                if (0 === a[0])
                  throw new r("tlv.decode(long): zero leftmost byte");
                for (let e of a) o = (o << 8) | e;
                if (((n += e), o < 128))
                  throw new r("tlv.decode(long): not minimal encoding");
              } else o = i;
              let a = t.subarray(n, n + o);
              if (a.length !== o) throw new r("tlv.decode: wrong value length");
              return { v: a, l: t.subarray(n + o) };
            },
          },
          _int: {
            encode(e) {
              let { Err: t } = eJ;
              if (e < e0)
                throw new t("integer: negative integers are not allowed");
              let r = en(e);
              if (
                (8 & Number.parseInt(r[0], 16) && (r = "00" + r), 1 & r.length)
              )
                throw new t("unexpected DER parsing assertion: unpadded hex");
              return r;
            },
            decode(e) {
              let { Err: t } = eJ;
              if (128 & e[0])
                throw new t("invalid signature integer: negative");
              if (0 === e[0] && !(128 & e[1]))
                throw new t(
                  "invalid signature integer: unnecessary leading zero"
                );
              return ec(e);
            },
          },
          toSig(e) {
            let { Err: t, _int: r, _tlv: n } = eJ,
              i = ey("signature", e),
              { v: o, l: a } = n.decode(48, i);
            if (a.length)
              throw new t("invalid signature: left bytes after parsing");
            let { v: s, l: l } = n.decode(2, o),
              { v: f, l: u } = n.decode(2, l);
            if (u.length)
              throw new t("invalid signature: left bytes after parsing");
            return { r: r.decode(s), s: r.decode(f) };
          },
          hexFromSig(e) {
            let { _tlv: t, _int: r } = eJ,
              n = t.encode(2, r.encode(e.r)),
              i = t.encode(2, r.encode(e.s));
            return t.encode(48, n + i);
          },
        },
        e0 = BigInt(0),
        e1 = BigInt(1),
        e2 = (BigInt(2), BigInt(3)),
        e3 =
          (BigInt(4),
          BigInt(
            "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
          )),
        e6 = BigInt(
          "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
        ),
        e8 = BigInt(1),
        e5 = BigInt(2),
        e4 = (e, t) => (e + t / e5) / t,
        e7 = ej(e3, void 0, void 0, {
          sqrt: function (e) {
            let t = BigInt(3),
              r = BigInt(6),
              n = BigInt(11),
              i = BigInt(22),
              o = BigInt(23),
              a = BigInt(44),
              s = BigInt(88),
              l = (e * e * e) % e3,
              f = (l * l * e) % e3,
              u = (eC(f, t, e3) * f) % e3,
              c = (eC(u, t, e3) * f) % e3,
              h = (eC(c, e5, e3) * l) % e3,
              d = (eC(h, n, e3) * h) % e3,
              p = (eC(d, i, e3) * d) % e3,
              y = (eC(p, a, e3) * p) % e3,
              g = (eC(y, s, e3) * y) % e3,
              b = (eC(g, a, e3) * p) % e3,
              m = (eC(b, t, e3) * f) % e3,
              w = (eC(m, o, e3) * d) % e3,
              v = (eC(w, r, e3) * l) % e3,
              x = eC(v, e5, e3);
            if (!e7.eql(e7.sqr(x), e)) throw Error("Cannot find square root");
            return x;
          },
        }),
        e9 = (function (e, t) {
          let r = (t) =>
            (function (e) {
              let t = (function (e) {
                  let t = eY(e);
                  return (
                    eS(
                      t,
                      {
                        hash: "hash",
                        hmac: "function",
                        randomBytes: "function",
                      },
                      {
                        bits2int: "function",
                        bits2int_modN: "function",
                        lowS: "boolean",
                      }
                    ),
                    Object.freeze({ lowS: !0, ...t })
                  );
                })(e),
                { Fp: r, n: n } = t,
                i = r.BYTES + 1,
                o = 2 * r.BYTES + 1;
              function a(e) {
                return eP(e, n);
              }
              let {
                  ProjectivePoint: s,
                  normPrivateKeyToScalar: l,
                  weierstrassEquation: f,
                  isWithinCurveOrder: u,
                } = (function (e) {
                  var t;
                  let r = (function (e) {
                      let t = eY(e);
                      eS(
                        t,
                        { a: "field", b: "field" },
                        {
                          allowedPrivateKeyLengths: "array",
                          wrapPrivateKey: "boolean",
                          isTorsionFree: "function",
                          clearCofactor: "function",
                          allowInfinityPoint: "boolean",
                          fromBytes: "function",
                          toBytes: "function",
                        }
                      );
                      let { endo: r, Fp: n, a: i } = t;
                      if (r) {
                        if (!n.eql(i, n.ZERO))
                          throw Error(
                            "invalid endomorphism, can only be defined for Koblitz curves that have a=0"
                          );
                        if (
                          "object" != typeof r ||
                          "bigint" != typeof r.beta ||
                          "function" != typeof r.splitScalar
                        )
                          throw Error(
                            "invalid endomorphism, expected beta: bigint and splitScalar: function"
                          );
                      }
                      return Object.freeze({ ...t });
                    })(e),
                    { Fp: n } = r,
                    i = ej(r.n, r.nBitLength),
                    o =
                      r.toBytes ||
                      ((e, t, r) => {
                        let i = t.toAffine();
                        return eg(
                          Uint8Array.from([4]),
                          n.toBytes(i.x),
                          n.toBytes(i.y)
                        );
                      }),
                    a =
                      r.fromBytes ||
                      ((e) => {
                        let t = e.subarray(1);
                        return {
                          x: n.fromBytes(t.subarray(0, n.BYTES)),
                          y: n.fromBytes(t.subarray(n.BYTES, 2 * n.BYTES)),
                        };
                      });
                  function s(e) {
                    let { a: t, b: i } = r,
                      o = n.sqr(e),
                      a = n.mul(o, e);
                    return n.add(n.add(a, n.mul(e, t)), i);
                  }
                  if (!n.eql(n.sqr(r.Gy), s(r.Gx)))
                    throw Error("bad generator point: equation left != right");
                  function l(e) {
                    let t;
                    let {
                      allowedPrivateKeyLengths: n,
                      nByteLength: i,
                      wrapPrivateKey: o,
                      n: a,
                    } = r;
                    if (n && "bigint" != typeof e) {
                      if (
                        (ee(e) && (e = es(e)),
                        "string" != typeof e || !n.includes(e.length))
                      )
                        throw Error("invalid private key");
                      e = e.padStart(2 * i, "0");
                    }
                    try {
                      t =
                        "bigint" == typeof e ? e : ec(ey("private key", e, i));
                    } catch (t) {
                      throw Error(
                        "invalid private key, expected hex or " +
                          i +
                          " bytes, got " +
                          typeof e
                      );
                    }
                    return o && (t = eP(t, a)), ew("private key", t, e1, a), t;
                  }
                  function f(e) {
                    if (!(e instanceof h))
                      throw Error("ProjectivePoint expected");
                  }
                  let u = eA((e, t) => {
                      let { px: r, py: i, pz: o } = e;
                      if (n.eql(o, n.ONE)) return { x: r, y: i };
                      let a = e.is0();
                      null == t && (t = a ? n.ONE : n.inv(o));
                      let s = n.mul(r, t),
                        l = n.mul(i, t),
                        f = n.mul(o, t);
                      if (a) return { x: n.ZERO, y: n.ZERO };
                      if (!n.eql(f, n.ONE)) throw Error("invZ was invalid");
                      return { x: s, y: l };
                    }),
                    c = eA((e) => {
                      if (e.is0()) {
                        if (r.allowInfinityPoint && !n.is0(e.py)) return;
                        throw Error("bad point: ZERO");
                      }
                      let { x: t, y: i } = e.toAffine();
                      if (!n.isValid(t) || !n.isValid(i))
                        throw Error("bad point: x or y not FE");
                      let o = n.sqr(i),
                        a = s(t);
                      if (!n.eql(o, a))
                        throw Error("bad point: equation left != right");
                      if (!e.isTorsionFree())
                        throw Error("bad point: not in prime-order subgroup");
                      return !0;
                    });
                  class h {
                    constructor(e, t, r) {
                      if (null == e || !n.isValid(e)) throw Error("x required");
                      if (null == t || !n.isValid(t)) throw Error("y required");
                      if (null == r || !n.isValid(r)) throw Error("z required");
                      (this.px = e),
                        (this.py = t),
                        (this.pz = r),
                        Object.freeze(this);
                    }
                    static fromAffine(e) {
                      let { x: t, y: r } = e || {};
                      if (!e || !n.isValid(t) || !n.isValid(r))
                        throw Error("invalid affine point");
                      if (e instanceof h)
                        throw Error("projective point not allowed");
                      let i = (e) => n.eql(e, n.ZERO);
                      return i(t) && i(r) ? h.ZERO : new h(t, r, n.ONE);
                    }
                    get x() {
                      return this.toAffine().x;
                    }
                    get y() {
                      return this.toAffine().y;
                    }
                    static normalizeZ(e) {
                      let t = n.invertBatch(e.map((e) => e.pz));
                      return e
                        .map((e, r) => e.toAffine(t[r]))
                        .map(h.fromAffine);
                    }
                    static fromHex(e) {
                      let t = h.fromAffine(a(ey("pointHex", e)));
                      return t.assertValidity(), t;
                    }
                    static fromPrivateKey(e) {
                      return h.BASE.multiply(l(e));
                    }
                    static msm(e, t) {
                      return (function (e, t, r, n) {
                        if (
                          ((function (e, t) {
                            if (!Array.isArray(e))
                              throw Error("array expected");
                            e.forEach((e, r) => {
                              if (!(e instanceof t))
                                throw Error("invalid point at index " + r);
                            });
                          })(r, e),
                          (function (e, t) {
                            if (!Array.isArray(e))
                              throw Error("array of scalars expected");
                            e.forEach((e, r) => {
                              if (!t.isValid(e))
                                throw Error("invalid scalar at index " + r);
                            });
                          })(n, t),
                          r.length !== n.length)
                        )
                          throw Error(
                            "arrays of points and scalars must have equal length"
                          );
                        let i = e.ZERO,
                          o = (function (e) {
                            let t;
                            for (t = 0; e > Q; e >>= J, t += 1);
                            return t;
                          })(BigInt(r.length)),
                          a = o > 12 ? o - 3 : o > 4 ? o - 2 : o ? 2 : 1,
                          s = ev(a),
                          l = Array(Number(s) + 1).fill(i),
                          f = Math.floor((t.BITS - 1) / a) * a,
                          u = i;
                        for (let e = f; e >= 0; e -= a) {
                          l.fill(i);
                          for (let t = 0; t < n.length; t++) {
                            let i = Number((n[t] >> BigInt(e)) & s);
                            l[i] = l[i].add(r[t]);
                          }
                          let t = i;
                          for (let e = l.length - 1, r = i; e > 0; e--)
                            (r = r.add(l[e])), (t = t.add(r));
                          if (((u = u.add(t)), 0 !== e))
                            for (let e = 0; e < a; e++) u = u.double();
                        }
                        return u;
                      })(h, i, e, t);
                    }
                    _setWindowSize(e) {
                      p.setWindowSize(this, e);
                    }
                    assertValidity() {
                      c(this);
                    }
                    hasEvenY() {
                      let { y: e } = this.toAffine();
                      if (n.isOdd) return !n.isOdd(e);
                      throw Error("Field doesn't support isOdd");
                    }
                    equals(e) {
                      f(e);
                      let { px: t, py: r, pz: i } = this,
                        { px: o, py: a, pz: s } = e,
                        l = n.eql(n.mul(t, s), n.mul(o, i)),
                        u = n.eql(n.mul(r, s), n.mul(a, i));
                      return l && u;
                    }
                    negate() {
                      return new h(this.px, n.neg(this.py), this.pz);
                    }
                    double() {
                      let { a: e, b: t } = r,
                        i = n.mul(t, e2),
                        { px: o, py: a, pz: s } = this,
                        l = n.ZERO,
                        f = n.ZERO,
                        u = n.ZERO,
                        c = n.mul(o, o),
                        d = n.mul(a, a),
                        p = n.mul(s, s),
                        y = n.mul(o, a);
                      return (
                        (y = n.add(y, y)),
                        (u = n.mul(o, s)),
                        (u = n.add(u, u)),
                        (l = n.mul(e, u)),
                        (f = n.mul(i, p)),
                        (f = n.add(l, f)),
                        (l = n.sub(d, f)),
                        (f = n.add(d, f)),
                        (f = n.mul(l, f)),
                        (l = n.mul(y, l)),
                        (u = n.mul(i, u)),
                        (p = n.mul(e, p)),
                        (y = n.sub(c, p)),
                        (y = n.mul(e, y)),
                        (y = n.add(y, u)),
                        (u = n.add(c, c)),
                        (c = n.add(u, c)),
                        (c = n.add(c, p)),
                        (c = n.mul(c, y)),
                        (f = n.add(f, c)),
                        (p = n.mul(a, s)),
                        (p = n.add(p, p)),
                        (c = n.mul(p, y)),
                        (l = n.sub(l, c)),
                        (u = n.mul(p, d)),
                        (u = n.add(u, u)),
                        new h(l, f, (u = n.add(u, u)))
                      );
                    }
                    add(e) {
                      f(e);
                      let { px: t, py: i, pz: o } = this,
                        { px: a, py: s, pz: l } = e,
                        u = n.ZERO,
                        c = n.ZERO,
                        d = n.ZERO,
                        p = r.a,
                        y = n.mul(r.b, e2),
                        g = n.mul(t, a),
                        b = n.mul(i, s),
                        m = n.mul(o, l),
                        w = n.add(t, i),
                        v = n.add(a, s);
                      (w = n.mul(w, v)),
                        (v = n.add(g, b)),
                        (w = n.sub(w, v)),
                        (v = n.add(t, o));
                      let x = n.add(a, l);
                      return (
                        (v = n.mul(v, x)),
                        (x = n.add(g, m)),
                        (v = n.sub(v, x)),
                        (x = n.add(i, o)),
                        (u = n.add(s, l)),
                        (x = n.mul(x, u)),
                        (u = n.add(b, m)),
                        (x = n.sub(x, u)),
                        (d = n.mul(p, v)),
                        (u = n.mul(y, m)),
                        (d = n.add(u, d)),
                        (u = n.sub(b, d)),
                        (d = n.add(b, d)),
                        (c = n.mul(u, d)),
                        (b = n.add(g, g)),
                        (b = n.add(b, g)),
                        (m = n.mul(p, m)),
                        (v = n.mul(y, v)),
                        (b = n.add(b, m)),
                        (m = n.sub(g, m)),
                        (m = n.mul(p, m)),
                        (v = n.add(v, m)),
                        (g = n.mul(b, v)),
                        (c = n.add(c, g)),
                        (g = n.mul(x, v)),
                        (u = n.mul(w, u)),
                        (u = n.sub(u, g)),
                        (g = n.mul(w, b)),
                        (d = n.mul(x, d)),
                        new h(u, c, (d = n.add(d, g)))
                      );
                    }
                    subtract(e) {
                      return this.add(e.negate());
                    }
                    is0() {
                      return this.equals(h.ZERO);
                    }
                    wNAF(e) {
                      return p.wNAFCached(this, e, h.normalizeZ);
                    }
                    multiplyUnsafe(e) {
                      let { endo: t, n: i } = r;
                      ew("scalar", e, e0, i);
                      let o = h.ZERO;
                      if (e === e0) return o;
                      if (this.is0() || e === e1) return this;
                      if (!t || p.hasPrecomputes(this))
                        return p.wNAFCachedUnsafe(this, e, h.normalizeZ);
                      let {
                          k1neg: a,
                          k1: s,
                          k2neg: l,
                          k2: f,
                        } = t.splitScalar(e),
                        u = o,
                        c = o,
                        d = this;
                      for (; s > e0 || f > e0; )
                        s & e1 && (u = u.add(d)),
                          f & e1 && (c = c.add(d)),
                          (d = d.double()),
                          (s >>= e1),
                          (f >>= e1);
                      return (
                        a && (u = u.negate()),
                        l && (c = c.negate()),
                        (c = new h(n.mul(c.px, t.beta), c.py, c.pz)),
                        u.add(c)
                      );
                    }
                    multiply(e) {
                      let t, i;
                      let { endo: o, n: a } = r;
                      if ((ew("scalar", e, e1, a), o)) {
                        let {
                            k1neg: r,
                            k1: a,
                            k2neg: s,
                            k2: l,
                          } = o.splitScalar(e),
                          { p: f, f: u } = this.wNAF(a),
                          { p: c, f: d } = this.wNAF(l);
                        (f = p.constTimeNegate(r, f)),
                          (c = p.constTimeNegate(s, c)),
                          (c = new h(n.mul(c.px, o.beta), c.py, c.pz)),
                          (t = f.add(c)),
                          (i = u.add(d));
                      } else {
                        let { p: r, f: n } = this.wNAF(e);
                        (t = r), (i = n);
                      }
                      return h.normalizeZ([t, i])[0];
                    }
                    multiplyAndAddUnsafe(e, t, r) {
                      let n = h.BASE,
                        i = (e, t) =>
                          t !== e0 && t !== e1 && e.equals(n)
                            ? e.multiply(t)
                            : e.multiplyUnsafe(t),
                        o = i(this, t).add(i(e, r));
                      return o.is0() ? void 0 : o;
                    }
                    toAffine(e) {
                      return u(this, e);
                    }
                    isTorsionFree() {
                      let { h: e, isTorsionFree: t } = r;
                      if (e === e1) return !0;
                      if (t) return t(h, this);
                      throw Error(
                        "isTorsionFree() has not been declared for the elliptic curve"
                      );
                    }
                    clearCofactor() {
                      let { h: e, clearCofactor: t } = r;
                      return e === e1
                        ? this
                        : t
                        ? t(h, this)
                        : this.multiplyUnsafe(r.h);
                    }
                    toRawBytes(e = !0) {
                      return (
                        er("isCompressed", e),
                        this.assertValidity(),
                        o(h, this, e)
                      );
                    }
                    toHex(e = !0) {
                      return er("isCompressed", e), es(this.toRawBytes(e));
                    }
                  }
                  (h.BASE = new h(r.Gx, r.Gy, n.ONE)),
                    (h.ZERO = new h(n.ZERO, n.ONE, n.ZERO));
                  let d = r.nBitLength,
                    p =
                      ((t = r.endo ? Math.ceil(d / 2) : d),
                      {
                        constTimeNegate: eq,
                        hasPrecomputes: (e) => 1 !== eW(e),
                        unsafeLadder(e, t, r = h.ZERO) {
                          let n = e;
                          for (; t > eF; )
                            t & e$ && (r = r.add(n)),
                              (n = n.double()),
                              (t >>= e$);
                          return r;
                        },
                        precomputeWindow(e, r) {
                          let { windows: n, windowSize: i } = eK(r, t),
                            o = [],
                            a = e,
                            s = a;
                          for (let e = 0; e < n; e++) {
                            (s = a), o.push(s);
                            for (let e = 1; e < i; e++)
                              (s = s.add(a)), o.push(s);
                            a = s.double();
                          }
                          return o;
                        },
                        wNAF(e, r, n) {
                          let i = h.ZERO,
                            o = h.BASE,
                            a = eK(e, t);
                          for (let e = 0; e < a.windows; e++) {
                            let {
                              nextN: t,
                              offset: s,
                              isZero: l,
                              isNeg: f,
                              isNegF: u,
                              offsetF: c,
                            } = eZ(n, e, a);
                            (n = t),
                              l
                                ? (o = o.add(eq(u, r[c])))
                                : (i = i.add(eq(f, r[s])));
                          }
                          return { p: i, f: o };
                        },
                        wNAFUnsafe(e, r, n, i = h.ZERO) {
                          let o = eK(e, t);
                          for (let e = 0; e < o.windows && n !== eF; e++) {
                            let {
                              nextN: t,
                              offset: a,
                              isZero: s,
                              isNeg: l,
                            } = eZ(n, e, o);
                            if (((n = t), !s)) {
                              let e = r[a];
                              i = i.add(l ? e.negate() : e);
                            }
                          }
                          return i;
                        },
                        getPrecomputes(e, t, r) {
                          let n = eV.get(t);
                          return (
                            n ||
                              ((n = this.precomputeWindow(t, e)),
                              1 !== e && eV.set(t, r(n))),
                            n
                          );
                        },
                        wNAFCached(e, t, r) {
                          let n = eW(e);
                          return this.wNAF(n, this.getPrecomputes(n, e, r), t);
                        },
                        wNAFCachedUnsafe(e, t, r, n) {
                          let i = eW(e);
                          return 1 === i
                            ? this.unsafeLadder(e, t, n)
                            : this.wNAFUnsafe(
                                i,
                                this.getPrecomputes(i, e, r),
                                t,
                                n
                              );
                        },
                        setWindowSize(e, r) {
                          ez(r, t), eG.set(e, r), eV.delete(e);
                        },
                      });
                  return {
                    CURVE: r,
                    ProjectivePoint: h,
                    normPrivateKeyToScalar: l,
                    weierstrassEquation: s,
                    isWithinCurveOrder: function (e) {
                      return em(e, e1, r.n);
                    },
                  };
                })({
                  ...t,
                  toBytes(e, t, n) {
                    let i = t.toAffine(),
                      o = r.toBytes(i.x);
                    return (er("isCompressed", n), n)
                      ? eg(Uint8Array.from([t.hasEvenY() ? 2 : 3]), o)
                      : eg(Uint8Array.from([4]), o, r.toBytes(i.y));
                  },
                  fromBytes(e) {
                    let t = e.length,
                      n = e[0],
                      a = e.subarray(1);
                    if (t === i && (2 === n || 3 === n)) {
                      let e;
                      let t = ec(a);
                      if (!em(t, e1, r.ORDER))
                        throw Error("Point is not on curve");
                      let i = f(t);
                      try {
                        e = r.sqrt(i);
                      } catch (e) {
                        throw Error(
                          "Point is not on curve" +
                            (e instanceof Error ? ": " + e.message : "")
                        );
                      }
                      return (
                        ((1 & n) == 1) != ((e & e1) === e1) && (e = r.neg(e)),
                        { x: t, y: e }
                      );
                    }
                    if (t === o && 4 === n)
                      return {
                        x: r.fromBytes(a.subarray(0, r.BYTES)),
                        y: r.fromBytes(a.subarray(r.BYTES, 2 * r.BYTES)),
                      };
                    throw Error(
                      "invalid Point, expected length of " +
                        i +
                        ", or uncompressed " +
                        o +
                        ", got " +
                        t
                    );
                  },
                }),
                c = (e) => es(ed(e, t.nByteLength)),
                h = (e, t, r) => ec(e.slice(t, r));
              class d {
                constructor(e, t, r) {
                  ew("r", e, e1, n),
                    ew("s", t, e1, n),
                    (this.r = e),
                    (this.s = t),
                    null != r && (this.recovery = r),
                    Object.freeze(this);
                }
                static fromCompact(e) {
                  let r = t.nByteLength;
                  return new d(
                    h((e = ey("compactSignature", e, 2 * r)), 0, r),
                    h(e, r, 2 * r)
                  );
                }
                static fromDER(e) {
                  let { r: t, s: r } = eJ.toSig(ey("DER", e));
                  return new d(t, r);
                }
                assertValidity() {}
                addRecoveryBit(e) {
                  return new d(this.r, this.s, e);
                }
                recoverPublicKey(e) {
                  let { r: i, s: o, recovery: l } = this,
                    f = g(ey("msgHash", e));
                  if (null == l || ![0, 1, 2, 3].includes(l))
                    throw Error("recovery id invalid");
                  let u = 2 === l || 3 === l ? i + t.n : i;
                  if (u >= r.ORDER) throw Error("recovery id 2 or 3 invalid");
                  let h = (1 & l) == 0 ? "02" : "03",
                    d = s.fromHex(h + c(u)),
                    p = eU(u, n),
                    y = a(-f * p),
                    b = a(o * p),
                    m = s.BASE.multiplyAndAddUnsafe(d, y, b);
                  if (!m) throw Error("point at infinify");
                  return m.assertValidity(), m;
                }
                hasHighS() {
                  return this.s > n >> e1;
                }
                normalizeS() {
                  return this.hasHighS()
                    ? new d(this.r, a(-this.s), this.recovery)
                    : this;
                }
                toDERRawBytes() {
                  return eu(this.toDERHex());
                }
                toDERHex() {
                  return eJ.hexFromSig({ r: this.r, s: this.s });
                }
                toCompactRawBytes() {
                  return eu(this.toCompactHex());
                }
                toCompactHex() {
                  return c(this.r) + c(this.s);
                }
              }
              function p(e) {
                let t = ee(e),
                  r = "string" == typeof e,
                  n = (t || r) && e.length;
                return t
                  ? n === i || n === o
                  : r
                  ? n === 2 * i || n === 2 * o
                  : e instanceof s;
              }
              let y =
                  t.bits2int ||
                  function (e) {
                    if (e.length > 8192) throw Error("input is too large");
                    let r = ec(e),
                      n = 8 * e.length - t.nBitLength;
                    return n > 0 ? r >> BigInt(n) : r;
                  },
                g =
                  t.bits2int_modN ||
                  function (e) {
                    return a(y(e));
                  },
                b = ev(t.nBitLength);
              function m(e) {
                return (
                  ew("num < 2^" + t.nBitLength, e, e0, b), ed(e, t.nByteLength)
                );
              }
              let w = { lowS: t.lowS, prehash: !1 },
                v = { lowS: t.lowS, prehash: !1 };
              return (
                s.BASE._setWindowSize(8),
                {
                  CURVE: t,
                  getPublicKey: function (e, t = !0) {
                    return s.fromPrivateKey(e).toRawBytes(t);
                  },
                  getSharedSecret: function (e, t, r = !0) {
                    if (p(e)) throw Error("first arg must be private key");
                    if (!p(t)) throw Error("second arg must be public key");
                    return s.fromHex(t).multiply(l(e)).toRawBytes(r);
                  },
                  sign: function (e, i, o = w) {
                    let { seed: f, k2sig: c } = (function (e, i, o = w) {
                      if (["recovered", "canonical"].some((e) => e in o))
                        throw Error("sign() legacy options not supported");
                      let { hash: f, randomBytes: c } = t,
                        { lowS: h, prehash: p, extraEntropy: b } = o;
                      null == h && (h = !0),
                        (e = ey("msgHash", e)),
                        eX(o),
                        p && (e = ey("prehashed msgHash", f(e)));
                      let v = g(e),
                        x = l(i),
                        E = [m(x), m(v)];
                      if (null != b && !1 !== b) {
                        let e = !0 === b ? c(r.BYTES) : b;
                        E.push(ey("extraEntropy", e));
                      }
                      return {
                        seed: eg(...E),
                        k2sig: function (e) {
                          let t = y(e);
                          if (!u(t)) return;
                          let r = eU(t, n),
                            i = s.BASE.multiply(t).toAffine(),
                            o = a(i.x);
                          if (o === e0) return;
                          let l = a(r * a(v + o * x));
                          if (l === e0) return;
                          let f = (2 * (i.x !== o)) | Number(i.y & e1),
                            c = l;
                          if (h && l > n >> e1) {
                            var p;
                            (c = (p = l) > n >> e1 ? a(-p) : p), (f ^= 1);
                          }
                          return new d(o, c, f);
                        },
                      };
                    })(e, i, o);
                    return (function (e, t, r) {
                      if ("number" != typeof e || e < 2)
                        throw Error("hashLen must be a number");
                      if ("number" != typeof t || t < 2)
                        throw Error("qByteLen must be a number");
                      if ("function" != typeof r)
                        throw Error("hmacFn must be a function");
                      let n = ex(e),
                        i = ex(e),
                        o = 0,
                        a = () => {
                          n.fill(1), i.fill(0), (o = 0);
                        },
                        s = (...e) => r(i, n, ...e),
                        l = (e = ex(0)) => {
                          (i = s(eE([0]), e)),
                            (n = s()),
                            0 !== e.length && ((i = s(eE([1]), e)), (n = s()));
                        },
                        f = () => {
                          if (o++ >= 1e3)
                            throw Error("drbg: tried 1000 values");
                          let e = 0,
                            r = [];
                          for (; e < t; ) {
                            let t = (n = s()).slice();
                            r.push(t), (e += n.length);
                          }
                          return eg(...r);
                        };
                      return (e, t) => {
                        let r;
                        for (a(), l(e); !(r = t(f())); ) l();
                        return a(), r;
                      };
                    })(
                      t.hash.outputLen,
                      t.nByteLength,
                      t.hmac
                    )(f, c);
                  },
                  verify: function (e, r, i, o = v) {
                    let l, f;
                    (r = ey("msgHash", r)), (i = ey("publicKey", i));
                    let { lowS: u, prehash: c, format: h } = o;
                    if ((eX(o), "strict" in o))
                      throw Error("options.strict was renamed to lowS");
                    if (void 0 !== h && "compact" !== h && "der" !== h)
                      throw Error("format must be compact or der");
                    let p = "string" == typeof e || ee(e),
                      y =
                        !p &&
                        !h &&
                        "object" == typeof e &&
                        null !== e &&
                        "bigint" == typeof e.r &&
                        "bigint" == typeof e.s;
                    if (!p && !y)
                      throw Error(
                        "invalid signature, expected Uint8Array, hex string or Signature instance"
                      );
                    try {
                      if ((y && (f = new d(e.r, e.s)), p)) {
                        try {
                          "compact" !== h && (f = d.fromDER(e));
                        } catch (e) {
                          if (!(e instanceof eJ.Err)) throw e;
                        }
                        f || "der" === h || (f = d.fromCompact(e));
                      }
                      l = s.fromHex(i);
                    } catch (e) {
                      return !1;
                    }
                    if (!f || (u && f.hasHighS())) return !1;
                    c && (r = t.hash(r));
                    let { r: b, s: m } = f,
                      w = g(r),
                      x = eU(m, n),
                      E = a(w * x),
                      _ = a(b * x),
                      S = s.BASE.multiplyAndAddUnsafe(l, E, _)?.toAffine();
                    return !!S && a(S.x) === b;
                  },
                  ProjectivePoint: s,
                  Signature: d,
                  utils: {
                    isValidPrivateKey(e) {
                      try {
                        return l(e), !0;
                      } catch (e) {
                        return !1;
                      }
                    },
                    normPrivateKeyToScalar: l,
                    randomPrivateKey: () => {
                      let e = eD(t.n);
                      return (function (e, t, r = !1) {
                        let n = e.length,
                          i = eH(t),
                          o = eD(t);
                        if (n < 16 || n < o || n > 1024)
                          throw Error(
                            "expected " + o + "-1024 bytes of input, got " + n
                          );
                        let a = eP(r ? eh(e) : ec(e), t - ek) + ek;
                        return r ? ep(a, i) : ed(a, i);
                      })(t.randomBytes(e), t.n);
                    },
                    precompute: (e = 8, t = s.BASE) => (
                      t._setWindowSize(e), t.multiply(BigInt(3)), t
                    ),
                  },
                }
              );
            })({
              ...e,
              hash: t,
              hmac: (e, ...r) => E(t, e, b(...r)),
              randomBytes: v,
            });
          return { ...r(t), create: r };
        })(
          {
            a: BigInt(0),
            b: BigInt(7),
            Fp: e7,
            n: e6,
            Gx: BigInt(
              "55066263022277343669578718895168534326250603453777594175500187360389116729240"
            ),
            Gy: BigInt(
              "32670510020758816978083085130507043184471273380659243275938904335757337482424"
            ),
            h: BigInt(1),
            lowS: !0,
            endo: {
              beta: BigInt(
                "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
              ),
              splitScalar: (e) => {
                let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                  r = -e8 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                  n = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                  i = BigInt("0x100000000000000000000000000000000"),
                  o = e4(t * e, e6),
                  a = e4(-r * e, e6),
                  s = eP(e - o * t - a * n, e6),
                  l = eP(-o * r - a * t, e6),
                  f = s > i,
                  u = l > i;
                if ((f && (s = e6 - s), u && (l = e6 - l), s > i || l > i))
                  throw Error("splitScalar: Endomorphism failed, k=" + e);
                return { k1neg: f, k1: s, k2neg: u, k2: l };
              },
            },
          },
          $
        ),
        te = (BigInt(0), {}),
        tt = (e) => e.toRawBytes(!0).slice(1),
        tr = (e) => mod(e, e6),
        tn = e9.ProjectivePoint;
      function ti(e) {
        return (
          e instanceof Uint8Array ||
          (ArrayBuffer.isView(e) && "Uint8Array" === e.constructor.name)
        );
      }
      function to(e, t) {
        return (
          !!Array.isArray(t) &&
          (0 === t.length ||
            (e
              ? t.every((e) => "string" == typeof e)
              : t.every((e) => Number.isSafeInteger(e))))
        );
      }
      function ta(e) {
        if ("function" != typeof e) throw Error("function expected");
        return !0;
      }
      function ts(e, t) {
        if ("string" != typeof t) throw Error(`${e}: string expected`);
        return !0;
      }
      function tl(e) {
        if (!Number.isSafeInteger(e)) throw Error(`invalid integer: ${e}`);
      }
      function tf(e) {
        if (!Array.isArray(e)) throw Error("array expected");
      }
      function tu(e, t) {
        if (!to(!0, t)) throw Error(`${e}: array of strings expected`);
      }
      function tc(...e) {
        let t = (e) => e,
          r = (e, t) => (r) => e(t(r));
        return {
          encode: e.map((e) => e.encode).reduceRight(r, t),
          decode: e.map((e) => e.decode).reduce(r, t),
        };
      }
      function th(e) {
        let t = "string" == typeof e ? e.split("") : e,
          r = t.length;
        tu("alphabet", t);
        let n = new Map(t.map((e, t) => [e, t]));
        return {
          encode: (n) => (
            tf(n),
            n.map((n) => {
              if (!Number.isSafeInteger(n) || n < 0 || n >= r)
                throw Error(
                  `alphabet.encode: digit index outside alphabet "${n}". Allowed: ${e}`
                );
              return t[n];
            })
          ),
          decode: (t) => (
            tf(t),
            t.map((t) => {
              ts("alphabet.decode", t);
              let r = n.get(t);
              if (void 0 === r)
                throw Error(`Unknown letter: "${t}". Allowed: ${e}`);
              return r;
            })
          ),
        };
      }
      function td(e = "") {
        return (
          ts("join", e),
          {
            encode: (t) => (tu("join.decode", t), t.join(e)),
            decode: (t) => (ts("join.decode", t), t.split(e)),
          }
        );
      }
      function tp(e, t, r) {
        if (t < 2)
          throw Error(
            `convertRadix: invalid from=${t}, base cannot be less than 2`
          );
        if (r < 2)
          throw Error(
            `convertRadix: invalid to=${r}, base cannot be less than 2`
          );
        if ((tf(e), !e.length)) return [];
        let n = 0,
          i = [],
          o = Array.from(e, (e) => {
            if ((tl(e), e < 0 || e >= t)) throw Error(`invalid integer: ${e}`);
            return e;
          }),
          a = o.length;
        for (;;) {
          let e = 0,
            s = !0;
          for (let i = n; i < a; i++) {
            let a = o[i],
              l = t * e,
              f = l + a;
            if (!Number.isSafeInteger(f) || l / t !== e || f - a !== l)
              throw Error("convertRadix: carry overflow");
            let u = f / r;
            e = f % r;
            let c = Math.floor(u);
            if (((o[i] = c), !Number.isSafeInteger(c) || c * r + e !== f))
              throw Error("convertRadix: carry overflow");
            s && (c ? (s = !1) : (n = i));
          }
          if ((i.push(e), s)) break;
        }
        for (let t = 0; t < e.length - 1 && 0 === e[t]; t++) i.push(0);
        return i.reverse();
      }
      let ty = (e, t) => (0 === t ? e : ty(t, e % t)),
        tg = (e, t) => e + (t - ty(e, t)),
        tb = (() => {
          let e = [];
          for (let t = 0; t < 40; t++) e.push(2 ** t);
          return e;
        })(),
        tm = tc(
          ((n = 58),
          tl(58),
          {
            encode: (e) => {
              if (!ti(e))
                throw Error("radix.encode input should be Uint8Array");
              return tp(Array.from(e), 256, 58);
            },
            decode: (e) => (
              (function (e, t) {
                if (!to(!1, t)) throw Error(`${e}: array of numbers expected`);
              })("radix.decode", e),
              Uint8Array.from(tp(e, 58, 256))
            ),
          }),
          th("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),
          td("")
        ),
        tw = tc(th("qpzry9x8gf2tvdw0s3jn54khce6mua7l"), td("")),
        tv = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];
      function tx(e) {
        let t = e >> 25,
          r = (0x1ffffff & e) << 5;
        for (let e = 0; e < tv.length; e++) ((t >> e) & 1) == 1 && (r ^= tv[e]);
        return r;
      }
      let tE = e9.ProjectivePoint,
        t_ = ((e) =>
          tc(
            (function (e, t) {
              return (
                tl(4),
                ta(t),
                {
                  encode(r) {
                    if (!ti(r))
                      throw Error(
                        "checksum.encode: input should be Uint8Array"
                      );
                    let n = t(r).slice(0, 4),
                      i = new Uint8Array(r.length + e);
                    return i.set(r), i.set(n, r.length), i;
                  },
                  decode(r) {
                    if (!ti(r))
                      throw Error(
                        "checksum.decode: input should be Uint8Array"
                      );
                    let n = r.slice(0, -e),
                      i = r.slice(-e),
                      o = t(n).slice(0, e);
                    for (let t = 0; t < e; t++)
                      if (o[t] !== i[t]) throw Error("Invalid checksum");
                    return n;
                  },
                }
              );
            })(4, (t) => e(e(t))),
            tm
          ))($);
      function tS(e) {
        return (
          o(e),
          BigInt(
            "0x" +
              (0 === e.length
                ? "0"
                : (function (e) {
                    if ((o(e), c)) return e.toHex();
                    let t = "";
                    for (let r = 0; r < e.length; r++) t += h[e[r]];
                    return t;
                  })(e))
          )
        );
      }
      let tA = y("Bitcoin seed"),
        tB = { private: 0x488ade4, public: 0x488b21e },
        tk = (e) => N($(e)),
        tO = (e) => l(e).getUint32(0, !1),
        tT = (e) => {
          if (!Number.isSafeInteger(e) || e < 0 || e > 0x100000000 - 1)
            throw Error(
              "invalid number, should be from 0 to 2**32-1, got " + e
            );
          let t = new Uint8Array(4);
          return l(t).setUint32(0, e, !1), t;
        };
      class tI {
        get fingerprint() {
          if (!this.pubHash) throw Error("No publicKey set!");
          return tO(this.pubHash);
        }
        get identifier() {
          return this.pubHash;
        }
        get pubKeyHash() {
          return this.pubHash;
        }
        get privateKey() {
          return this.privKeyBytes || null;
        }
        get publicKey() {
          return this.pubKey || null;
        }
        get privateExtendedKey() {
          let e = this.privateKey;
          if (!e) throw Error("No private key");
          return t_.encode(
            this.serialize(this.versions.private, b(new Uint8Array([0]), e))
          );
        }
        get publicExtendedKey() {
          if (!this.pubKey) throw Error("No public key");
          return t_.encode(this.serialize(this.versions.public, this.pubKey));
        }
        static fromMasterSeed(e, t = tB) {
          if ((o(e), 8 * e.length < 128 || 8 * e.length > 512))
            throw Error(
              "HDKey: seed length must be between 128 and 512 bits; 256 bits is advised, got " +
                e.length
            );
          let r = E(X, tA, e);
          return new tI({
            versions: t,
            chainCode: r.slice(32),
            privateKey: r.slice(0, 32),
          });
        }
        static fromExtendedKey(e, t = tB) {
          let r = t_.decode(e),
            n = l(r),
            i = n.getUint32(0, !1),
            o = {
              versions: t,
              depth: r[4],
              parentFingerprint: n.getUint32(5, !1),
              index: n.getUint32(9, !1),
              chainCode: r.slice(13, 45),
            },
            a = r.slice(45),
            s = 0 === a[0];
          if (i !== t[s ? "private" : "public"])
            throw Error("Version mismatch");
          return new tI(
            s ? { ...o, privateKey: a.slice(1) } : { ...o, publicKey: a }
          );
        }
        static fromJSON(e) {
          return tI.fromExtendedKey(e.xpriv);
        }
        constructor(e) {
          if (
            ((this.depth = 0),
            (this.index = 0),
            (this.chainCode = null),
            (this.parentFingerprint = 0),
            !e || "object" != typeof e)
          )
            throw Error("HDKey.constructor must not be called directly");
          if (
            ((this.versions = e.versions || tB),
            (this.depth = e.depth || 0),
            (this.chainCode = e.chainCode || null),
            (this.index = e.index || 0),
            (this.parentFingerprint = e.parentFingerprint || 0),
            !this.depth && (this.parentFingerprint || this.index))
          )
            throw Error(
              "HDKey: zero depth with non-zero index/parent fingerprint"
            );
          if (e.publicKey && e.privateKey)
            throw Error("HDKey: publicKey and privateKey at same time.");
          if (e.privateKey) {
            if (!e9.utils.isValidPrivateKey(e.privateKey))
              throw Error("Invalid private key");
            (this.privKey =
              "bigint" == typeof e.privateKey
                ? e.privateKey
                : tS(e.privateKey)),
              (this.privKeyBytes = (function (e) {
                if ("bigint" != typeof e) throw Error("bigint expected");
                return (function (e) {
                  if ("string" != typeof e)
                    throw Error("hex string expected, got " + typeof e);
                  if (c) return Uint8Array.fromHex(e);
                  let t = e.length,
                    r = t / 2;
                  if (t % 2)
                    throw Error(
                      "hex string expected, got unpadded hex of length " + t
                    );
                  let n = new Uint8Array(r);
                  for (let t = 0, i = 0; t < r; t++, i += 2) {
                    let r = p(e.charCodeAt(i)),
                      o = p(e.charCodeAt(i + 1));
                    if (void 0 === r || void 0 === o)
                      throw Error(
                        'hex string expected, got non-hex character "' +
                          (e[i] + e[i + 1]) +
                          '" at index ' +
                          i
                      );
                    n[t] = 16 * r + o;
                  }
                  return n;
                })(e.toString(16).padStart(64, "0"));
              })(this.privKey)),
              (this.pubKey = e9.getPublicKey(e.privateKey, !0));
          } else if (e.publicKey)
            this.pubKey = tE.fromHex(e.publicKey).toRawBytes(!0);
          else throw Error("HDKey: no public or private key provided");
          this.pubHash = tk(this.pubKey);
        }
        derive(e) {
          if (!/^[mM]'?/.test(e))
            throw Error('Path must start with "m" or "M"');
          if (/^[mM]'?$/.test(e)) return this;
          let t = e.replace(/^[mM]'?\//, "").split("/"),
            r = this;
          for (let e of t) {
            let t = /^(\d+)('?)$/.exec(e),
              n = t && t[1];
            if (!t || 3 !== t.length || "string" != typeof n)
              throw Error("invalid child index: " + e);
            let i = +n;
            if (!Number.isSafeInteger(i) || i >= 0x80000000)
              throw Error("Invalid index");
            "'" === t[2] && (i += 0x80000000), (r = r.deriveChild(i));
          }
          return r;
        }
        deriveChild(e) {
          if (!this.pubKey || !this.chainCode)
            throw Error("No publicKey or chainCode set");
          let t = tT(e);
          if (e >= 0x80000000) {
            let e = this.privateKey;
            if (!e) throw Error("Could not derive hardened child key");
            t = b(new Uint8Array([0]), e, t);
          } else t = b(this.pubKey, t);
          let r = E(X, this.chainCode, t),
            n = tS(r.slice(0, 32)),
            i = r.slice(32);
          if (!e9.utils.isValidPrivateKey(n))
            throw Error("Tweak bigger than curve order");
          let o = {
            versions: this.versions,
            chainCode: i,
            depth: this.depth + 1,
            parentFingerprint: this.fingerprint,
            index: e,
          };
          try {
            if (this.privateKey) {
              let e = eP(this.privKey + n, e9.CURVE.n);
              if (!e9.utils.isValidPrivateKey(e))
                throw Error(
                  "The tweak was out of range or the resulted private key is invalid"
                );
              o.privateKey = e;
            } else {
              let e = tE.fromHex(this.pubKey).add(tE.fromPrivateKey(n));
              if (e.equals(tE.ZERO))
                throw Error(
                  "The tweak was equal to negative P, which made the result key invalid"
                );
              o.publicKey = e.toRawBytes(!0);
            }
            return new tI(o);
          } catch (t) {
            return this.deriveChild(e + 1);
          }
        }
        sign(e) {
          if (!this.privateKey) throw Error("No privateKey set!");
          return o(e, 32), e9.sign(e, this.privKey).toCompactRawBytes();
        }
        verify(e, t) {
          let r;
          if ((o(e, 32), o(t, 64), !this.publicKey))
            throw Error("No publicKey set!");
          try {
            r = e9.Signature.fromCompact(t);
          } catch (e) {
            return !1;
          }
          return e9.verify(r, e, this.publicKey);
        }
        wipePrivateData() {
          return (
            (this.privKey = void 0),
            this.privKeyBytes &&
              (this.privKeyBytes.fill(0), (this.privKeyBytes = void 0)),
            this
          );
        }
        toJSON() {
          return {
            xpriv: this.privateExtendedKey,
            xpub: this.publicExtendedKey,
          };
        }
        serialize(e, t) {
          if (!this.chainCode) throw Error("No chainCode set");
          return (
            o(t, 33),
            b(
              tT(e),
              new Uint8Array([this.depth]),
              tT(this.parentFingerprint),
              tT(this.index),
              this.chainCode,
              t
            )
          );
        }
      }
    },
    98186: (e, t, r) => {
      "use strict";
      r.d(t, { F: () => n });
      let n = (0, r(12644).x)({
        id: 10143,
        name: "Monad Testnet",
        nativeCurrency: {
          name: "Testnet MON Token",
          symbol: "MON",
          decimals: 18,
        },
        rpcUrls: { default: { http: ["https://testnet-rpc.monad.xyz"] } },
        blockExplorers: {
          default: {
            name: "Monad Testnet explorer",
            url: "https://testnet.monadexplorer.com",
          },
        },
        contracts: {
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 251449,
          },
        },
        testnet: !0,
      });
    },
    98302: (e, t, r) => {
      "use strict";
      r.d(t, { n: () => n });
      let n = (0, r(12644).x)({
        id: 137,
        name: "Polygon",
        nativeCurrency: { name: "POL", symbol: "POL", decimals: 18 },
        rpcUrls: { default: { http: ["https://polygon-rpc.com"] } },
        blockExplorers: {
          default: {
            name: "PolygonScan",
            url: "https://polygonscan.com",
            apiUrl: "https://api.polygonscan.com/api",
          },
        },
        contracts: {
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 0x18938b0,
          },
        },
      });
    },
    98417: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }), (t.Lock = void 0);
      class r {
        constructor() {
          (this.permits = 1), (this.promiseResolverQueue = []);
        }
        async acquire() {
          return this.permits > 0
            ? ((this.permits -= 1), Promise.resolve(!0))
            : new Promise((e) => this.promiseResolverQueue.push(e));
        }
        release() {
          if (
            ((this.permits += 1),
            this.permits > 1 && this.promiseResolverQueue.length > 0)
          )
            console.warn(
              "Lock.permits should never be > 0 when there is someone waiting."
            );
          else if (1 === this.permits && this.promiseResolverQueue.length > 0) {
            this.permits -= 1;
            let e = this.promiseResolverQueue.shift();
            e && e(!0);
          }
        }
      }
      t.Lock = r;
    },
    98834: (e, t, r) => {
      "use strict";
      r.d(t, { v: () => i });
      var n = r(68028);
      let i = (0, r(12644).x)({
        ...n.o,
        id: 81457,
        name: "Blast",
        nativeCurrency: { decimals: 18, name: "Ether", symbol: "ETH" },
        rpcUrls: { default: { http: ["https://rpc.blast.io"] } },
        blockExplorers: {
          default: {
            name: "Blastscan",
            url: "https://blastscan.io",
            apiUrl: "https://api.blastscan.io/api",
          },
        },
        contracts: {
          ...n.o.contracts,
          multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 212929,
          },
          l2OutputOracle: {
            1: {
              address: "0x826D1B0D4111Ad9146Eb8941D7Ca2B6a44215c76",
              blockCreated: 0x1268006,
            },
          },
          portal: {
            1: {
              address: "0x0Ec68c5B10F21EFFb74f2A5C61DFe6b08C0Db6Cb",
              blockCreated: 0x1268005,
            },
          },
          l1StandardBridge: {
            1: {
              address: "0x697402166Fbf2F22E970df8a6486Ef171dbfc524",
              blockCreated: 0x1268008,
            },
          },
        },
        sourceId: 1,
      });
    },
  },
]);
